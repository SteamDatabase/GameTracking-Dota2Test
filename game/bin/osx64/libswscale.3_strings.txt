         ->cannot do aligned memory accesses anymore
    !
   $!
 @8X&F>^`
 [A\A]A^A_]
 [A^A_
 [A^]
 fff.
 ffff.
!ffff.
$D<\"B:Zd
%1.3f 
%dx%d -> %dx%d
%dx%d -> %dx%d is invalid scaling dimension
%ibpp not supported by yuv2rgb
%s is not supported as input pixel format
%s is not supported as output pixel format
%s output is not supported with half chroma resolution, switching to full
([A\A]A^A_]
+L$09
+ffffff.
+t$09
, fffff.
--prefix=/Users/buildbot/buildslave/libav_osx/build/dev/build_osx64 --cc=clang --extra-cflags='-m64 -arch x86_64 -W -Wall -g -O2 -fno-strict-aliasing -ffast-math -gdwarf-2 -pipe -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -mmacosx-version-min=10.5 -fasm-blocks' --ld=clang --extra-ldflags='-m64 -arch x86_64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk -mmacosx-version-min=10.5' --enable-shared --disable-static --enable-runtime-cpudetect --disable-all --enable-avcodec --enable-avutil --enable-avresample --enable-avformat --enable-swscale --arch=x86_64 --enable-parser=h264 --enable-decoder='aac,h264,vp8,vp9,gif,vorbis,mp3,flac,alac,pcm*' --enable-demuxer='aac,matroska,gif,ogg,mov,mp3,flac,wav' --enable-hwaccels --enable-vda --disable-decoder=mpeg1video --disable-decoder=mpeg2video --disable-decoder=vc1 --disable-decoder=h263 --enable-libvpx
./libavutil/bswap.h
./libavutil/common.h
./libavutil/x86/emms.h
./libswscale/swscale_internal.h
.ffffff.
/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
/System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore
/System/Library/Frameworks/VideoDecodeAcceleration.framework/Versions/A/VideoDecodeAcceleration
/Users/buildbot/buildslave/libav_osx/build/dev/libswscale/
/Users/buildbot/buildslave/libav_osx/build/dev/libswscale/input.o
/Users/buildbot/buildslave/libav_osx/build/dev/libswscale/options.o
/Users/buildbot/buildslave/libav_osx/build/dev/libswscale/output.o
/Users/buildbot/buildslave/libav_osx/build/dev/libswscale/rgb2rgb.o
/Users/buildbot/buildslave/libav_osx/build/dev/libswscale/swscale.o
/Users/buildbot/buildslave/libav_osx/build/dev/libswscale/swscale_unscaled.o
/Users/buildbot/buildslave/libav_osx/build/dev/libswscale/utils.o
/Users/buildbot/buildslave/libav_osx/build/dev/libswscale/x86/
/Users/buildbot/buildslave/libav_osx/build/dev/libswscale/x86/rgb2rgb.o
/Users/buildbot/buildslave/libav_osx/build/dev/libswscale/x86/swscale.o
/Users/buildbot/buildslave/libav_osx/build/dev/libswscale/x86/yuv2rgb.o
/Users/buildbot/buildslave/libav_osx/build/dev/libswscale/yuv2rgb.o
/usr/lib/libSystem.B.dylib
/usr/lib/libbz2.1.0.dylib
/usr/lib/libgcc_s.1.dylib
/usr/lib/libz.1.dylib
0P(H6V.Np
0[A\A]A^A_]
4T,L2R*Jt
4Vu)H
8888888888888888
8[A\A]A^A_]
8fffff.
9D$l}
9D$l~
;D$d}SL
;KH|.E1
;fff.
=fff.
>fff.
?ffffff.
@@@@@
@@@@@@@@
@fffff.
@loader_path/libavutil.54.dylib
@loader_path/libswscale.3.dylib
AIc|Q
AVSPH
AVSPI
AWAVATSE
AWAVAUATSD
AWAVAUATSH
AWAVSE
AWAVSH
Area Averaging scaler, 
Assertion %s failed at %s:%d
BICUBIC scaler, 
BILINEAR scaler, 
Bicubic spline scaler, 
Cannot allocate memory.
D$ A9F
D$$A9
D$$E1
D$(A9
D$(D9
D$(E1
D$(HcD$
D$0E1
D$0LcZ
D$4Hc
D$4~'Lc
D$8Nc$
D$@Hct$
D$@Lc@
D$@fB
D$DHc
D$D~ Hc
D$D~!Lc
D$HNc
D$XD)
D$\fE
D$hD)
D$|Hc
D+|$|
D;D$d
D;L$p
D;\$d
D;l$x
D;t$X
D;|$$
E\;ETuj
E`;EXub
Exactly one scaler algorithm must be chosen
Experimental scaler, 
FAST_BILINEAR scaler, 
Gaussian scaler, 
H9<$tQ
H9<$u
H9L$ u
H9t$(u
H9|$ u
H[A\A]A^A_]
HcD$(H
HcD$8H
HcD$8Hcl$HH
HcD$HH
HcL$PH
HcL$`H
HcT$@H
Hc\$(1
Hc\$@H
Hcl$8H
Hcl$@H
Hcl$HH
Hcl$`H
Hct$@H
Hct$HHcl$8H
Ic<QIcDQ
L$ D)
L$$Hc
L$(E1
L$(Hc
L$,Hc
L$0D)
L$0E)
L$0fB
L$4E)
L$4Hc
L$8Lc
L$@Hc
L$HHc
L$HLc
L$PHc
L$\Hc
L$hu>
L$hu[
L+|$(
L+|$(H
L9L$ u
L9L$xu
L9\$pL
L9\$pu
L;l$Xu
LT$pH
Lanczos scaler, 
LcD$HD
LcD$HLc|$8
LcL$P
LcT$ Lc\$
LcT$(Lc\$8Lct$01
LcT$0Lc\$8A
LcT$8LcL$HLc\$@K
LcT$@Mc
Lc\$0A
Lc\$8L
Lcd$HH
Lcd$HLcD$8LcL$@
Lcd$HLct$8Lcl$@H
Lcl$8Lc|$@E1
Lcl$H
Lcl$X
Lct$8HcD$@H
Lct$8LcT$0Lc\$@E1
Lct$8Mc
Lct$PI
Lc|$8HcD$@H
Lc|$@1
Lc|$@H
Lc|$PL
Lc|$XHc
Lt$0H
Lt$8H
M0IcU H
MXIcU(H
Nearest Neighbor / POINT scaler, 
No accelerated colorspace conversion found from %s to %s.
O x`H
Offf.
SWScaler
Sinc scaler, 
Slices start in the middle!
SwScaler: reducing / aligning filtersize %d -> %d
T$ fA
T$(E1
T$,Hc
T$0E1
T$4Ii
T$8L)
T$8Lc
T$8tWf
T$@Lc
T$DHc
T$HMc
T$LHc
T$PHc
T$PfB
T$Pfffff.
T$THc
T$\Hc
T$`D9
T$dHc
T$lHc
UAVSE
UAVSH
UAVSLc
UAWAVATS
UAWAVATSA
UAWAVATSD
UAWAVATSE
UAWAVAUATS
UAWAVAUATSA
UAWAVAUATSD
UAWAVAUATSE
UAWAVAUATSH
UAWAVAUATSI
UAWAVAUATSL
UAWAVAUATSM
UAWAVAUATSPA
UAWAVAUATSPD
UAWAVAUATSPE
UAWAVAUATSPI
UAWAVAUATSPM
UAWAVS
UAWAVSH
UAWAVSPI
Unknown format
Warning: dstStride is not aligned!
X[A\A]A^A_]
Xffff.
[A\A]A^A_
[A\A]A^A_]
[A\A^A_
[A\A^A_]
[A^A_
[A^A_]
\$(M)
\$,HcE
\$HHc
\$PHc
\$Pffffff.
\$`Mc
\$hfB
__DATA
__LINKEDIT
__TEXT
___stack_chk_fail
___stack_chk_guard
__bss
__common
__const
__cstring
__dyld
__dyld_func_lookup
__eh_frame
__got
__la_symbol_ptr
__stub_helper
__stubs
__text
__unwind_info
_abgrToA_c
_abort
_av_free
_av_freep
_av_get_bits_per_pixel
_av_get_cpu_flags
_av_get_pix_fmt_name
_av_log
_av_malloc_tracked
_av_mallocz_tracked
_av_opt_set_defaults
_av_pix_fmt_desc_get
_av_pix_fmt_swap_endianness
_b15Mask
_b16Mask
_bgr12beToUV_c
_bgr12beToUV_half_c
_bgr12beToY_c
_bgr12leToUV_c
_bgr12leToUV_half_c
_bgr12leToY_c
_bgr15beToUV_c
_bgr15beToUV_half_c
_bgr15beToY_c
_bgr15leToUV_c
_bgr15leToUV_half_c
_bgr15leToY_c
_bgr16beToUV_c
_bgr16beToUV_half_c
_bgr16beToY_c
_bgr16leToUV_c
_bgr16leToUV_half_c
_bgr16leToY_c
_bgr24ToUV_c
_bgr24ToUV_half_c
_bgr24ToY_c
_bgr24ToYv12Wrapper
_bgr321ToUV_c
_bgr321ToUV_half_c
_bgr321ToY_c
_bgr32ToUV_c
_bgr32ToUV_half_c
_bgr32ToY_c
_bgr48BEToUV_c
_bgr48BEToUV_half_c
_bgr48BEToY_c
_bgr48LEToUV_c
_bgr48LEToUV_half_c
_bgr48LEToY_c
_bgr8torgb8
_blue_15mask
_blue_16mask
_bswap16UV_c
_bswap16Y_c
_ceil
_chrRangeFromJpeg16_c
_chrRangeFromJpeg_c
_chrRangeToJpeg16_c
_chrRangeToJpeg_c
_deinterleaveBytes
_deinterleaveBytes_avx
_deinterleaveBytes_c
_deinterleaveBytes_sse2
_dither_2x2_4
_dither_2x2_8
_dither_8x8_1
_dither_8x8_256
_dither_8x8_3
_dither_8x8_64
_exp2
_ff_M24A
_ff_M24B
_ff_M24C
_ff_abgrToUV_avx
_ff_abgrToUV_sse2
_ff_abgrToY_avx
_ff_abgrToY_sse2
_ff_argbToUV_avx
_ff_argbToUV_sse2
_ff_argbToY_avx
_ff_argbToY_sse2
_ff_bgr24ToUV_avx
_ff_bgr24ToUV_sse2
_ff_bgr24ToUV_ssse3
_ff_bgr24ToY_avx
_ff_bgr24ToY_sse2
_ff_bgr24ToY_ssse3
_ff_bgr2UCoeff
_ff_bgr2UVOffset
_ff_bgr2VCoeff
_ff_bgr2YCoeff
_ff_bgr2YOffset
_ff_bgraToUV_avx
_ff_bgraToUV_sse2
_ff_bgraToY_avx
_ff_bgraToY_sse2
_ff_dither4
_ff_dither8
_ff_dither_4x4_16
_ff_dither_8x8_128
_ff_dither_8x8_220
_ff_dither_8x8_32
_ff_dither_8x8_73
_ff_getSwsFunc
_ff_get_unscaled_swscale
_ff_hscale10to15_4_sse2
_ff_hscale10to15_4_ssse3
_ff_hscale10to15_8_sse2
_ff_hscale10to15_8_ssse3
_ff_hscale10to15_X4_sse2
_ff_hscale10to15_X4_ssse3
_ff_hscale10to15_X8_sse2
_ff_hscale10to15_X8_ssse3
_ff_hscale10to19_4_sse2
_ff_hscale10to19_4_sse4
_ff_hscale10to19_4_ssse3
_ff_hscale10to19_8_sse2
_ff_hscale10to19_8_sse4
_ff_hscale10to19_8_ssse3
_ff_hscale10to19_X4_sse2
_ff_hscale10to19_X4_sse4
_ff_hscale10to19_X4_ssse3
_ff_hscale10to19_X8_sse2
_ff_hscale10to19_X8_sse4
_ff_hscale10to19_X8_ssse3
_ff_hscale16to15_4_sse2
_ff_hscale16to15_4_ssse3
_ff_hscale16to15_8_sse2
_ff_hscale16to15_8_ssse3
_ff_hscale16to15_X4_sse2
_ff_hscale16to15_X4_ssse3
_ff_hscale16to15_X8_sse2
_ff_hscale16to15_X8_ssse3
_ff_hscale16to19_4_sse2
_ff_hscale16to19_4_sse4
_ff_hscale16to19_4_ssse3
_ff_hscale16to19_8_sse2
_ff_hscale16to19_8_sse4
_ff_hscale16to19_8_ssse3
_ff_hscale16to19_X4_sse2
_ff_hscale16to19_X4_sse4
_ff_hscale16to19_X4_ssse3
_ff_hscale16to19_X8_sse2
_ff_hscale16to19_X8_sse4
_ff_hscale16to19_X8_ssse3
_ff_hscale8to15_4_sse2
_ff_hscale8to15_4_ssse3
_ff_hscale8to15_8_sse2
_ff_hscale8to15_8_ssse3
_ff_hscale8to15_X4_sse2
_ff_hscale8to15_X4_ssse3
_ff_hscale8to15_X8_sse2
_ff_hscale8to15_X8_ssse3
_ff_hscale8to19_4_sse2
_ff_hscale8to19_4_sse4
_ff_hscale8to19_4_ssse3
_ff_hscale8to19_8_sse2
_ff_hscale8to19_8_sse4
_ff_hscale8to19_8_ssse3
_ff_hscale8to19_X4_sse2
_ff_hscale8to19_X4_sse4
_ff_hscale8to19_X4_ssse3
_ff_hscale8to19_X8_sse2
_ff_hscale8to19_X8_sse4
_ff_hscale8to19_X8_ssse3
_ff_hscale9to15_4_sse2
_ff_hscale9to15_4_ssse3
_ff_hscale9to15_8_sse2
_ff_hscale9to15_8_ssse3
_ff_hscale9to15_X4_sse2
_ff_hscale9to15_X4_ssse3
_ff_hscale9to15_X8_sse2
_ff_hscale9to15_X8_ssse3
_ff_hscale9to19_4_sse2
_ff_hscale9to19_4_sse4
_ff_hscale9to19_4_ssse3
_ff_hscale9to19_8_sse2
_ff_hscale9to19_8_sse4
_ff_hscale9to19_8_ssse3
_ff_hscale9to19_X4_sse2
_ff_hscale9to19_X4_sse4
_ff_hscale9to19_X4_ssse3
_ff_hscale9to19_X8_sse2
_ff_hscale9to19_X8_sse4
_ff_hscale9to19_X8_ssse3
_ff_nv12ToUV_avx
_ff_nv12ToUV_sse2
_ff_nv21ToUV_avx
_ff_nv21ToUV_sse2
_ff_rgb24ToUV_avx
_ff_rgb24ToUV_sse2
_ff_rgb24ToUV_ssse3
_ff_rgb24ToY_avx
_ff_rgb24ToY_sse2
_ff_rgb24ToY_ssse3
_ff_rgbaToUV_avx
_ff_rgbaToUV_sse2
_ff_rgbaToY_avx
_ff_rgbaToY_sse2
_ff_sws_init_input_funcs
_ff_sws_init_output_funcs
_ff_sws_init_swscale_x86
_ff_uyvyToUV_avx
_ff_uyvyToUV_sse2
_ff_uyvyToY_sse2
_ff_w1111
_ff_yuv2plane1_10_avx
_ff_yuv2plane1_10_sse2
_ff_yuv2plane1_16_avx
_ff_yuv2plane1_16_sse2
_ff_yuv2plane1_16_sse4
_ff_yuv2plane1_8_avx
_ff_yuv2plane1_8_sse2
_ff_yuv2plane1_9_avx
_ff_yuv2plane1_9_sse2
_ff_yuv2planeX_10_avx
_ff_yuv2planeX_10_sse2
_ff_yuv2planeX_10_sse4
_ff_yuv2planeX_16_sse4
_ff_yuv2planeX_8_avx
_ff_yuv2planeX_8_sse2
_ff_yuv2planeX_8_sse4
_ff_yuv2planeX_9_avx
_ff_yuv2planeX_9_sse2
_ff_yuv2planeX_9_sse4
_ff_yuv2rgb_c_init_tables
_ff_yuv2rgb_coeffs
_ff_yuv2rgb_get_func_ptr
_ff_yuv2rgb_init_x86
_ff_yuyvToUV_avx
_ff_yuyvToUV_sse2
_ff_yuyvToY_sse2
_findRgbConvFn
_format_entries
_g15Mask
_g16Mask
_gbr24ptopacked32
_gray8aToPacked24
_gray8aToPacked32
_gray8aToPacked32_1
_green_15mask
_green_16mask
_hScale16To15_c
_hScale16To19_c
_hScale8To15_c
_hScale8To19_c
_hcscale_fast_c
_hcscale_fast_mmxext
_hyscale_fast_c
_hyscale_fast_mmxext
_initFilter
_init_hscaler_mmxext
_interleaveBytes
_interleaveBytes_c
_interleaveBytes_mmx
_interleaveBytes_mmxext
_interleaveBytes_sse2
_lumRangeFromJpeg16_c
_lumRangeFromJpeg_c
_lumRangeToJpeg16_c
_lumRangeToJpeg_c
_mask0010
_mask0100
_mask0110
_mask1001
_mask1101
_mask15b
_mask15g
_mask15r
_mask15rg
_mask15s
_mask16g
_mask16r
_mask24b
_mask24g
_mask24h
_mask24hh
_mask24hhh
_mask24hhhh
_mask24l
_mask24r
_mask32
_mask3215g
_mask3216br
_mask3216g
_mask32a
_mask32b
_mask32g
_mask32r
_memcpy
_memset
_mmap
_mmx_00ffw
_mmx_ff
_mmx_grnmask
_mmx_null
_mmx_one
_mmx_redmask
_monoblack2Y_c
_monowhite2Y_c
_mprotect
_mul3215
_mul3216
_munmap
_nv12ToPlanarWrapper
_nv12ToUV_c
_nv21ToUV_c
_packedCopyWrapper
_packed_16bpc_bswap
_palToRgbWrapper
_palToUV_c
_palToY_c
_pb_03
_pb_07
_pb_e0
_planar2x
_planar2x_3dnow
_planar2x_c
_planar2x_mmxext
_planarCopyWrapper
_planarRgbToRgbWrapper
_planarToNv12Wrapper
_planarToUyvyWrapper
_planarToYuy2Wrapper
_planar_rgb10be_to_uv
_planar_rgb10be_to_y
_planar_rgb10le_to_uv
_planar_rgb10le_to_y
_planar_rgb16be_to_uv
_planar_rgb16be_to_y
_planar_rgb16le_to_uv
_planar_rgb16le_to_y
_planar_rgb9be_to_uv
_planar_rgb9be_to_y
_planar_rgb9le_to_uv
_planar_rgb9le_to_y
_planar_rgb_to_uv
_planar_rgb_to_y
_r15Mask
_r16Mask
_read_ya16be_alpha_c
_read_ya16be_gray_c
_read_ya16le_alpha_c
_read_ya16le_gray_c
_red_15mask
_red_16mask
_reset_ptr
_rgb12beToUV_c
_rgb12beToUV_half_c
_rgb12beToY_c
_rgb12leToUV_c
_rgb12leToUV_half_c
_rgb12leToY_c
_rgb12to15
_rgb12tobgr12
_rgb15beToUV_c
_rgb15beToUV_half_c
_rgb15beToY_c
_rgb15leToUV_c
_rgb15leToUV_half_c
_rgb15leToY_c
_rgb15to16
_rgb15to16_c
_rgb15to16_mmx
_rgb15to16_mmxext
_rgb15to24
_rgb15to32
_rgb15to32_c
_rgb15to32_mmx
_rgb15to32_mmxext
_rgb15tobgr15
_rgb15tobgr16
_rgb15tobgr24
_rgb15tobgr24_c
_rgb15tobgr24_mmx
_rgb15tobgr24_mmxext
_rgb15tobgr32
_rgb16beToUV_c
_rgb16beToUV_half_c
_rgb16beToY_c
_rgb16leToUV_c
_rgb16leToUV_half_c
_rgb16leToY_c
_rgb16to15
_rgb16to15_c
_rgb16to15_mmx
_rgb16to15_mmxext
_rgb16to24
_rgb16to32
_rgb16to32_c
_rgb16to32_mmx
_rgb16to32_mmxext
_rgb16tobgr15
_rgb16tobgr16
_rgb16tobgr24
_rgb16tobgr24_c
_rgb16tobgr24_mmx
_rgb16tobgr24_mmxext
_rgb16tobgr32
_rgb24ToUV_c
_rgb24ToUV_half_c
_rgb24ToY_c
_rgb24to15
_rgb24to15_c
_rgb24to15_mmx
_rgb24to15_mmxext
_rgb24to16
_rgb24to16_c
_rgb24to16_mmx
_rgb24to16_mmxext
_rgb24to32
_rgb24tobgr15
_rgb24tobgr15_c
_rgb24tobgr15_mmx
_rgb24tobgr15_mmxext
_rgb24tobgr16
_rgb24tobgr16_c
_rgb24tobgr16_mmx
_rgb24tobgr16_mmxext
_rgb24tobgr24
_rgb24tobgr24_c
_rgb24tobgr24_mmx
_rgb24tobgr24_mmxext
_rgb24tobgr32
_rgb24tobgr32_c
_rgb24tobgr32_mmx
_rgb24tobgr32_mmxext
_rgb24toyv12
_rgb24toyv12_3dnow
_rgb24toyv12_c
_rgb24toyv12_mmx
_rgb24toyv12_mmxext
_rgb2rgb_init_x86
_rgb321ToUV_c
_rgb321ToUV_half_c
_rgb321ToY_c
_rgb32ToUV_c
_rgb32ToUV_half_c
_rgb32ToY_c
_rgb32to15
_rgb32to15_c
_rgb32to15_mmx
_rgb32to15_mmxext
_rgb32to16
_rgb32to16_c
_rgb32to16_mmx
_rgb32to16_mmxext
_rgb32to24
_rgb32tobgr15
_rgb32tobgr15_c
_rgb32tobgr15_mmx
_rgb32tobgr15_mmxext
_rgb32tobgr16
_rgb32tobgr16_c
_rgb32tobgr16_mmx
_rgb32tobgr16_mmxext
_rgb32tobgr24
_rgb32tobgr24_c
_rgb32tobgr24_mmx
_rgb32tobgr24_mmxext
_rgb48BEToUV_c
_rgb48BEToUV_half_c
_rgb48BEToY_c
_rgb48LEToUV_c
_rgb48LEToUV_half_c
_rgb48LEToY_c
_rgbToPlanarRgbWrapper
_rgbToRgbWrapper
_rgbaToA_c
_shuffle_bytes_0321
_shuffle_bytes_1230
_shuffle_bytes_2103
_shuffle_bytes_2103_c
_shuffle_bytes_2103_mmx
_shuffle_bytes_2103_mmxext
_shuffle_bytes_3012
_shuffle_bytes_3210
_sws_addVec
_sws_allocVec
_sws_alloc_context
_sws_cloneVec
_sws_context_class
_sws_context_to_name
_sws_convVec
_sws_convertPalette8ToPacked24
_sws_convertPalette8ToPacked32
_sws_format_name
_sws_freeContext
_sws_freeFilter
_sws_freeVec
_sws_getCachedContext
_sws_getCachedContext.default_param
_sws_getCoefficients
_sws_getColorspaceDetails
_sws_getConstVec
_sws_getContext
_sws_getDefaultFilter
_sws_getGaussianVec
_sws_getIdentityVec
_sws_get_class
_sws_init_context
_sws_isSupportedEndiannessConversion
_sws_isSupportedInput
_sws_isSupportedOutput
_sws_normalizeVec
_sws_pb_64
_sws_printVec2
_sws_rgb2rgb_init
_sws_scale
_sws_scaleVec
_sws_setColorspaceDetails
_sws_shiftVec
_sws_subVec
_swscale
_swscale.warnedAlready
_swscale_configuration
_swscale_license
_swscale_options
_swscale_version
_updateMMXDitherTables
_uyvyToUV_c
_uyvyToY_c
_uyvyToYuv420Wrapper
_uyvyToYuv422Wrapper
_uyvytoyuv420
_uyvytoyuv420_3dnow
_uyvytoyuv420_c
_uyvytoyuv420_mmx
_uyvytoyuv420_mmxext
_uyvytoyuv422
_uyvytoyuv422_c
_uyvytoyuv422_mmx
_uyvytoyuv422_mmxext
_vu9_to_vu12
_vu9_to_vu12_c
_vu9_to_vu12_mmx
_vu9_to_vu12_mmxext
_yuv2abgr32_full_X_c
_yuv2argb32_full_X_c
_yuv2bgr24_1_c
_yuv2bgr24_1_mmx
_yuv2bgr24_1_mmxext
_yuv2bgr24_2_c
_yuv2bgr24_2_mmx
_yuv2bgr24_2_mmxext
_yuv2bgr24_X_ar_mmx
_yuv2bgr24_X_ar_mmxext
_yuv2bgr24_X_c
_yuv2bgr24_X_mmx
_yuv2bgr24_X_mmxext
_yuv2bgr24_full_X_c
_yuv2bgr48be_1_c
_yuv2bgr48be_2_c
_yuv2bgr48be_X_c
_yuv2bgr48le_1_c
_yuv2bgr48le_2_c
_yuv2bgr48le_X_c
_yuv2bgra32_full_X_c
_yuv2bgrx32_full_X_c
_yuv2gbrp_full_X_c
_yuv2monoblack_1_c
_yuv2monoblack_2_c
_yuv2monoblack_X_c
_yuv2monowhite_1_c
_yuv2monowhite_2_c
_yuv2monowhite_X_c
_yuv2nv12cX_c
_yuv2plane1_10BE_c
_yuv2plane1_10LE_c
_yuv2plane1_16BE_c
_yuv2plane1_16LE_c
_yuv2plane1_8_c
_yuv2plane1_9BE_c
_yuv2plane1_9LE_c
_yuv2planeX_10BE_c
_yuv2planeX_10LE_c
_yuv2planeX_16BE_c
_yuv2planeX_16LE_c
_yuv2planeX_8_c
_yuv2planeX_9BE_c
_yuv2planeX_9LE_c
_yuv2rgb12_1_c
_yuv2rgb12_2_c
_yuv2rgb12_X_c
_yuv2rgb15_1_c
_yuv2rgb15_2_c
_yuv2rgb15_X_c
_yuv2rgb16_1_c
_yuv2rgb16_2_c
_yuv2rgb16_X_c
_yuv2rgb24_1_c
_yuv2rgb24_2_c
_yuv2rgb24_X_c
_yuv2rgb24_full_X_c
_yuv2rgb32_1_mmx
_yuv2rgb32_1_mmxext
_yuv2rgb32_2_mmx
_yuv2rgb32_2_mmxext
_yuv2rgb32_X_ar_mmx
_yuv2rgb32_X_ar_mmxext
_yuv2rgb32_X_mmx
_yuv2rgb32_X_mmxext
_yuv2rgb48be_1_c
_yuv2rgb48be_2_c
_yuv2rgb48be_X_c
_yuv2rgb48le_1_c
_yuv2rgb48le_2_c
_yuv2rgb48le_X_c
_yuv2rgb4_1_c
_yuv2rgb4_2_c
_yuv2rgb4_X_c
_yuv2rgb4b_1_c
_yuv2rgb4b_2_c
_yuv2rgb4b_X_c
_yuv2rgb555_1_mmx
_yuv2rgb555_1_mmxext
_yuv2rgb555_2_mmx
_yuv2rgb555_2_mmxext
_yuv2rgb555_X_ar_mmx
_yuv2rgb555_X_ar_mmxext
_yuv2rgb555_X_mmx
_yuv2rgb555_X_mmxext
_yuv2rgb565_1_mmx
_yuv2rgb565_1_mmxext
_yuv2rgb565_2_mmx
_yuv2rgb565_2_mmxext
_yuv2rgb565_X_ar_mmx
_yuv2rgb565_X_ar_mmxext
_yuv2rgb565_X_mmx
_yuv2rgb565_X_mmxext
_yuv2rgb8_1_c
_yuv2rgb8_2_c
_yuv2rgb8_X_c
_yuv2rgb_c_12_ordered_dither
_yuv2rgb_c_16
_yuv2rgb_c_1_ordered_dither
_yuv2rgb_c_24_bgr
_yuv2rgb_c_24_rgb
_yuv2rgb_c_32
_yuv2rgb_c_48
_yuv2rgb_c_4_ordered_dither
_yuv2rgb_c_4b_ordered_dither
_yuv2rgb_c_8_ordered_dither
_yuv2rgb_c_bgr48
_yuv2rgba32_1_1_c
_yuv2rgba32_1_2_c
_yuv2rgba32_1_X_c
_yuv2rgba32_1_c
_yuv2rgba32_2_c
_yuv2rgba32_X_c
_yuv2rgba32_full_X_c
_yuv2rgbx32_1_1_c
_yuv2rgbx32_1_2_c
_yuv2rgbx32_1_X_c
_yuv2rgbx32_1_c
_yuv2rgbx32_2_c
_yuv2rgbx32_X_c
_yuv2rgbx32_full_X_c
_yuv2uyvy422_1_c
_yuv2uyvy422_2_c
_yuv2uyvy422_X_c
_yuv2xbgr32_full_X_c
_yuv2xrgb32_full_X_c
_yuv2yuyv422_1_c
_yuv2yuyv422_1_mmx
_yuv2yuyv422_1_mmxext
_yuv2yuyv422_2_c
_yuv2yuyv422_2_mmx
_yuv2yuyv422_2_mmxext
_yuv2yuyv422_X_ar_mmx
_yuv2yuyv422_X_ar_mmxext
_yuv2yuyv422_X_c
_yuv2yuyv422_X_mmx
_yuv2yuyv422_X_mmxext
_yuv2yvyu422_1_c
_yuv2yvyu422_2_c
_yuv2yvyu422_X_c
_yuv420_bgr24_mmx
_yuv420_bgr24_mmxext
_yuv420_bgr32_mmx
_yuv420_rgb15_mmx
_yuv420_rgb16_mmx
_yuv420_rgb24_mmx
_yuv420_rgb24_mmxext
_yuv420_rgb32_mmx
_yuv422pToUyvyWrapper
_yuv422pToYuy2Wrapper
_yuv422ptouyvy
_yuv422ptouyvy_c
_yuv422ptouyvy_mmx
_yuv422ptouyvy_mmxext
_yuv422ptoyuy2
_yuv422ptoyuy2_c
_yuv422ptoyuy2_mmx
_yuv422ptoyuy2_mmxext
_yuva2argb_c
_yuva2rgba_c
_yuva420_bgr32_mmx
_yuva420_rgb32_mmx
_yuy2ToUV_c
_yuy2ToY_c
_yuy2toyv12
_yuy2toyv12_c
_yuy2toyv12_mmx
_yuy2toyv12_mmxext
_yuyvToYuv420Wrapper
_yuyvToYuv422Wrapper
_yuyvtoyuv420
_yuyvtoyuv420_3dnow
_yuyvtoyuv420_c
_yuyvtoyuv420_mmx
_yuyvtoyuv420_mmxext
_yuyvtoyuv422
_yuyvtoyuv422_c
_yuyvtoyuv422_mmx
_yuyvtoyuv422_mmxext
_yv12touyvy
_yv12touyvy_c
_yv12touyvy_mmx
_yv12touyvy_mmxext
_yv12toyuy2
_yv12toyuy2_c
_yv12toyuy2_mmx
_yv12toyuy2_mmxext
_yvu9ToYv12Wrapper
_yvu9_to_yuy2
_yvu9_to_yuy2_c
_yvu9_to_yuy2_mmx
_yvu9_to_yuy2_mmxext
_yvy2ToUV_c
`[A\A]A^A_
`[A\A]A^A_]
```ppp`
accurate rounding
accurate_rnd
averaging area
bad dst image pointers
bad src image pointers
bicubic
bicublin
bilinear
bitexact
cfff.
cffff.
chr srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d
d$0ruH
d$8A9
d$|Ic
destination format
destination height
destination range
destination width
dfffff.
dst_format
dst_range
dyld_stub_binding_helper
ehh flags invalid?! 
experimental
fast bilinear
fast_bilinear
ffff.
fffff.
ffffff.
from %s to %s%s 
full chroma input
full chroma interpolation
full chroma interpolation for destination format '%s' not yet implemented
full_chroma_inp
full_chroma_int
gauss
gaussian
h[A\A]A^A_]
input.c
internal error %s -> %s converter
l$ E1
l$8fD
l$PHc
l$`M9
l$pu?A
lanczos
lffff.
libswscale license: LGPL version 2.1 or later
libswscale/input.c
libswscale/options.c
libswscale/output.c
libswscale/rgb2rgb.c
libswscale/rgb2rgb_template.c
libswscale/swscale.c
libswscale/swscale_internal.h
libswscale/swscale_unscaled.c
libswscale/utils.c
libswscale/x86/rgb2rgb.c
libswscale/x86/rgb2rgb_template.c
libswscale/x86/swscale.c
libswscale/x86/swscale_template.c
libswscale/x86/yuv2rgb.c
libswscale/x86/yuv2rgb_template.c
libswscale/yuv2rgb.c
lum srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d
luma BICUBIC / chroma BILINEAR scaler, 
luma bicubic, chroma bilinear
natural bicubic spline
nearest neighbor
neighbor
nfff.
o$.H+
o$/H+
o$HfB
o,AfA
options.c
output width is not a multiple of 32 -> no MMXEXT scaler
output.c
p@@@P
param0
param1
print info
print_info
r%ffffff.
r*ffffff.
r+ff.
r,ff.
r,fff.
r=fffff.
r?ffffff.
rEff.
rFff.
rZffffff.
r^ff.
r_fff.
refffff.
rgb2rgb.c
rgfffff.
rpffff.
scaler flags
scaler param 0
scaler param 1
source format
source height
source range
source width
spline
src_format
src_range
sws_flags
swscale.c
swscale_unscaled.c
swscaler
t$ Hc
t$ HcD$
t$(ffffff.
t$4Hc
t$<Hc
t$@|fE1
t$HHct$
t$PD;T$
t$lA9
t$lHc
t$tHc
t$|Hc
tGffffff.
tLfff.
tLffffff.
t]E9f
twff.
tzfffff.
t|ffff.
u,A9n<u&A9
uED"l$
uIE9~@uC
uLD"\$
uOE9n
uSD"t$
unsupported planar RGB conversion %s -> %s
using 3DNOW
using C
using MMX
using MMXEXT
using unscaled %s -> %s special converter
utils.c
v9ffff.
vfff.
w[A\A]A^A_]
w[A\A^A_
y2ff.
yuv2rgb.c
{@#u	H
|$0E1
|$`D9
|$ff.
|%ff.
|ffff.
~-Mcm
~3fff.
~5Mcd$
~<Mcv
~XLcT$8Mc
~fffff.
