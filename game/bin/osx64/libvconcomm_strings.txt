	You must construct it with ORDERED_CONSTRUCT macro in the dependency resolution function.
	fffff.
        
  (%s, v. %3d) '%s'
 A;\$H
 [A\A^A_]
 [A^]
 ffff.
 open 
!( m_nFlags & FCVAR_NEVER_AS_STRING )
!@`kBSBp `'AYATATAp
!V_stricmp( message.m_Name, m_Pipes[ nPipe ].m_Name.Get() )
!bCreate
!fffff.
!g_pSchemaSystem || g_pSchemaSystem == pSchemaSystem
!m_Pipes[ nPipe ].m_bOpen
!m_Pipes[i].m_pHelper
!m_bStoredSubKey
#fff.
%i %i %i %i
'ffff.
( error_value != SOCKET_ERROR ) && ( error_value != WSAENOTCONN )
([A\A]A^A_]
(intptr_t)pNode % TSLIST_NODE_ALIGNMENT == 0
(m_nRefCount & (uint32)(INTERNAL_IS_CONSTRUCTED | INTERNAL_CONSTRUCTOR_ALLOWED)) == (uint32)INTERNAL_CONSTRUCTOR_ALLOWED
(m_nRefCount & (uint32)INTERNAL_REFCOUNT_MASK) > 0
(m_nRefCount & INTERNAL_LOCKED) != 0
*** ConCommand "%s" (%p) was not unregistered! Shutdown crash imminent!
*** ConVar "%s" was not unregistered! Shutdown crash imminent!
,[A^]
-consoleapp
-nofocus
-vconbuffer
-vconmaxlisten
-vconport
-vconsole
.ETv*H
.Elv*H
/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
/Users/buildbot/buildslave/dota_staging_osx64/build/src/interfaces/interfaces.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/ordered_constructor.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier0/threadtools.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier0/tslist.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/convar.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/fmtstr.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/utlrbtree.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/vconcomm/vcon_pipe.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/socketlib/socketlib.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/configvalue.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/convar.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/keyvalues.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/utlbuffer.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/utlstring.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier2/schemabindings.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier2/tier2.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/vconcomm/sockettransport_compat.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/vconcomm/vconcomm.cpp
/usr/lib/libSystem.B.dylib
/usr/lib/libc++.1.dylib
/usr/lib/libiconv.2.dylib
00 @@@@ 
0000`PP
0[A\A^A_]
0x%016llX
10ConCommand
10IAppSystem
12CEmptyConVar
13IVConPipeHost
14CBaseAppSystemI10IAppSystemE
14CBaseAppSystemI9IVConCommE
14ConCommandBase
15CTier0AppSystemI9IVConCommE
15CTier1AppSystemI9IVConCommLi0EE
15CTier2AppSystemI9IVConCommLi0EE
15CVConCommThread
15IConVarListener
16CDefaultAccessor
16CVConPingMessage
16ICommandCallback
16ILoggingListener
17CVConBasePipeHost
17CVConFocusMessage
18CServicePollThread
18CVConCommThread_PC
20CPostConnectCallback
21IVConCommDataReceived
22IModuleMappingListener
23CVConChannelPokeMessage
23CVConsoleConVarListener
23IConCommandBaseAccessor
24CVConsoleLoggingListener
25CConCommandMemberAccessorI9CVConCommE
26ICommandCompletionCallback
30CVConsoleModuleMappingListener
32IConfigValueRegistrationListener
49S |}
6ConVar
7IConVar
8CFmtStrNILi256ELb0EE
8[A\A]A^A_]
8[A^A_]
9CVConComm
9IVConComm
9S |a
<Unknown Shutdown Context>
<null>
=============== End VConsole Buffered Messages ===============
=============== Excessive Messages Truncacted - Buffer Size: %d bytes ===============
=============== VConsole Buffered Messages ===============
==========================================================
==============================================================
=NAHCu L
=TNRP
>L97t-H
?22CSchemaInstallCallback
@CThread::CThread()
@CThread::Init()
@CThread::IsAlive()
@CThread::IsThreadRunning()
@CThread::Join(unsigned int)
@CThread::OnExit()
@CThread::Sleep(unsigned int)
@CThread::Start(unsigned int, ThreadPriorityEnum_t)
@CThread::WaitForCreateComplete(CThreadEvent*)
@CThread::~CThread()
@CThreadEvent::CThreadEvent(bool)
@CThreadEvent::Reset()
@CThreadEvent::Set()
@CThreadFastMutex::Lock(unsigned long long, unsigned int) volatile
@CThreadSyncObject::Wait(unsigned int)
@CThreadSyncObject::~CThreadSyncObject()
@CVirtualMachineCallStackTranslationEncoder::EnumerateEncodingIndices(bool (*)(CVirtualMachineCallStackTranslationEncoder*, unsigned int, char const*, char const*, unsigned int, void*), void*)
@CVirtualMachineCallStackTranslationEncoder::GetIndexBitMask()
@CVirtualMachineCallStackTranslationEncoder::GetIndexBitShift()
@CVirtualMachineCallStackTranslationEncoder::GetLineOffsetBitMask()
@CVirtualMachineCallStackTranslationEncoder::GetLineOffsetBitShift()
@CVirtualMachineCallStackTranslationEncoder::GetLineOffsetPostShiftedSignBitMask()
@CVirtualMachineCallStackTranslationEncoder::GetVMID()
@LoggingSystem_IsChannelEnabled(int, LoggingVerbosity_t)
@LoggingSystem_Log(int, LoggingSeverity_t, Color, char const*, ...)
@LoggingSystem_Log(int, LoggingSeverity_t, LeafCodeInfo_t const&, Color, char const*, ...)
@LoggingSystem_Log(int, LoggingSeverity_t, LeafCodeInfo_t const&, char const*, ...)
@M96u/H
@[A\A^A_]
@_AssertMsg_ConditionFailed
@_CMemAllocSystemInitialize
@_CommandLine
@_DevMsg
@_IterateCapturedStackAnnotations
@_KeyValuesSystem
@_LOG_GENERAL
@_LoggingSystem_FindChannel
@_LoggingSystem_GetChannel
@_LoggingSystem_GetChannelFlags
@_LoggingSystem_GetFirstChannelID
@_LoggingSystem_GetNextChannelID
@_LoggingSystem_IsChannelEnabled
@_LoggingSystem_Log
@_LoggingSystem_RegisterBackdoorLoggingListener
@_LoggingSystem_RegisterLoggingChannel
@_LoggingSystem_ResetBackdoorLoggingState
@_LoggingSystem_SetChannelFlags
@_LoggingSystem_SetChannelVerbosity
@_Plat_DebugPrint
@_Plat_ExitProcess
@_Plat_FloatTime
@_Plat_GetModuleFilename
@_Plat_IsInDebugSessionRaw
@_Plat_IsRunningOnCustomerMachine
@_Plat_MSTime
@_Plat_ShouldCollectMiniDumpsForFatalErrors
@_Plat_WindowToOsSpecificHandle
@_StackTools_EnumerateKnownLoadedModules
@_StackTools_EnumerateVirtualMachineEncoders
@_StackTools_InstallModuleMappingListener
@_StackTools_RemoveModuleMappingListener
@_ThreadGetCurrentId
@_ThreadInterlockedExchange64
@_ThreadSetDebugNameS2
@_ThreadSleep
@_V_UTF32ToUTF8
@_V_atof
@_V_atoi
@_V_qsort_s
@_V_snprintf
@_V_sscanf
@_V_stricmp_fast
@_V_vsnprintf
@_V_vsnprintfRet
@_Warning
@__GetCallStack_Fast
@__Unwind_Resume
@__V_FileBase
@__V_strncpy
@___bzero
@___cxa_atexit
@___cxa_begin_catch
@___cxa_call_unexpected
@___cxa_guard_abort
@___cxa_guard_acquire
@___cxa_guard_release
@___cxa_pure_virtual
@___error
@___gxx_personality_v0
@___stack_chk_fail
@___stack_chk_guard
@_accept
@_bind
@_close
@_g_Tier1_CRC32Table
@_g_pMemAlloc
@_ioctl
@_listen
@_memchr
@_memcpy
@_memmove
@_memset_pattern16
@_poll
@_raise
@_recv
@_send
@_setsockopt
@_shutdown
@_socket
@_strchr
@_strcmp
@_strcpy
@_strlen
@_wcslen
@dyld_stub_binder
@loader_path
@rpath/libtier0.dylib
@rpath/libvconcomm.dylib
@rpath/libvstdlib.dylib
@std::terminate()
@typeinfo for CThread
@typeinfo for std::bad_alloc
@vtable for __cxxabiv1::__class_type_info
@vtable for __cxxabiv1::__si_class_type_info
@vtable for __cxxabiv1::__vmi_class_type_info
A9V |fA
A9V }	A
A9W }
A;F@|6H
A;FH|6H
A;GH|6H
A;O ~
A;]x|
ADONfA
AINFfA
APPSYSTEM: In ConnectInterfaces(), s_nRegistrationCount is %d!
ARARAp
AWAVATS
AWAVATSA
AWAVATSH
AWAVATSI
AWAVAUATSH
AWAVAUATSPA
AWAVAUATSPD
AWAVAUATSPH
AWAVAUATSPI
AWAVAUATSPL
AWAVAUATSPM
AWAVSH
AWAVSP
AWAVSPA
AWAVSPH
AWAVSPI
AWAVSPL
AWAVSPM
AZBSEp
A[ATAp
AnimGraphEditorUtils001
AnimationSystemUtils_001
AnimationSystem_001
AssetBrowserSystem_001
AssetPreviewSystem_001
AssetSystem001
AssetSystemTest001
BakedLODBuilderMgr001
BenchmarkService001
BinaryProperties_GetValue
C [A^]
CCommand::Tokenize: Encountered command which overflows the argument buffer.. Clamped!
CCommand::Tokenize: Encountered command which overflows the tokenizer buffer.. Skipping!
CDL;e
CFGVf
CFmtStrN<256, false>::CFmtStrN(const char *, ...) [SIZE_BUF = 256, QUIET_TRUNCATION = false]
CHANf
COLORCORRECTION_VERSION_1
CRC32_t CVConComm::GetUniqueIDForChannel(LoggingChannelID_t)
CSocketConnection object must be cleaned up before it can be re-initialized.
CSocketConnection object was not properly cleaned up.
CSocketConnection::~CSocketConnection()
CTSListBase: Misaligned list
CTSListBase::CTSListBase()
CTSQueue corrupt
CTSQueue corruption
CTSQueue: Misaligned node
CTSQueue: Misaligned queue
CTSQueue::Node_t *CTSQueue<VConCommMessage_t *, false>::Pop() [T = VConCommMessage_t *, bTestOptimizer = false]
CTSQueue::Node_t *CTSQueue<VConCommMessage_t *, false>::Push(CTSQueue::Node_t *) [T = VConCommMessage_t *, bTestOptimizer = false]
CTSQueue<VConCommMessage_t *, false>::CTSQueue() [T = VConCommMessage_t *, bTestOptimizer = false]
CTSQueue<VConCommMessage_t *, false>::~CTSQueue() [T = VConCommMessage_t *, bTestOptimizer = false]
CThread::CThread()
CThread::Init()
CThread::IsAlive()
CThread::IsThreadRunning()
CThread::Join(unsigned int)
CThread::OnExit()
CThread::Sleep(unsigned int)
CThread::Start(unsigned int, ThreadPriorityEnum_t)
CThread::WaitForCreateComplete(CThreadEvent*)
CThread::~CThread()
CThreadEvent::CThreadEvent(bool)
CThreadEvent::Reset()
CThreadEvent::Set()
CThreadFastMutex::Lock(unsigned long long, unsigned int) volatile
CThreadSyncObject::Wait(unsigned int)
CThreadSyncObject::~CThreadSyncObject()
CUtlBuffer::CUtlBuffer(const void *, int, int)
CUtlBuffer::CUtlBuffer(int, int, int)
CUtlBuffer::VaPrintf: String overflowed buffer [%llu]
CUtlRBTree overflow with %u elements!
CUtlString::SetDirect does not support resizing strings in place.
CVARf
CVConPipeHelper for pipe %d not unregistered, when CVConBasePipeHost is destroyed!
CVirtualMachineCallStackTranslationEncoder::EnumerateEncodingIndices(bool (*)(CVirtualMachineCallStackTranslationEncoder*, unsigned int, char const*, char const*, unsigned int, void*), void*)
CVirtualMachineCallStackTranslationEncoder::GetIndexBitMask()
CVirtualMachineCallStackTranslationEncoder::GetIndexBitShift()
CVirtualMachineCallStackTranslationEncoder::GetLineOffsetBitMask()
CVirtualMachineCallStackTranslationEncoder::GetLineOffsetBitShift()
CVirtualMachineCallStackTranslationEncoder::GetLineOffsetPostShiftedSignBitMask()
CVirtualMachineCallStackTranslationEncoder::GetVMID()
Can only accept connections on server if socket is in listening state.
Can only be called on server.
Can only listen for connections on server in blank state.
Can only poll read status while listening for connections (server-only) or connected.
Can only poll write status while connecting (client-only) or connected.
Can only read from connected socket.
Can only write to connected socket.
Cannot recover from failed socket shutdown.
Cannot recover from failure in closesocket()
ConVar(%s) defined with infinite float value (%s)
ConVarRef %s doesn't point to an existing ConVar
ConfigurationSystem_001
Connection will timeout in %d seconds...
Construction is only allowed from the resolve function
Could not unregister helper, not registered to this VConsolePipe_t!
Count
CreateInterface
D$HtY
D9sXu
D;{@u
DNMC1
DebugTextureInfo001
DependencyClass::m_pDependencyLL == NULL
DotaCardGameClient_001
Dumps the state of all existing VConsole pipes
Duplicate PIPE_CLOSE message received for pipe (%d|%s)!
Duplicate PIPE_OPEN_ACK message received for pipe (%d|%s)!
Duplicate PIPE_OPEN_REQUEST message received for pipe (%d|%s)!
E;e@u
EXPORTSYSTEM_INTERFACE_VERSION_001
EconItemToolModel_001
Encountered ConCommand '%s' without a callback!
Endpoint index out of range
Endpoint index out of range.
EngineServiceMgr001
EnvironmentMapBuilder_001
EventSystem001
FlattenedSerializersVersion001
FmtStrVSNPrintf truncated to %d without QUIET_TRUNCATION specified! String: "%s"
FmtStrVSNPrintf truncated without QUIET_TRUNCATION specified!
FontManager_001
G8H	p(]
GameResourceServiceClientV001
GameResourceServiceServerV001
GameUIService_001
H	p(]
H	w(]
H!w(]
H[A\A]A^A_]
H[A^A_]
H__ZdaPv
H__ZdlPv
H__Znam
H__Znwm
HammerMapLoader001
HcK@H
HelpSystem_001
HostStateMgr001
I CUtlRBTree<CUtlMap<unsigned int, MessageDataInfo_t *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short, CUtlMap<unsigned int, MessageDataInfo_t *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, MessageDataInfo_t *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<unsigned int, MessageDataInfo_t *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned int, MessageDataInfo_t *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, MessageDataInfo_t *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short>]
IQuickTime001
IcM@H
InputService_001
InputStackSystemVersion001
InputSystemVersion001
InstallSchemaBindings
Intentionally vague touch behavior for %p
Invalid VConsolePipe_t pipe name '%s'! (max %d chars)
Invalid connection type.
Invalid number of allowed connections.
IsValid()
IsValidIndex(i) && (i != InvalidIndex())
IsValidPipe( nPipe )
IsValidPipe( nPipe ) || ( nMessageID == VCONMSG_TOVCON_PIPE_CREATE )
KeyValueCache001
KeyValues *KeyValues::FindKey(const char *, bool)
KeyValues::FindKey called on NULL pointer!
KeyValues::RecursiveSaveToFile: TODO, missing code for TYPE_COLOR.
L90t*H
Localize_001
Log Message
LoggingSystem_IsChannelEnabled(int, LoggingVerbosity_t)
LoggingSystem_Log(int, LoggingSeverity_t, Color, char const*, ...)
LoggingSystem_Log(int, LoggingSeverity_t, LeafCodeInfo_t const&, Color, char const*, ...)
LoggingSystem_Log(int, LoggingSeverity_t, LeafCodeInfo_t const&, char const*, ...)
M96u/H
MATCHFRAMEWORK_001
MODEL_PROCESSING_SCRIPT_INTERFACE_001
MODEL_PROCESSING_SERVICES_INTERFACE_001
MODMf
Make VConsole Foreground(): ReturnToWindow:0x%p, Timeout:%d, UseHostPath:%d
MapListService_001
MaterialUtils_001
Member function called on NULL KeyValues
MeshSystem001
MeshUtils001
Message Version Mismatch: '%s', Expected %d, Got %d
Message received for VConsolePipe_t with no registered helper (%s)
Message received on closed VConsole Pipe! (%s)
Message received on unrecognized VConsolePipe_t!
ModelDocUtils001
NetworkClientService_001
NetworkMessagesVersion001
NetworkP2PService_001
NetworkServerService_001
NetworkService_001
NetworkSystemUtilsVersion001
NetworkSystemVersion001
No VConsole, Ignoring.
Only TCP sockets are implemented at the moment.
Only one helper may be registered per VConsolePipe_t!
Ordered constructor wrapped type has no default constructor.
Ordered object did not begin in a zeroed state
Ordered object's memory was modified prior to construction
OwnedByCurrentThread()
P[A^]
PanoramaTextServices001
PanoramaUIClient001
PanoramaUIEngine001
ParticleSystemMgr002
PhL;u
Physics2 Interface Old v0.5
PhysicsBuilderMgr001
PostProcessingSystem_001
PropertyEditorSystem_001
QueuedLoaderVersion001
RBRAp
RBRBRBRAp
RCPPt6H
RCPPuo9
RegisterConfigValue: Unknown error constructing config value "%s"!
Rejecting registering message '%s'. Already registered to an alternate handler.
Release
RenderDevice003
RenderDeviceMgr001
RenderHardwareConfig002
RenderService_001
RenderSystemSurface001
RenderUtils_001
ResourceCompilerSystem001
ResourceHandleUtils001
ResourceManifestRegistry001
ResourceSystem013
SATAp
SBp SATAp
SBp p
SVMEf
SVMIf
ScaleformUI001
SceneSystem_002
SceneUtils_001
SchemaSystem_001
SchemaTestExternal_One_001
SchemaTestExternal_Two_001
Send can only return zero if zero bytes were given.
ServerUploadGameStats001
SocketErrorCode_t CSocketConnection::CanReadFromEndpoint(int, bool *, timeval &)
SocketErrorCode_t CSocketConnection::CanWriteToEndpoint(int, bool *, timeval &)
SocketErrorCode_t CSocketConnection::Init(ConnectionType_t, SocketProtocol_t)
SocketErrorCode_t CSocketConnection::Listen(uint16, int)
SocketErrorCode_t CSocketConnection::ReadFromEndpoint(int, byte *, int, int *)
SocketErrorCode_t CSocketConnection::TryAcceptIncomingConnection(int *, uint32 *)
SocketErrorCode_t CSocketConnection::WriteToEndpoint(int, byte *, int, int *)
SocketErrorCode_t CreateNonBlockingSocket(SocketProtocol_t, SocketHandle_t *)
SocketState_t CSocketConnection::GetEndpointSocketState(int)
SoundOpSystem001
SoundOpSystemEdit001
SoundService_001
SoundSystem001
Source2Client002
Source2ClientPrediction001
Source2ClientUI001
Source2EngineToClient001
Source2EngineToClientStringTable001
Source2EngineToServer001
Source2EngineToServerStringTable001
Source2GameClients001
Source2GameEntities001
Source2Host001
Source2Server001
Source2ServerSerializers002
StakRaw8H
StatsService_001
SteamAudio001
TBRBRBRAp
TBSAVBRBRBSARBTAp
TCRAp
TCRBWAp
TCUAp
TNRPt
TestScriptMgr001
TextLayout_001
TextMessageMgr_001
ToolFramework2_002
ToolGameSimulationDispatcher_001
ToolGameSimulationSystem_001
ToolSceneNodeFactory_001
ToolScriptManager001
ToolService_001
Unknown protocol.
Unrecognized return value from Winsock recv.
Unrecognized return value from Winsock send.
UserInfoChangeService_001
VApplication001
VAvi001
VBAllocTracker001
VBaseFileSystem011
VBik001
VConComm
VConComm Discarding Oversized Outgoing Message: '%s' (%d bytes)
VConComm Failed To Initialize!
VConComm001
VConCommThread_PC
VConsole Connected.
VConsole Rejecting Message: '%s', No Message Handler Claimed Ownership.
VConsole disconnect
VConsole pipe (%s): '0' is an invalid pipe version number!
VConsole pipe (%s): PIPE_CLOSE message received - PIPE CLOSED
VConsole pipe (%s): create message received, creating new pipe
VConsole pipe (%s): create message received, pipe already exists
VConsole pipe (%s): open ack received - PIPE OPEN
VConsole pipe (%s): open request accepted - PIPE OPEN
VConsole pipe (%s): open request denied
VConsole pipe (%s): open request parried
VConsole pipe (%s): version mismatch! (%d/%d) App & tool do not match - build or synch your BINs!
VConsole pipes (game-side): %d
VConsolePipe_t CVConBasePipeHost::CreatePipe(const char *, uint16)
VDebugService_001
VDmeMakeFileUtils001
VEngineCvar007
VFileSystem017
VGUI_Input005
VGUI_Panel010
VGUI_Scheme010
VGUI_Surface032
VGUI_System010
VGUI_ivgui008
VMDLLIB001
VMaterialSystem2_001
VMediaFoundation001
VNewAsyncFileSystem001
VP4003
VPhysX Interface ResourceMgr v0.1
VPhysics2_Handle_Interface_001
VPhysics2_Interface_001
VProcessUtils002
VProfService_001
VR_001
VRenderDeviceSetupV001
VScript
VScriptDbg
VScriptManager010
VStringTokenSystem001
VisBuilder_001
Waiting For VConsole To Connect...
Warning:  %s = '%s' is infinite, clamping value.
WorkshopSetup001
WorldRendererBuilderMgr001
WorldRendererMgr001
X(t/L
Xbox VDP is not supported on this platform.
[A\A]A^A_]
[A\A^A_]
[A^A_]
_AssertMsg_ConditionFailed
_BinaryProperties_GetValue
_CMemAllocSystemInitialize
_CommandLine
_CreateInterface
_DevMsg
_GetResourceManifestCount
_GetResourceManifests
_InstallSchemaBindings
_IterateCapturedStackAnnotations
_KeyValuesSystem
_LOG_GENERAL
_LoggingSystem_FindChannel
_LoggingSystem_GetChannel
_LoggingSystem_GetChannelFlags
_LoggingSystem_GetFirstChannelID
_LoggingSystem_GetNextChannelID
_LoggingSystem_IsChannelEnabled
_LoggingSystem_Log
_LoggingSystem_RegisterBackdoorLoggingListener
_LoggingSystem_RegisterLoggingChannel
_LoggingSystem_ResetBackdoorLoggingState
_LoggingSystem_SetChannelFlags
_LoggingSystem_SetChannelVerbosity
_Plat_DebugPrint
_Plat_ExitProcess
_Plat_FloatTime
_Plat_GetModuleFilename
_Plat_IsInDebugSessionRaw
_Plat_IsRunningOnCustomerMachine
_Plat_MSTime
_Plat_ShouldCollectMiniDumpsForFatalErrors
_Plat_WindowToOsSpecificHandle
_StackTools_EnumerateKnownLoadedModules
_StackTools_EnumerateVirtualMachineEncoders
_StackTools_InstallModuleMappingListener
_StackTools_RemoveModuleMappingListener
_ThreadGetCurrentId
_ThreadInterlockedExchange64
_ThreadSetDebugNameS2
_ThreadSleep
_V_UTF32ToUTF8
_V_atof
_V_atoi
_V_qsort_s
_V_snprintf
_V_sscanf
_V_stricmp_fast
_V_vsnprintf
_V_vsnprintfRet
_Warning
__DATA
__GetCallStack_Fast
__LINKEDIT
__TEXT
__Unwind_Resume
__V_FileBase
__V_strncpy
___bzero
___cxa_atexit
___cxa_begin_catch
___cxa_call_unexpected
___cxa_guard_abort
___cxa_guard_acquire
___cxa_guard_release
___cxa_pure_virtual
___error
___gxx_personality_v0
___stack_chk_fail
___stack_chk_guard
__bss
__common
__const
__cstring
__data
__gcc_except_tab__TEXT
__got
__la_symbol_ptr
__mod_init_func
__nl_symbol_ptr
__stub_helper
__stubs
__text
__unwind_info
_accept
_bind
_close
_g_Tier1_CRC32Table
_g_pMemAlloc
_ioctl
_listen
_memchr
_memcpy
_memmove
_memset_pattern16
_poll
_raise
_recv
_send
_setsockopt
_shutdown
_socket
_strchr
_strcmp
_strcpy
_strlen
_strnlen
_wcslen
`[A\A^A_]
`h[A\A^A_]
arg%d
auto CKeyValues_Data::Internal_SetSubKey(KeyValues *)::(anonymous class)::operator()() const
auto COrderedConstructor_Create<COrderedInitShutdownRefWrapper<&EarlyInit_Common>, CResolveOrderedFunc<COrderedInitShutdownRefWrapper<&EarlyInit_Common>, &_ORDERED_INIT_SHUTDOWN_WRAPPER_RESOLVEFUNC>, false>::AddRef(bool)::(anonymous class)::operator()() const [T = COrderedInitShutdownRefWrapper<&EarlyInit_Common>, RESOLVECLASS = CResolveOrderedFunc<COrderedInitShutdownRefWrapper<&EarlyInit_Common>, &_ORDERED_INIT_SHUTDOWN_WRAPPER_RESOLVEFUNC>, bCONSTRUCT_ON_FIRST_USE = false]
auto COrderedConstructor_DependencyManagement<COrderedInitShutdownRefWrapper<&EarlyInit_Common> >::InternalConstruct(COrderedConstructor_DependencyManagement<void> *&&)::(anonymous class)::operator()() const [T = COrderedInitShutdownRefWrapper<&EarlyInit_Common>]
auto CThreadFastMutex::AssertOwnedByCurrentThread()::(anonymous class)::operator()() const
bool CCommand::Tokenize(const char *, characterset_t *)
bool CVConBasePipeHost::IsPipeOpen(VConsolePipe_t)
bool CVConBasePipeHost::PipeMessageData(VConsolePipe_t, uint32, uint32, byte *)
bool CVConBasePipeHost::RegisterPipeHelper(VConsolePipe_t, CVConPipeHelper *)
bool InstallSchemaBindings(const char *, ISchemaSystem *)
bufferSize == 0
clear
clearall
closed
commandline
const char *CKeyValues_Data::Internal_GetString(const char *, char *, size_t)
const char *KeyValues::GetName() const
const void *CUtlBuffer::PeekGet(int, int)
dyld_stub_binder
endpointIndex >= 0 && endpointIndex < MAX_SERVER_CONNECTIONS
endpointIndex >= 0 && endpointIndex < MAX_SERVER_CONNECTIONS && ( m_EndpointStates[endpointIndex] == SSTATE_CONNECTION_IN_PROGRESS || m_EndpointStates[endpointIndex] == SSTATE_CONNECTED)
endpointIndex >= 0 && endpointIndex < MAX_SERVER_CONNECTIONS && ( m_EndpointStates[endpointIndex] == SSTATE_LISTENING || m_EndpointStates[endpointIndex] == SSTATE_CONNECTED )
endpointIndex >= 0 && endpointIndex < MAX_SERVER_CONNECTIONS && m_EndpointStates[endpointIndex] == SSTATE_CONNECTED
false
ffff.
fffff.
ffffff.
g_pCVar
global
h[A\A]A^A_]
int CSocketConnection::GetFirstAvailableListeningEndpoint()
int CSocketTransportCompatible::ReadMessages()
int CSocketTransportCompatible::WriteMessages()
int CUtlBuffer::ParseToken(characterset_t *, char *, int, bool)
invalid
libvconcomm.dylib
m_ConnectionType == CT_INDETERMINATE && m_SocketProtocol == SP_INDETERMINATE
m_ConnectionType == CT_SERVER
m_Count == 0
m_Elements.IsValidIterator( it )
m_Elements.IsValidIterator( m_LastAlloc )
m_Elements.IsValidIterator( m_LastAlloc ) || m_NumElements == 0
m_EndpointStates[i] == SSTATE_UNINITIALIZED && m_EndpointSockets[i] == InvalidSocketHandle
m_FirstFree == InvalidIndex()
m_Head.value.pNode != End()
m_Head.value.pNode == m_Tail.value.pNode
m_Head.value.pNode->pNext == End()
m_ListeningSocketState == SSTATE_LISTENING && m_ConnectionType == CT_SERVER
m_ListeningSocketState == SSTATE_UNINITIALIZED && m_ConnectionType == CT_SERVER
m_ListeningSocketState == SSTATE_UNINITIALIZED && m_SocketProtocol == SP_INDETERMINATE && m_ConnectionType == CT_INDETERMINATE
m_Memory.IsIdxValid( Index )
m_Memory.IsIdxValid( Index ) && m_Memory.IsIdxValid( Index + nMaxSize - 1 )
m_Memory.IsIdxValid( Index ) && m_Memory.IsIdxValid( Index + size - 1 )
m_MessageDataInfosMutex.AssertOwnedByCurrentThread()
m_NumElements == 0
m_Pipes[i].m_nVersion == nVersion
m_Root == InvalidIndex()
m_fnChangeCallbacks.Count() == 0
m_iDataType == TYPE_NONE
m_nArgv0Size != 0
m_pCurrentOutgoingMessage->m_nMessageLength > 0
m_pOwner && m_CompletionFunc
m_pOwner && m_Func
m_pParent == this
m_pParent->m_fnCompletionCallback
mffff.
nArgvBufferSize <= COMMAND_MAX_LENGTH
nChars <= MIN( V_strnlen(pValue, nChars) + 1, nChars )
nChars == V_strlen(m_pString)
nFlags >= 0 && nFlags <= UINT8_MAX
nMaxBytesToReceive > 0
nMaxLen > 0
nMessageID == VCONMSG_TOVCON_PIPE_CREATE
nMessageSize > 0
nPipe == m_PipeMap.Count()
nSize != 0
nTries < 10000000
nVersion
numAllowedConnections > 0 && numAllowedConnections <= MAX_SERVER_CONNECTIONS
operator delete(void*)
operator delete[](void*)
operator new(unsigned long)
operator new[](unsigned long)
p   00 
pCallback == NULL
pHVBVBVBVBVBVBVBVBVBVBVBVBVBVBVBVBVBp
pMemory[i] == 0
pName
pSchemaSystem != NULL
pTarget == ( pData + nDataLength )
pipe.m_bOpen
radr://5614542
recv_return_value > 0
s,HcS(H
s_nConnectionCount > 0
s_nDLLIdentifier < 0
s_nDLLIdentifier >= 0
s_nRegistrationCount < ARRAYSIZE(s_pConnectionRegistration)
s_nResourceFCRegisteredCount > 0
send_return_value > 0
size < 1024 * 1024
size >= 0
socketProtocol == SP_TCP
static void CGlobalConfigValueRegistry::HookUpConfigValue(const char *, ConfigType_t, ConfigValueType_t, CConfigValueOptions &&, const void **)
static void ConVarRef::InitDeferredConVarRefs()
std::terminate()
strnlen
t&H9[8tUH
t3ffff.
t<fff.
tMff.
typeinfo for CThread
typeinfo for std::bad_alloc
uGetResourceManifest
uint16 CVConBasePipeHost::PipeVersion(VConsolePipe_t)
uwHcE
vc_exit %s
vcon_pipe_dump
virtual CVConBasePipeHost::~CVConBasePipeHost()
virtual InitReturnVal_t CVConComm::Init()
virtual bool CVConComm::RegisterMessageId(uint32, uint16, IVConCommDataReceived *)
virtual int CConCommandMemberAccessor<CVConComm>::CommandCompletionCallback(const char *, CUtlVector<CUtlString> &) [T = CVConComm]
virtual int ConCommand::AutoCompleteSuggest(const char *, CUtlVector<CUtlString> &)
virtual void CConCommandMemberAccessor<CVConComm>::CommandCallback(const CCommandContext &, const CCommand &) [T = CVConComm]
virtual void CVConsoleLoggingListener::Log(const LoggingContext_t *, const tchar *)
virtual void ConCommand::Dispatch(const CCommandContext &, const CCommand &)
virtual void ConCommandBase::Create(const char *, const char *, int64)
virtual void ConVar::ChangeStringValue(const char *, float)
virtual void ConVar::Create(const char *, const char *, int64, const char *, bool, float, bool, float, FnChangeCallback_t)
virtual void ConVar::InternalSetFloatValue(float)
virtual void ConVar::InternalSetIntValue(int)
virtual void ConVar::InternalSetValue(const char *)
void CKeyValues_Data::Internal_ClearData()
void CKeyValues_Data::Internal_CopyData(const CKeyValues_Data &)
void COrderedConstructor_Create<COrderedInitShutdownRefWrapper<&EarlyInit_Common>, CResolveOrderedFunc<COrderedInitShutdownRefWrapper<&EarlyInit_Common>, &_ORDERED_INIT_SHUTDOWN_WRAPPER_RESOLVEFUNC>, false>::AddRef(bool) [T = COrderedInitShutdownRefWrapper<&EarlyInit_Common>, RESOLVECLASS = CResolveOrderedFunc<COrderedInitShutdownRefWrapper<&EarlyInit_Common>, &_ORDERED_INIT_SHUTDOWN_WRAPPER_RESOLVEFUNC>, bCONSTRUCT_ON_FIRST_USE = false]
void COrderedConstructor_DependencyManagement<COrderedInitShutdownRefWrapper<&EarlyInit_Common> >::InternalLock(bool) [T = COrderedInitShutdownRefWrapper<&EarlyInit_Common>]
void COrderedConstructor_DependencyManagement<COrderedInitShutdownRefWrapper<&EarlyInit_Common> >::Release() [T = COrderedInitShutdownRefWrapper<&EarlyInit_Common>]
void CSocketConnection::ResetEndpoint(int)
void CTSQueue<VConCommMessage_t *, false>::Purge() [T = VConCommMessage_t *, bTestOptimizer = false]
void CUtlBuffer::AddNullTermination()
void CUtlBuffer::Put(const void *, int)
void CUtlBuffer::VaPrintf(const char *, __va_list_tag *)
void CUtlRBTree<CUtlMap<unsigned int, MessageDataInfo_t *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short, CUtlMap<unsigned int, MessageDataInfo_t *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, MessageDataInfo_t *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short> >::FreeNode(I) [T = CUtlMap<unsigned int, MessageDataInfo_t *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned int, MessageDataInfo_t *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, MessageDataInfo_t *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<unsigned int, MessageDataInfo_t *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short, CUtlMap<unsigned int, MessageDataInfo_t *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, MessageDataInfo_t *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short> >::RemoveAll() [T = CUtlMap<unsigned int, MessageDataInfo_t *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned int, MessageDataInfo_t *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, MessageDataInfo_t *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<unsigned int, MessageDataInfo_t *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short, CUtlMap<unsigned int, MessageDataInfo_t *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, MessageDataInfo_t *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short> >::RemoveAt(I) [T = CUtlMap<unsigned int, MessageDataInfo_t *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned int, MessageDataInfo_t *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, MessageDataInfo_t *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short>]
void CUtlString::SetDirect(const char *, int)
void CVConBasePipeHost::ClosePipe(VConsolePipe_t, const char *)
void CVConBasePipeHost::OpenPipe(VConsolePipe_t, const char *)
void CVConBasePipeHost::UnregisterPipeHelper(VConsolePipe_t, CVConPipeHelper *)
void CVConComm::DistributeIncomingMessage(VConCommMessage_t *)
void CallPostConnect()
void CloseSocket(SocketHandle_t *)
void ConVar_Register(int64, IConCommandBaseAccessor *)
void ConVar_Unregister()
void ConnectInterfaces(CreateInterfaceFn *, int)
void DisconnectInterfaces()
void DisconnectTier2Libraries()
void ReconnectInterface(CreateInterfaceFn, const char *, void **)
void RegisterInterface(CreateInterfaceFn, const char *, void **)
vstdlib
vtable for __cxxabiv1::__class_type_info
vtable for __cxxabiv1::__si_class_type_info
vtable for __cxxabiv1::__vmi_class_type_info
x[A\A]A^A_]
{}()':
}HA;EP}
