	Max size allowed : %d Requested : %d
	You must construct it with ORDERED_CONSTRUCT macro in the dependency resolution function.
	fff.
	fffff.
	ffffff.
	w>ffffff.
     
        
                
        %3d %3d %3d %3d %3d %3d %3d %3d
        %4u %4u %4u %4u %4u %4u %4u %4u
    Component %d: %dhx%dv q=%d
    Component %d: dc=%d ac=%d
    with %d x %d thumbnail image
  %-30s : %d
  %-30s : %s
  %-30s : 0x%08x
  0 0
  P0 
  P@ 
  Ss=%d, Se=%d, Ah=%d, Al=%d
  m_osComboVersion: 0x%08x (%d.%d.%d)
 0000
 0@ 00 00 0@
 0@0 P P 
 0@PP@PP`
 0@P`p
 == MSAA Tex %p %s : MSAA RBO is intformat %s (%x)
 == MSAA Tex %p %s : glTexImage2D for flat tex using intformat %s (%x)
 @@ 000
 @pp0
 A9E uOL
 Can't specify initial state of dynamic constant buffers at creation time!
 PP 0
 ReadToken overflow
 SRGB
 [A\A^A_]
 [A^]
 `0P0
 but running with 
 ffff.
 fffff.
 ffffff.
 minimizing storage for tex '%s' [%s] 
!"Allowing insert of dupe without explicit dupe insertion. Fix code callpoint to allow dupes."
!"CUtlMemoryPoolBase::AddNewBlob: mode == UTLMEMORYPOOL_GROW_NONE"
!"CUtlMemoryPoolBase::Alloc: ran out of memory"
!"Can't GetData before issue/start/stop"
!"Can't use CGLMQuery::Begin() on this query"
!"Unknown buffer type"
!"Unsupport image format!"
!"Unsupported destination format for ResolveUsingShaders()"
!"Unsupported format for MSAA resolve"
!"Unsupported format for blit"
!( ( actualSpec.m_nImageFormat == IMAGE_FORMAT_UNKNOWN ) || ( actualSpec.m_nImageFormat == 0xFF ) )
!( height % 4 )
!( m_nFlags & FCVAR_NEVER_AS_STRING )
!( width % 4 )
!1AQaq
!GetStreamBuilder()->HasStreamStarted()
!IsRelevantFieldType( pFieldType )
!IsSingleFieldRestricted()
!bCreate
!curFrame.m_bCompleted
!fff.
!fffff.
!g_pSchemaSystem || g_pSchemaSystem == pSchemaSystem
!g_pTextureManagerBase
!g_pTextureManagerGL
!g_pTextureManagerGLNew
!gestalt_err
!ib.m_bLocked
!m_StreamBuilder.HasStreamStarted()
!m_bInitialized
!m_bIsLocked && ( nMaxSizeInBytes != 0 ) && ( nMaxSizeInBytes <= static_cast<uint>( m_nBufferSize ) )
!m_bLockAttributes
!m_bPerformingQueuedDeletions
!m_bStoredSubKey
!m_bTexStorageSet
!m_displays
!m_modes
!m_pBackingStore
!m_pBase
!m_pConstantDataMemory
!m_pDataMemory
!m_renderers
!multilist || ML
!pBuf || nView < pBuf->GetNumViews()
!pBuff || ( pBuff->m_buffGLTarget == target )
!pCBuf->WasCreatedByContext()
!pTexture->m_nInternalHandle.HasAnyFlags( TEXTURE_IS_WAITING_FOR_BITS )
!pszString || pszString[nChars] == '\0'
!texId.HasAnyFlags( TEXTURE_IS_WAITING_FOR_BITS )
!vb.m_bLocked
""""UUUU
"2BRbr
"fffff.
#3CScs
#OpenGL_ContextCreationFailed
#OpenGL_RequiredExtensionMissing
#OpenGL_UnableToStartGame
#Present
#base
#base is NULL 
#extension GL_ARB_explicit_attrib_location : enable
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
#extension\s+GL_ARB_shading_language_420pack\s*:\s*enable
#fff.
#fffff.
#ffffff.
#include
#include is NULL 
#u!ffff.
#u"ffffff.
#version 140
#version 150
$$ttM
$$uYH
$4DTdt
$ffff.
$fffff.
%05d instances %08d bytes  %08d totbytes  %s
%5EUeu
%d.%d
%d.%d.%d
%d_%d_
%ffff.
%fffff.
%i %i %i %i
%ld%c
%s : %s
%s called for a rendersystem which doesn't use secondary contexts
%s called on an immutable constant buffer
%s/%s
%s: %u total draws
%s: Can't concatenate input layouts with more than %d fields total!
%s: Context supports GLSL version %s
%s: Detected partial buffer update on a device index buffer, this will likely cause a stall!
%s: Detected partial buffer update on a device vertex buffer, this will likely cause a stall!
%s: Exhausted all available dynamic buffers of type (%d), creating a new one.
%s: Lock size is too large!
%s: OpenGL renderer %s
%s: OpenGL vendor %s
%s: Using OpenGL context version %u.%u
%s: string format requested %d chars
%s_%d_%d_%d_%d
&6FVfv
&YA1t	H9
&ffffff.
'7GWgw
'ffff.
( ( GLint ) gGL->glGetUniformLocation( assert_cast< CGLMProgramSeparable* > ( fp )->GetProgramName() , "sampler15" ) ) == 0
( ( key->m_texFlags & GLM_TEX_SAMPLEABLE ) && ( key->m_texGLTarget == GL_TEXTURE_2D_MULTISAMPLE ) ) || ( !( key->m_texFlags & GLM_TEX_SAMPLEABLE ) && ( key->m_texGLTarget == GL_TEXTURE_2D ) )
( ( m_nFlags & (TSPEC_VOLUME_TEXTURE|TSPEC_TEXTURE_ARRAY) ) != 0 ) || ( m_nDepth == 1 )
( ( m_nFlags & TSPEC_VOLUME_TEXTURE ) == 0 ) || ( ( m_nFlags & TSPEC_TEXTURE_ARRAY ) == 0 )
( ( poolType == POOLED_BACKING_STORE_VERTEX_BUFFER ) && ( nSize == RENDER_BUFFER_DYNAMIC_VERTEX_FIXED_SIZE ) ) || ( ( poolType == POOLED_BACKING_STORE_INDEX_BUFFER ) && ( nSize == RENDER_BUFFER_DYNAMIC_INDEX_FIXED_SIZE ) )
( (m_alignment-1) & (uintp)m_pBase ) == 0
( *m_pFBOs )[index]
( GetBufferType() == RENDER_BUFFER_TYPE_DYNAMIC ) || ( nWrittenByteCount % GetVertexSize() == 0 )
( actualSpec.GetArrayCount() % 6 ) == 0
( alignment >= 4 ) && ( m_alignment == alignment )
( g_pSchemaSystem == NULL ) || (s_pSchemaBinding != NULL)
( int )realRendererIndex < GetRendererCount()
( key->m_texFlags & GLM_TEX_MIPPED ) == 0
( key->m_texFlags & GLM_TEX_MIPPED_AUTO ) == 0
( key->m_texFlags & GLM_TEX_RENDERABLE ) != 0
( key->m_texSamples == 2 ) || ( key->m_texSamples == 4 ) || ( key->m_texSamples == 6 ) || ( key->m_texSamples == 8 )
( layout->m_key.m_zSize % 6 ) == 0
( m_layout->m_key.m_texFlags & GLM_TEX_RENDERABLE ) == 0
( n - 1 ) * nBlockSize < num
( nAdapter < GetAdapterCount() )
( nAdapter >= 0 ) && ( nAdapter < GetAdapterCount() )
( nAdapter >= 0 ) && ( nAdapter < m_Adapters.Count() )
( nArrayCount % 6 ) == 0
( nFlags & ( COPY_TEXTURE_FLAGS_FLIP_X | COPY_TEXTURE_FLAGS_FLIP_Y ) ) == 0
( nFlags & CONSTANT_BUFFER_FLAG_PER_FRAME_LIFETIME_POOLED ) != 0
( nIndexOffset % nIndexSize ) == 0
( nMatchDist - 1 ) < ( 1 << BLOCK_COMPRESS_DIST_BITS )
( nMatchLen - BLOCK_COMPRESS_MIN_MATCH_LEN ) < ( 1 << BLOCK_COMPRESS_MATCH_BITS )
( nOffset + nWrittenSizeInBytes ) <= m_nBufferSize
( nViewAlignedSize % GetRequiredViewConstantBufferAlignment() ) == 0
( nViewDataSize % sizeof(float) ) == 0
( pDataSpec->m_nWidth == nSrcDataWidth || pDataSpec->m_nWidth == pActualSpec->m_nWidth ) && ( pDataSpec->m_nHeight == nSrcDataHeight || pDataSpec->m_nHeight == pActualSpec->m_nHeight ) && ( pDataSpec->m_nDepth == nSrcDataDepth || pDataSpec->m_nDepth == pActualSpec->m_nDepth )
( pDst - pSubRegionData ) == nSubRegionByteSize
( x >= 0 ) && ( x < NumCols() )
( y >= 0 ) && ( y < NumRows() )
( z >= 0 ) && ( z < NumSlices() )
(%s): ADD %s = %s
(%s): Setting %s to %s
(*%s*), 
(-@2	
(-d5	
(5H2	
(5|5	
(8HXhx
(=P2	
(A9E(uUM
(GetChar()) == (0)
([A\A]A^A_]
([A^A_]
(fff.
(ffff.
(head && tail) || ((!head) && (!tail))
(int)nType >= 0 && (int)nType <= INT8_MAX
(int)scope >= 0 && (int)scope <= UINT8_MAX
(int)usage >= 0 && (int)usage <= UINT8_MAX
(intp)this % 16 == 0
(intptr_t)pNode % TSLIST_NODE_ALIGNMENT == 0
(m_nRefCount & (uint32)(INTERNAL_IS_CONSTRUCTED | INTERNAL_CONSTRUCTOR_ALLOWED)) == (uint32)INTERNAL_CONSTRUCTOR_ALLOWED
(m_nRefCount & (uint32)INTERNAL_REFCOUNT_MASK) > 0
(m_nRefCount & INTERNAL_LOCKED) != 0
(s_pThisModuleBindingPointer != NULL)
(static_cast<CONTAINER_TYPE *>(pPushNode)->*LINKED_LIST_PTR) == nullptr
(uEHcK
(unknown)
(unsigned int)nCount <= nPixelsRemaining
(void *)m_pObject != NULL
)9IYiy
)ffff.
** CGLMQuery::GetData: can't GetData before issue/start/stop
*** ConCommand "%s" (%p) was not unregistered! Shutdown crash imminent!
*** ConVar "%s" was not unregistered! Shutdown crash imminent!
*** IB "%s": Tried to lock too much memory for subregion (%d>%d)!
*** IL "%s": Unable to create input layout, duplicate name encountered!
*** IL "%s": Unable to create input layout; layout has %d fields, which is more than %d!
*** VB "%s": Tried to lock a GPU-only buffer!
*** VB "%s": Tried to lock too much memory (%d>%d)!
*** VB "%s": Tried to lock too much memory for subregion (%d>%d)!
*** VB "%s": Tried to lock twice without an unlock!
*:JZjz
*ffff.
*ffffff.
*pMaxVertexCount != 0 || g_pRenderDeviceGL->IsDeactivated()
+;K[k{
+C$Lc
+K Hc
+K$Hc
+fffff.
+ffffff.
, "%s"
,$D)kP
,9O;l
,<L\l|
,A9E,uYA
,fff.
,ffff.
,ffffff.
--------------%s
--------------------------------
-------------------------------- context caps for context %08llx
-=M]m}
-autoconfig
-autoconfig_level
-disableboneuniformbuffers
-disallowhwmorph
-dontEvictTextures
-dumpallshaders
-fakeleopard
-forcenovsync
-gl_amd_pinned_memory
-gl_apitrace
-gl_debug
-gl_disable_420pack
-gl_disable_binary_shaders
-gl_disable_buffer_storage
-gl_disable_compressed_texture_pixel_storage
-gl_disable_defer_shader_compiles
-gl_disable_dsa
-gl_disable_immutable_textures
-gl_disable_loop_unrolling
-gl_disable_shared_constant_buffers
-gl_enable_compressed_texture_pixel_storage
-gl_enable_immutable_textures
-gl_enable_pseudobufs
-gl_force_sm30
-gl_nv_bindless_texturing
-gl_osx_check_display_mode
-gl_perf_marker_ado
-gl_perf_marker_gremedy
-gl_perf_marker_khr
-gl_recreate_ubos_on_update
-gl_small_pmbs
-gl_time_shader_compiles
-gl_validate_shader_early
-glcheckerrors
-glmdisabletrustblit
-glmenabletrustblit
-glmrenderer0
-glmrenderer1
-glmrenderer2
-glmrenderer3
-glmspewcaps
-glrenderthreadstack
-ignoredxsupportcfg
-limitvsconst
-maxdxlevel
-maxtextureres
-nogammaramp
-oldtexturestreaming
-preloadtextures
-r_force_secondary_context_support
-r_max_device_threads
-shaderstats
-sse2
-sse3
-sse4
-steam
.>N^n~
.ETv*H
.Elv*H
.M;UU
.fffff.
//ATTRIBMAP-
/?O_o
/System/Library/Extensions/%@.bundle
/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa
/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
/System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics
/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
/System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
/System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL
/Users/buildbot/buildslave/dota_staging_osx64/build/src/_generated_code/rendersystemgl/release/osx64/rendersystemtypes_h_schema.gen_cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/_generated_code/rendersystemgl/release/osx64/sheet_h_schema.gen_cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/_generated_code/rendersystemgl/release/osx64/vtex_file_format_h_schema.gen_cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/bitmap/bitmap.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/bitmap/colorconversion.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/bitmap/imageformat.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/bitmap/psd.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/interfaces/interfaces.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/mathlib/mathlib_base.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/bitmap/floatbitmap.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/ordered_constructor.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/rendersystem/texturebits.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/rendersystem/vtex_file_format.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/resourcefile/introspectedtypemanager.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/resourcefile/resourcestream.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/resourcesystem/iresourcesystem.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/resourcesystem/resourcehandle.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/resourcesystem/resourcesystemhelpers.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/resourcesystem/stronghandle.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/resourcesystem/weakhandle.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/schemalib/schemaclassinfo.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/schemalib/schemadatatraversal.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/schemasystem/schema.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier0/threadtools.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier0/tsfastpushqueue.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier0/tslist.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier0/vprof.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/byteswap.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/convar.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/fmtstr.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/functors.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/memstack.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/tspointerlist.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/utlfixedmemory.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/utlhash.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/utlintrusivelist.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/utllinkedlist.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/utlrbtree.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/utlstring.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/utlstringmap.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/vstdlib/jobthread.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/colorformatbase.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/commandstreambuilder.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/colorformatgl.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/dynamicbuffermgrgl.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/hardwarestategl.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/indexbuffergl.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/indexbuffergl.cpp(90): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/inputlayoutgl.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/inputlayoutgl.cpp(141): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/perfmarkers.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/rendercontextgl.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderdevicegl.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderdevicegl.cpp(1142): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderdevicegl.cpp(1366): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderdevicegl.cpp(1401): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderdevicegl.cpp(1436): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderdevicegl.cpp(1471): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderdevicegl.cpp(1516): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderdevicegl.cpp(1969): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderdevicegl.cpp(1976): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderdevicegl.cpp(2012): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderdevicegl.cpp(2224): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderdevicegl.cpp(2440): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderdevicegl.cpp(355): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderdevicegl.cpp(493): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderdevicegl.cpp(53): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderdevicegl.cpp(581): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderdevicegl.cpp(599): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderdevicegl.cpp(62): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderdevicegl.cpp(71): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderdevicegl.cpp(750): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderdevicegl.cpp(766): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderdevicegl.cpp(80): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderdevicegl.cpp(874): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderdevicegl.cpp(89): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderdevicemgrgl.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderpipelinestatsgl.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderquerygl.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderthreadgl.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/renderthreadgl.cpp(1687): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/texturegl.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/texturegl.cpp(1167): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/texturegl.cpp(504): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/texturegl.cpp(514): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/texturegl.cpp(943): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/texturegl.cpp(95): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/texturegl.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/togl/cglmbuffer.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/togl/cglmfbo.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/togl/cglmprogram.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/togl/cglmquery.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/togl/cglmshader.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/togl/cglmshadercache.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/togl/cglmtex.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/togl/cglmtex.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/togl/glentrypoints.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/togl/glmdisplaydb_osx.mm
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/togl/glmgr.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/togl/glmgr.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/togl/glmgr_flush.inl
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/togl/glmswapchain.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/vertexbuffergl.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/gl/vertexbuffergl.cpp(87): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/indexbufferbase.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/indexbufferbase.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/inputlayoutbase.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/inputlayoutbase.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/occlusionquerymgr.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/rendercontextbase.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/rendercontextbase.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/renderdevicebase.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/renderdevicebase.cpp(1472): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/renderdevicebase.cpp(1630): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/renderdevicebase.cpp(3011): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/renderdevicebase.cpp(626): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/renderdevicebase.cpp(900): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/renderdevicebase.cpp(917): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/renderdevicebase.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/renderdevicemgrbase.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/renderhardwareconfig.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/renderresource.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/renderthreadbase.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/renderthreadbase.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/sheetcache.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/sheetcache.cpp(396): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/texturebase.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/texturebase.cpp(1299):Error loading texture: %s
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/texturebase.cpp(2092):ResourceHandleToData( %s ) failed! Falling back to error texture!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/texturebase.cpp(2135):ResourceHandleToData( %s ) failed! Falling back to error texture!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/texturebase.cpp(2146):ResourceHandleToData( %s ) failed! Falling back to error texture!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/texturebase.cpp(2157):ResourceHandleToData( %s ) failed! Falling back to error texture!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/texturebase.cpp(2168):ResourceHandleToData( %s ) failed! Falling back to error texture!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/texturebase.cpp(2189):ResourceHandleToData( %s ) failed! Falling back to error texture!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/texturebase.cpp(2200):ResourceHandleToData( %s ) failed! Falling back to error texture!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/texturebase.cpp(2211):ResourceHandleToData( %s ) failed! Falling back to error texture!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/texturebase.cpp(2222):ResourceHandleToData( %s ) failed! Falling back to error texture!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/texturebase.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/texturestreaminghelper.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/vertexbufferbase.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/rendersystem/vertexbufferbase.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/resourcefile/externalreferences.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/resourcefile/introspectedtypemanager.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/resourcefile/resourcefile.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/resourcefile/resourcestream.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemalib/schemadatatraversal.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemalib/schemaiterator.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/blockcompress.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/configvalue.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/convar.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/keyvalues.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/mempool.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/memstack.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/strtools.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/utlbuffer.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/utlsoacontainer.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/utlstring.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/utlsymbol.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier2/schemabindings.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier2/tier2.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier2/utlstreambuffer.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_shader_file.cpp
/ffffff.
/usr/lib/libSystem.B.dylib
/usr/lib/libc++.1.dylib
/usr/lib/libiconv.2.dylib
/usr/lib/libobjc.A.dylib
0 0  
0 p` 
00  0
0000000000
00003333
0000`p
00` P@0
0123456789ABCDEF
0: Bilinear, 1: Trilinear, 2: Aniso 2x, 3: Aniso 4x, 4: Aniso 8x, 5: Aniso 16x
0P`  0
0[A\A^A_]
0[A^]
0fff.
0x%016llX
1.2.7
1.5.13
1.5.2
10ConCommand
10IAppSystem
11CFunctorJob
11CRefCountedI20CRefCountServiceBaseILb1E6CRefMTEE
11IRefCounted
123456789
12CDeviceFence
12CEmptyConVar
12CFrameSyncGL
12CFunctorData
12CRefCounted1I11IRefCounted20CRefCountServiceBaseILb1E6CRefMTEE
12CRefCounted1I12CFunctorData20CRefCountServiceBaseILb1E6CRefMTEE
12CRefCounted1I16CFunctorCallback20CRefCountServiceBaseILb1E6CRefMTEE
12CRefCounted1I8CFunctor20CRefCountServiceBaseILb1E6CRefMTEE
12CRenderUtils
12CSwapChainGL
12CTextureBase
12GLMDisplayDB
12IRenderUtils
13CFunctorData1IP10GLMContextE
13CGLMSwapChain
13CHullShaderGL
13CLayoutInsert
13IRenderDevice
14CBaseAppSystemI12IRenderUtilsE
14CBaseAppSystemI16IRenderDeviceMgrE
14CColorFormatGL
14CFrameSyncBase
14CIndexBufferGL
14CPixelShaderGL
14CRenderQueryGL
14CVfxShaderFile
14ConCommandBase
14ISchemaBinding
15CDomainShaderGL
15CGLMProgramBase
15CGLMShaderCache
15CMemberFunctor1IP26CParallelProcessorAbstractI18CParallelProcessorIi27CMemberFuncJobItemProcessorIi11CCallQueueTI8CTSQueueIP8CFunctorLb0EEES8_ELi1EEEMSB_FviEi12CRefCounted1IS5_20CRefCountServiceBaseILb1E6CRefMTEE18CFuncMemPolicyNoneE
15CMemberFunctor4IP19CTextureManagerBaseMS0_FvP25IAsyncResourceDataRequest11CWeakHandleI31InfoForResourceTypeCTextureBaseE22TextureSpecification_tiES3_S6_S7_i12CRefCounted1I8CFunctor20CRefCountServiceBaseILb1E6CRefMTEE18CFuncMemPolicyNoneE
15CMemberFunctor6IP19CTextureManagerBaseMS0_Fv11CWeakHandleI31InfoForResourceTypeCTextureBaseEPvi22TextureSpecification_ti30TextureOnDiskCompressionType_tES4_S5_iS6_iS7_12CRefCounted1I8CFunctor20CRefCountServiceBaseILb1E6CRefMTEE18CFuncMemPolicyNoneE
15CMemberFunctor7IP13CSOAContainerMS0_FviiiiPKS0_iiEiiiiS3_ii12CRefCounted1I8CFunctor20CRefCountServiceBaseILb1E6CRefMTEE18CFuncMemPolicyNoneE
15CRenderDeviceGL
15CRenderResource
15CRenderThreadGL
15CResourceStream
15CTier0AppSystemI12IRenderUtilsE
15CTier0AppSystemI16IRenderDeviceMgrE
15CTier1AppSystemI12IRenderUtilsLi0EE
15CTier1AppSystemI16IRenderDeviceMgrLi0EE
15CTier2AppSystemI12IRenderUtilsLi0EE
15CTier2AppSystemI16IRenderDeviceMgrLi0EE
15CVertexBufferGL
15CVertexShaderGL
16CColorFormatBase
16CDefaultAccessor
16CDeviceFenceBase
16CExtrefTraversal
16CFunctorCallback
16CIndexBufferBase
16CRenderContextGL
16CRenderQueryBase
16CStackAnnotationIPK17CSchemaClassFieldvvvvvvvvE
16ICommandCallback
16IRenderDeviceMgr
17CConstantBufferGL
17CGeometryShaderGL
17CRenderDeviceBase
17CRenderThreadBase
17CTextureManagerGL
17CVertexBufferBase
18CAtomicManipulatorI10CUtlVectorI25VsInputSignatureElement_t10CUtlMemoryIS1_iEEE
18CAtomicManipulatorI14CResourceArrayI15SheetSequence_tEE
18CAtomicManipulatorI14CResourceArrayI17SheetFrameImage_tEE
18CAtomicManipulatorI14CResourceArrayI20SequenceFloatParam_tEE
18CAtomicManipulatorI14CResourceArrayI20SheetSequenceFrame_tEE
18CAtomicManipulatorI15CResourceStringE
18CAtomicManipulatorI16CResourcePointerI7Sheet_tEE
18CAtomicManipulatorI8Vector2DE
18CAtomicManipulatorI8Vector4DE
18CBlendStateCreator
18CGLMShaderPipeline
18CRenderContextBase
18CRenderDeviceMgrGL
18CSchemaEnumBindingI13CubeMapFace_tE
18CSchemaEnumBindingI16RenderSlotType_tE
18CSchemaEnumBindingI19RenderBufferFlags_tE
18CSchemaEnumBindingI21RenderPrimitiveType_tE
18CSchemaEnumBindingI22InputLayoutVariation_tE
18CSchemaEnumBindingI23RenderMultisampleType_tE
18CSchemaEnumBindingI27TextureSpecificationFlags_tE
18CSchemaManipulatorI10CUtlVectorI25VsInputSignatureElement_t10CUtlMemoryIS1_iEEE
18CSchemaManipulatorI14CResourceArrayI15SheetSequence_tEE
18CSchemaManipulatorI14CResourceArrayI17SheetFrameImage_tEE
18CSchemaManipulatorI14CResourceArrayI20SequenceFloatParam_tEE
18CSchemaManipulatorI14CResourceArrayI20SheetSequenceFrame_tEE
18CSchemaManipulatorI15CResourceStringE
18CSchemaManipulatorI16CResourcePointerI7Sheet_tEE
18CSchemaManipulatorI8Vector2DE
18CSchemaManipulatorI8Vector4DE
18CSchemaVisitorBase
18IAtomicManipulator
18ISchemaManipulator
18ITSHashConstructorI24CTextureSequenceRecord_tE
18ITSHashConstructorIP15InputLayoutGL_tE
18ITSHashConstructorIPvE
19CDynamicBufferMgrGL
19CSchemaClassBindingI13TextureDesc_tE
19CSchemaClassBindingI15SheetSequence_tE
19CSchemaClassBindingI15TextureHeader_tE
19CSchemaClassBindingI17SheetFrameImage_tE
19CSchemaClassBindingI18VsInputSignature_tE
19CSchemaClassBindingI20SequenceFloatParam_tE
19CSchemaClassBindingI20SheetSequenceFrame_tE
19CSchemaClassBindingI24RenderInputLayoutField_tE
19CSchemaClassBindingI25VsInputSignatureElement_tE
19CSchemaClassBindingI7Sheet_tE
19CSchemaFieldVisitor
19CSchemaRegistration
19CTextureManagerBase
19IKeyValuesErrorSpew
19IRenderShaderBuffer
19ISchemaSearchTesterIPK16CSchemaClassInfoE
1HcDu
1ffff.
1fffff.
1sysH
20CFunctorCallbackBase
20CGLMProgramSeparable
20CPostConnectCallback
20CRefCountServiceBaseILb1E6CRefMTE
20CRenderDeviceMgrBase
20CResourceStreamFixed
20CTextureManagerGLNew
20IResourceTypeManager
21CRenderHardwareConfig
21CSheetHashConstructor
21CTextureInfoChunkBase
21IRenderHardwareConfig
21IVConCommDataReceived
22CSchemaEnumBindingBase
22CSchemaInstallCallback
22IStreamBuilderCallbackI14CCommandStreamE
22IToolsResourceListener
23CHackRenderShaderBuffer
23CMemberFunctorCallback1I15CRenderDeviceGLP10GLMContext18CFuncMemPolicyNoneE
23CRasterizerStateCreator
23CResourceAllocatorUtils
23CSchemaClassBindingBase
23CTextureStreamingHelper
23IConCommandBaseAccessor
23IResourceAllocatorUtils
24IRenderDeviceMgrBackdoor
25CConCommandMemberAccessorI17CRenderDeviceBaseE
25CConCommandMemberAccessorI19CTextureManagerBaseE
25CDepthStencilStateCreator
25CSchemaVisitorInfoMapBase
26CDefaultKeyValuesErrorSpew
26CReferenceCleanupTraversal
26CSchemaFieldVisitorInfoMapI16CExtrefTraversalE
26ICommandCompletionCallback
27CSchemaUtlVectorManipulatorI10CUtlVectorI25VsInputSignatureElement_t10CUtlMemoryIS1_iEES1_E
28CBaseIntrospectedTypeManager
28ISchemaCollectionManipulator
29C |.
29K }
2DArray
2sysH
31CDefaultIntrospectedTypeManagerILy2019914870E15TextureHeader_tE
32CResourceReferenceFixupTraversal
3333333
34CSchemaRegistration_rendersystemgl
3sysH
40A;w
49K }
49L;s
49S |}
4CJob
4fffff.
4vHct
5basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
6ConVar
7CGLMTex
7IConVar
7bad_function_callE
7ffffff.
8BPSu
8BPSug
8CFmtStrNILi1024ELb1EE
8CFmtStrNILi256ELb0EE
8CFunctor
8[A\A]A^A_]
8[A^A_]
8d  15-Jan-2012
8ffffff.
9C ucH
9C(umH
9C,ue
9G\s81
9S |a
9S |j
9basic_
9fffff.
9q||5H
:ffffff.
;X(u#
;[A^]
;fff.
;ffff.
;~L}k
<(9{ |jI
<1E;}
<AD;}
<NULL>
<\w6H
<error>
<fff.
<need "-dev">
<null>
<unknown multisample type
=8BIMt*1
>15CMemberFunctor6IP13CSOAContainerMS0_FviiiiiDv4_fEiiiiiS2_12CRefCounted1I8CFunctor20CRefCountServiceBaseILb1E6CRefMTEE18CFuncMemPolicyNoneE
>;C ~*H
>L97t-H
?14CSwapChainBase
?14IRenderContext
@ 0     
@8Hc@
@8Hc@XH
@@ @@ 
@@@@@@@@@@
@CThreadEvent::CThreadEvent(bool)
@CThreadEvent::Set()
@CThreadFastMutex::Lock(unsigned long long, unsigned int) volatile
@CThreadMultiWaitEvent::Set()
@CThreadMultiWaitEvent::~CThreadMultiWaitEvent()
@CThreadRWLock_FastRead::CThreadRWLock_FastRead()
@CThreadRWLock_FastRead::HandleFirstWriteLockTransition()
@CThreadRWLock_FastRead::UnlockReadAccounting(unsigned int)
@CThreadRWLock_FastRead::WaitForReadLockTransition(unsigned int)
@CThreadSemaphore::Release(int, int*)
@CThreadSemaphore::~CThreadSemaphore()
@CThreadSpinRWLock::LockForRead()
@CThreadSpinRWLock::SpinLockForWrite(unsigned long long)
@CThreadSpinRWLock::UnlockRead()
@CThreadSpinRWLock::UnlockWrite()
@CThreadSyncObject::Wait(unsigned int)
@CThreadSyncObject::~CThreadSyncObject()
@CVProfNode::EnterScope()
@CVProfNode::ExitScope()
@CVProfNode::GetSubNode(char const*, int, char const*, int)
@DevMsg(char const*, ...)
@DevWarning(char const*, ...)
@IStack_Annotation::IStack_Annotation(CCallStackMarkerBase const&)
@IStack_Annotation::~IStack_Annotation()
@LoggingSystem_Log(int, LoggingSeverity_t, Color, char const*, ...)
@LoggingSystem_Log(int, LoggingSeverity_t, LeafCodeInfo_t const&, char const*, ...)
@M96u/H
@V_stristr_fast(char const*, char const*)
@[A\A^A_]
@[A^]
@_AssertMsg_ConditionFailed
@_CFDataGetBytePtr
@_CFDataGetLength
@_CFDictionaryGetValue
@_CFNumberGetValue
@_CFRelease
@_CGDisplayCurrentMode
@_CGDisplayIOServicePort
@_CGDisplayIsActive
@_CGDisplayIsMain
@_CGDisplayMirrorsDisplay
@_CGGetOnlineDisplayList
@_CGLDescribeRenderer
@_CGLDestroyRendererInfo
@_CGLQueryRendererInfo
@_CGOpenGLDisplayMaskToDisplayID
@_CMemAllocSystemInitialize
@_CommandLine
@_CreateSimpleThread
@_DevMsg
@_Gestalt
@_GetCPUInformation
@_HangWatchdogInternal_BeginScope
@_HangWatchdogInternal_EndScope
@_IOIteratorNext
@_IOObjectRelease
@_IORegistryEntryCreateCFProperty
@_IORegistryEntryGetParentEntry
@_IORegistryEntrySearchCFProperty
@_IOServiceGetMatchingServices
@_IOServiceMatching
@_KeyValuesSystem
@_LOG_GENERAL
@_LoggingSystem_IsChannelEnabled
@_LoggingSystem_Log
@_LoggingSystem_RegisterLoggingChannel
@_MemAlloc_AllocFunc
@_MemAlloc_FreeFunc
@_Msg
@_OBJC_CLASS_$_NSBundle
@_OBJC_CLASS_$_NSString
@_Plat_DebugPrint
@_Plat_DebugString
@_Plat_ExitProcess
@_Plat_FloatTime
@_Plat_GetCPUFrequency
@_Plat_GetClockStart
@_Plat_GetEnv
@_Plat_GetOSType
@_Plat_GetProcAddress
@_Plat_GetThreadIndex
@_Plat_GetWindowClientSize
@_Plat_GlobalMemoryStatus
@_Plat_IsHighDPI
@_Plat_IsInDebugSessionRaw
@_Plat_IsRunningOnCustomerMachine
@_Plat_IsWindowMinimized
@_Plat_LoadModuleRaw
@_Plat_NeedsLowFragmentation
@_Plat_OsSpecificHandleToPlatWindow
@_Plat_ReconfigureWindow
@_Plat_RelativeTicks
@_Plat_SetWindowFullscreenState
@_Plat_SetWindowSize
@_Plat_ShouldCollectMiniDumpsForFatalErrors
@_Plat_TicksAfterSecsF
@_Plat_VirtualAlloc
@_Plat_VirtualFree
@_Plat_WindowToOsSpecificHandle
@_RandomInt
@_ReleaseThreadHandle
@_SDL_CreateWindow
@_SDL_CreateWindowFrom
@_SDL_DestroyWindow
@_SDL_GL_CreateContext
@_SDL_GL_DeleteContext
@_SDL_GL_GetProcAddress
@_SDL_GL_MakeCurrent
@_SDL_GL_SetAttribute
@_SDL_GL_SetSwapInterval
@_SDL_GL_SwapWindow
@_SDL_GL_UnloadLibrary
@_SDL_GetCurrentDisplayMode
@_SDL_GetDisplayBounds
@_SDL_GetDisplayMode
@_SDL_GetError
@_SDL_GetNumDisplayModes
@_SDL_GetNumVideoDisplays
@_SDL_GetWindowSize
@_SDL_SetHint
@_SDL_SetWindowGammaRamp
@_SDL_WasInit
@_SeriousWarning
@_ThreadGetCurrentId
@_ThreadInMainThread
@_ThreadInterlockedExchange64
@_ThreadJoin
@_ThreadYield
@_V_CopyMemory3D
@_V_FixSlashes
@_V_GetErrno
@_V_GetFileExtension
@_V_IsAbsolutePath
@_V_SetErrno
@_V_StripTrailingSlash
@_V_UTF16ToUTF8
@_V_UTF32ToUTF8
@_V_atof
@_V_atoi
@_V_fclose
@_V_fopen
@_V_fprintf
@_V_logf
@_V_powf
@_V_pretifynum
@_V_qsort
@_V_qsort_s
@_V_snprintf
@_V_sscanf
@_V_stricmp_fast
@_V_strlower_fast
@_V_strtod
@_V_strtoi64
@_V_strtoui64
@_V_swscanf
@_V_vscprintf
@_V_vsnprintf
@_V_vsnprintfRet
@_V_vsnprintfSize
@_V_wcstod
@_V_wcstoi64
@_Warning
@__Unwind_Resume
@__V_FixupPathName
@__V_SetExtension
@__V_strncat
@__V_strncpy
@__V_strnicmp_fast
@___CFConstantStringClassReference
@___bzero
@___cxa_allocate_exception
@___cxa_atexit
@___cxa_begin_catch
@___cxa_call_unexpected
@___cxa_end_catch
@___cxa_free_exception
@___cxa_guard_abort
@___cxa_guard_acquire
@___cxa_guard_release
@___cxa_pure_virtual
@___cxa_rethrow
@___cxa_throw
@___gxx_personality_v0
@___memcpy_chk
@___sprintf_chk
@___stack_chk_fail
@___stack_chk_guard
@___stderrp
@___tolower
@_abort
@_atoi
@_ceilf
@_dlclose
@_dlsym
@_exit
@_floor
@_floorf
@_fprintf
@_fputc
@_fread
@_free
@_g_Tier1_CRC32Table
@_g_VProfCurrentProfile
@_g_pMemAlloc
@_g_pThreadPool
@_getenv
@_glGetString
@_kCFAllocatorDefault
@_kIOMasterPortDefault
@_logf
@_longjmp
@_malloc
@_memchr
@_memcmp
@_memcpy
@_memmove
@_memset
@_memset_pattern16
@_objc_msgSend
@_pow
@_printf
@_pthread_mutex_destroy
@_pthread_mutex_init
@_pthread_mutex_lock
@_pthread_mutex_unlock
@_pthread_mutexattr_init
@_pthread_mutexattr_settype
@_putchar
@_raise
@_setjmp
@_sscanf
@_strchr
@_strcmp
@_strcpy
@_strdup
@_strlen
@_strncpy
@_strpbrk
@_strstr
@_wcslen
@`I;@hsx1
@dyld_stub_binder
@loader_path
@loader_path/libSDL2-2.0.0.dylib
@r8Ic
@rpath/librendersystemgl.dylib
@rpath/libtier0.dylib
@rpath/libvstdlib.dylib
@std::__1::__basic_string_common<true>::__throw_length_error() const
@std::__1::__get_classname(char const*, bool)
@std::__1::__get_collation_name(char const*)
@std::__1::__match_any_but_newline<char>::__exec(std::__1::__state<char>&) const
@std::__1::__shared_weak_count::__add_shared()
@std::__1::__shared_weak_count::__release_shared()
@std::__1::__shared_weak_count::~__shared_weak_count()
@std::__1::__vector_base_common<true>::__throw_length_error() const
@std::__1::__vector_base_common<true>::__throw_out_of_range() const
@std::__1::basic_ios<char, std::__1::char_traits<char> >::~basic_ios()
@std::__1::basic_istream<char, std::__1::char_traits<char> >::sentry::sentry(std::__1::basic_istream<char, std::__1::char_traits<char> >&, bool)
@std::__1::basic_istream<char, std::__1::char_traits<char> >::~basic_istream()
@std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry::sentry(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
@std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry::~sentry()
@std::__1::basic_ostream<char, std::__1::char_traits<char> >::~basic_ostream()
@std::__1::basic_streambuf<char, std::__1::char_traits<char> >::basic_streambuf()
@std::__1::basic_streambuf<char, std::__1::char_traits<char> >::imbue(std::__1::locale const&)
@std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setbuf(char*, long)
@std::__1::basic_streambuf<char, std::__1::char_traits<char> >::showmanyc()
@std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sync()
@std::__1::basic_streambuf<char, std::__1::char_traits<char> >::uflow()
@std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsgetn(char*, long)
@std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsputn(char const*, long)
@std::__1::basic_streambuf<char, std::__1::char_traits<char> >::~basic_streambuf()
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init(char const*, unsigned long)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init(unsigned long, char)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(char const*, unsigned long)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::assign(char const*)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, unsigned long, std::__1::allocator<char> const&)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::compare(char const*) const
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(char)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::push_back(char)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::reserve(unsigned long)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::resize(unsigned long, char)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_string()
@std::__1::collate<char>::id
@std::__1::ctype<char>::id
@std::__1::ios_base::__set_badbit_and_consider_rethrow()
@std::__1::ios_base::clear(unsigned int)
@std::__1::ios_base::getloc() const
@std::__1::ios_base::init(void*)
@std::__1::locale::locale()
@std::__1::locale::locale(std::__1::locale const&)
@std::__1::locale::name() const
@std::__1::locale::use_facet(std::__1::locale::id&) const
@std::__1::locale::~locale()
@std::__1::regex_error::regex_error(std::__1::regex_constants::error_type)
@std::__1::regex_error::~regex_error()
@std::exception::what() const
@std::exception::~exception()
@std::terminate()
@typeinfo for IStack_Annotation
@typeinfo for std::__1::__shared_weak_count
@typeinfo for std::__1::bad_function_call
@typeinfo for std::__1::basic_istream<char, std::__1::char_traits<char> >
@typeinfo for std::__1::basic_istringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
@typeinfo for std::__1::basic_ostream<char, std::__1::char_traits<char> >
@typeinfo for std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
@typeinfo for std::__1::basic_streambuf<char, std::__1::char_traits<char> >
@typeinfo for std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >
@typeinfo for std::__1::regex_error
@typeinfo for std::bad_alloc
@typeinfo for std::exception
@typeinfo name for std::__1::bad_function_call
@typeinfo name for std::__1::basic_istringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
@typeinfo name for std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
@typeinfo name for std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >
@virtual thunk to std::__1::basic_istream<char, std::__1::char_traits<char> >::~basic_istream()
@virtual thunk to std::__1::basic_ostream<char, std::__1::char_traits<char> >::~basic_ostream()
@vtable for __cxxabiv1::__class_type_info
@vtable for __cxxabiv1::__si_class_type_info
@vtable for __cxxabiv1::__vmi_class_type_info
A!;I2
A+D$$Hc
A+D$$Lc
A+E$H
A+E$Hc
A+E$Lc
A+E`~)A
A+FH~%A
A+FH~&A
A+G$H
A+G$Hc
A+G$Lc
A+L$$Hc
A+M Hc
A+M$Hc
A+N$Hc
A+O Hc
A+O$Hc
A+]$A9
A9CXu6H
A9C`u>A
A9CduFA
A9E u^L
A9E(ubM
A9E,u[
A9F ~
A9G s6H
A9O,r(
A9T$ }
A9V |fA
A9V }	
A9V }	A
A9\$,
A9^$|
A;AxscA
A;C$}
A;C(~
A;D$ ~
A;D$8|
A;F4s
A;G8|
A;I8v$A
A;L$ u
A;\$@|
A;](vFH
A;]<|
A;]Hu#A
A;]x|
A;^8|
A;_8|
A;_Xu
A;}Pu
ABGR8888
ALIGN_TYPE is wrong, please fix
APPLICATION
APPSYSTEM: In ConnectInterfaces(), s_nRegistrationCount is %d!
ARARAp
ARARB
ARAp8p8p
ARBRAp
ARB]ARB]ARB]ARB]ARB]ARDp
ARB_texture_multisample
ARGB8888
ASARBSAXBRB`
ASARBSAXBSARBSAXBSARBSAXBRB`
ASATAp
ATBRB]Ap
ATCRAp
ATI1N
ATI2N
ATIRadeon
ATIRadeon8500
ATIRadeon9700
ATIRadeonX1000
ATIRadeonX2000
ATIRage128
ATIRagePro
ATI_DST16
ATI_DST24
ATTEMPTED TO DECOMMIT OWNED MEMORY STACK SPACE
AWAVATS
AWAVATSA
AWAVATSD
AWAVATSD9
AWAVATSE
AWAVATSH
AWAVATSI
AWAVATSM
AWAVAUATS
AWAVAUATSA
AWAVAUATSD
AWAVAUATSE
AWAVAUATSH
AWAVAUATSI
AWAVAUATSL
AWAVAUATSP
AWAVAUATSPA
AWAVAUATSPD
AWAVAUATSPE
AWAVAUATSPH
AWAVAUATSPI
AWAVAUATSPL
AWAVAUATSPM
AWAVSA
AWAVSD
AWAVSE
AWAVSH
AWAVSI
AWAVSP
AWAVSPA
AWAVSPH
AWAVSPI
AWAVSPL
AWAVSPM
AYA`"CU0xYASATAp
AZBSAp
A[ATAp
Adobe APP14 marker: version %d, flags 0x%04x 0x%04x, transform %d
Allocated %s per-frame memory stacks (%s max in use), %s allocs in stacks, %s plain
AnimGraphEditorUtils001
AnimationSystemUtils_001
AnimationSystem_001
AppleSW
Application built with libpng-
Application transferred too few scanlines
Application transferred too many scanlines
Arithmetic table 0x%02x was not defined
AssetBrowserSystem_001
AssetPreviewSystem_001
AssetSystem001
AssetSystemTest001
Async compute not supported by this rendersystem.
At marker 0x%02x, recovery action %d
Attempting to create OpenGL context: v%d.%d (%s profile)...
AvailableCommandBufferSpace() >= nSize
BGR565
BGR888
BGR888_BLUESCREEN
BGRA1010102
BGRA4444
BGRA5551
BGRA8888
BGRA8888_LINEAR
BGRX5551
BGRX8888
BGRX8888_LINEAR
BGRsu8L
BGRsuAL
BKbhTb~XBK!;
BSATAp
Backing store not supported
Bad VTEX data for '%s'
Bad expression operator: '%c%c', expected C style boolean expression operator.
Bad expression syntax: '%s', expected a single matching pair of enclosing braces.
Bad expression token: %c
Bailing out of OnBlockForQuery after %.3f seconds
BakedLODBuilderMgr001
Begin: 
BenchmarkService001
Biases the mip level the texture streaming system choses to stream for each texture.
BinaryProperties_GetValue
BindUnordedAccessViews(): Unimplemented on GL!
BindVertexBuffer: You must pass in a valid max vertex count when using with dynamic vertex buffers!
BindVertexBuffer: You must pass in a valid stride when using with dynamic vertex buffers!
Bogus DAC index %d
Bogus DAC value 0x%x
Bogus DHT index %d
Bogus DQT index %d
Bogus Huffman table definition
Bogus JPEG colorspace
Bogus buffer control mode
Bogus input colorspace
Bogus marker length
Bogus message code %d
Bogus sampling factors
Bogus virtual array access
Bound texture to unsupported shader.
Buffer error in compressed datastream
Buffer passed to JPEG library is too small
C 9C uKH
C [A^]
C$H;E
C(9C(uLA
C(H9G(w
C(I;F(
C([A^]
C,+C(A9
C,9C,uNA
C8[A\A^A_]
C;D'4L
C;L'0t
CB: %u buffers, %.2f MB
CBaseIntrospectedTypeManager:  Bindings don't match.
CBaseIntrospectedTypeManager:  Missing TYPEMETA MDiskDataForResourceType
CCIR601 sampling not implemented yet
CClassVisitInfo *CSchemaVisitorInfoMapBase::LookupClass(ClassIntrospectionHandle_t)
CCommandBufferChunk CUtlMemoryPoolMT
CDynamicBufferMgrGL::CDynamicBufferMgrGL(GLMContext *)
CDynamicBufferMgrGL::CDynamicBufferMgrGL: Failed creating shared dynamic buffer!
CDynamicBufferMgrGL::InsertNewDynamicBuffer: Failed creating shared dynamic buffer!
CFBundleGetInfoString
CFallbackTextureGL::CFallbackTextureGL()
CFallbackTextureGL::~CFallbackTextureGL()
CFmtStrN<256, false>::CFmtStrN(const char *, ...) [SIZE_BUF = 256, QUIET_TRUNCATION = false]
CGDisplayCurrentMode failed
CGGetOnlineDisplayList failed with code %d
CGLMBuffer *CDynamicBufferMgrGL::Allocate(GLMBufferType_t, uint, uint *, bool)
CGLMBuffer::CGLMBuffer(GLMContext *, GLMBufferType_t, uint, uint)
CGLMProgramSeparable *GLMContext::NewProgramSeparable(RenderShaderType_t, const char *, const char *)
CGLMQuery::GetData(): Occlusion query flush took %3.3fms!
CGLMQuery::GetData: Failure retrieving occlusion query data! This scenario is not supported in GL.
CGLMShaderPipeline::CGLMShaderPipeline(GLMContext *)
CGLMTex *CTextureManagerGL::GetGLTexture(HRenderTexture, RenderTextureDimension_t)
CGLMTex::CGLMTex(GLMContext *, GLMTexLayout *, const char *)
CHH;CP
CIndexBufferGL::CIndexBufferGL(RenderBufferType_t, const BufferDesc_t &, bool)
CInputLayoutGL::CInputLayoutGL(int, const RenderInputLayoutField_t *, const CRC32_t &, const char *)
CKeyValuesTokenReader::SeekBackOneToken: It is only possible to seek back one token at a time
CLargeCommandBufferChunk CUtlMemoryPoolMT
CMediumCommandBufferChunk CUtlMemoryPoolMT
CMemberFunctorCallback1
COLORCORRECTION_VERSION_1
COpenGLEntryPoints *GetOpenGLEntryPoints(const GLContextVersion_t &)
CRC error
CRPGu
CRenderContextGL:: Cannot resolve from a non-MSAA buffer to an MSAA buffer!
CRenderContextGL:: Tried to resolve 2 textures of differing sizes!
CRenderContextGL:: Tryign to resolve from a rect that is outside of the src rendertarget
CRenderDeviceBase::CRenderDeviceBase()
CRenderDeviceBase::FindOrCreateTexture: Trying to load multiple mipmaps into 3d or array texture: %s
CRenderDeviceBase::InitPerFrameMemoryStack
CRenderDeviceGL::CreateGeometryShader: Geometry shader bytecode is too small
CRenderDeviceGL::CreatePixelShader: Pixel shader bytecode is too small
CRenderDeviceGL::CreateVertexShader: Vertex shader bytecode is too small
CRenderDeviceGL::GetQueryData - Bad query
CRenderQueryGL - Issued a Begin on a non-occlusion query
CRenderQueryGL - Threadsafety problem with query object state!
CRenderQueryGL::BeginQuery - Issued a Begin on a non-occlusion query!
CRenderQueryGL::BeginQuery - Issued on an in-progress query!
CRenderQueryGL::EndQuery - Issued on an in-progress query!
CRenderThreadGL::CreateQueryObject failed
CRenderThreadGL::OnCreateVertexShader: Vertex shader missing //ATTRIBMAP metadata comment.
CResourceArray
CResourcePointer
CResourceStreamFixed: trying to write past the end of allocated memory (new commit %u, allocated %u)
CResourceString
CSOAContainer::SetAttributeType - ERROR, trying to change type of previously-defined attribute %d!
CSwapChainBase::QueuePresentAndWait() looped for %d iterations without a present event.
CTSListBase: Misaligned list
CTSListBase::CTSListBase()
CTSQueue corrupt
CTSQueue corruption
CTSQueue: Misaligned node
CTSQueue: Misaligned queue
CTSQueue::Node_t *CTSQueue<CFunctor *, false>::Pop() [T = CFunctor *, bTestOptimizer = false]
CTSQueue::Node_t *CTSQueue<CFunctor *, false>::Push(CTSQueue::Node_t *) [T = CFunctor *, bTestOptimizer = false]
CTSQueue::Node_t *CTSQueue<CTextureManagerBase::CacheRequest_t, false>::Pop() [T = CTextureManagerBase::CacheRequest_t, bTestOptimizer = false]
CTSQueue::Node_t *CTSQueue<CTextureManagerBase::CacheRequest_t, false>::Push(CTSQueue::Node_t *) [T = CTextureManagerBase::CacheRequest_t, bTestOptimizer = false]
CTSQueue::Node_t *CTSQueue<CWeakHandle<InfoForResourceTypeCTextureBase>, false>::Pop() [T = CWeakHandle<InfoForResourceTypeCTextureBase>, bTestOptimizer = false]
CTSQueue::Node_t *CTSQueue<CWeakHandle<InfoForResourceTypeCTextureBase>, false>::Push(CTSQueue::Node_t *) [T = CWeakHandle<InfoForResourceTypeCTextureBase>, bTestOptimizer = false]
CTSQueue::Node_t *CTSQueue<DynamicIndexBufferHandle_t__ *, false>::Pop() [T = DynamicIndexBufferHandle_t__ *, bTestOptimizer = false]
CTSQueue::Node_t *CTSQueue<DynamicVertexBufferHandle_t__ *, false>::Pop() [T = DynamicVertexBufferHandle_t__ *, bTestOptimizer = false]
CTSQueue::Node_t *CTSQueue<QueuedDisplayListItem_t, false>::Pop() [T = QueuedDisplayListItem_t, bTestOptimizer = false]
CTSQueue::Node_t *CTSQueue<QueuedDisplayListItem_t, false>::Push(CTSQueue::Node_t *) [T = QueuedDisplayListItem_t, bTestOptimizer = false]
CTSQueue<CFunctor *, false>::CTSQueue() [T = CFunctor *, bTestOptimizer = false]
CTSQueue<CFunctor *, false>::~CTSQueue() [T = CFunctor *, bTestOptimizer = false]
CTSQueue<CTextureManagerBase::CacheRequest_t, false>::CTSQueue() [T = CTextureManagerBase::CacheRequest_t, bTestOptimizer = false]
CTSQueue<CTextureManagerBase::CacheRequest_t, false>::~CTSQueue() [T = CTextureManagerBase::CacheRequest_t, bTestOptimizer = false]
CTSQueue<CWeakHandle<InfoForResourceTypeCTextureBase>, false>::CTSQueue() [T = CWeakHandle<InfoForResourceTypeCTextureBase>, bTestOptimizer = false]
CTSQueue<CWeakHandle<InfoForResourceTypeCTextureBase>, false>::~CTSQueue() [T = CWeakHandle<InfoForResourceTypeCTextureBase>, bTestOptimizer = false]
CTSQueue<DynamicIndexBufferHandle_t__ *, false>::CTSQueue() [T = DynamicIndexBufferHandle_t__ *, bTestOptimizer = false]
CTSQueue<DynamicIndexBufferHandle_t__ *, false>::~CTSQueue() [T = DynamicIndexBufferHandle_t__ *, bTestOptimizer = false]
CTSQueue<DynamicVertexBufferHandle_t__ *, false>::CTSQueue() [T = DynamicVertexBufferHandle_t__ *, bTestOptimizer = false]
CTSQueue<DynamicVertexBufferHandle_t__ *, false>::~CTSQueue() [T = DynamicVertexBufferHandle_t__ *, bTestOptimizer = false]
CTSQueue<QueuedDisplayListItem_t, false>::CTSQueue() [T = QueuedDisplayListItem_t, bTestOptimizer = false]
CTSQueue<QueuedDisplayListItem_t, false>::~CTSQueue() [T = QueuedDisplayListItem_t, bTestOptimizer = false]
CTextureInfoId CTextureManagerBase::AllocTextureSlot()
CTextureManagerBase::CTextureManagerBase()
CTextureManagerGL::CTextureManagerGL()
CTextureManagerGL::ComputeTextureObject: Tried to create a depth-stencil texture which is *not* a render target!
CTextureManagerGLNew::CTextureManagerGLNew()
CThreadEvent::CThreadEvent(bool)
CThreadEvent::Set()
CThreadFastMutex::Lock(unsigned long long, unsigned int) volatile
CThreadMultiWaitEvent::Set()
CThreadMultiWaitEvent::~CThreadMultiWaitEvent()
CThreadRWLock_FastRead::CThreadRWLock_FastRead()
CThreadRWLock_FastRead::HandleFirstWriteLockTransition()
CThreadRWLock_FastRead::UnlockReadAccounting(unsigned int)
CThreadRWLock_FastRead::WaitForReadLockTransition(unsigned int)
CThreadSemaphore::Release(int, int*)
CThreadSemaphore::~CThreadSemaphore()
CThreadSpinRWLock::CThreadSpinRWLock()
CThreadSpinRWLock::LockForRead()
CThreadSpinRWLock::SpinLockForWrite(unsigned long long)
CThreadSpinRWLock::UnlockRead()
CThreadSpinRWLock::UnlockWrite()
CThreadSyncObject::Wait(unsigned int)
CThreadSyncObject::~CThreadSyncObject()
CToGLDynamicFunction: Closing library '%s' (%p)
CToGLDynamicFunction: Loading library '%s' (%p)
CToGLDynamicFunction: Lookup of '%s' in '%s': %p
CUBEArray
CUBEMAP_FACE_NEGATIVE_X
CUBEMAP_FACE_NEGATIVE_Y
CUBEMAP_FACE_NEGATIVE_Z
CUBEMAP_FACE_POSITIVE_X
CUBEMAP_FACE_POSITIVE_Y
CUBEMAP_FACE_POSITIVE_Z
CUtlBuffer::CUtlBuffer(const void *, int, int)
CUtlBuffer::CUtlBuffer(int, int, int)
CUtlBuffer::VaPrintf: String overflowed buffer [%llu]
CUtlFixedMemory overflow!
CUtlFixedMemory::Iterator_t CUtlFixedMemory<UtlLinkedListElem_t<BlendStateGL_t, long long> >::Next(const CUtlFixedMemory::Iterator_t &) const [T = UtlLinkedListElem_t<BlendStateGL_t, long long>]
CUtlFixedMemory::Iterator_t CUtlFixedMemory<UtlLinkedListElem_t<COcclusionQueryMgr::OcclusionQueryObject_t, long long> >::Next(const CUtlFixedMemory::Iterator_t &) const [T = UtlLinkedListElem_t<COcclusionQueryMgr::OcclusionQueryObject_t, long long>]
CUtlFixedMemory::Iterator_t CUtlFixedMemory<UtlLinkedListElem_t<CSwapChainBase *, long long> >::Next(const CUtlFixedMemory::Iterator_t &) const [T = UtlLinkedListElem_t<CSwapChainBase *, long long>]
CUtlFixedMemory::Iterator_t CUtlFixedMemory<UtlLinkedListElem_t<DepthStencilStateGL_t, long long> >::Next(const CUtlFixedMemory::Iterator_t &) const [T = UtlLinkedListElem_t<DepthStencilStateGL_t, long long>]
CUtlFixedMemory::Iterator_t CUtlFixedMemory<UtlLinkedListElem_t<RasterizerStateGL_t, long long> >::Next(const CUtlFixedMemory::Iterator_t &) const [T = UtlLinkedListElem_t<RasterizerStateGL_t, long long>]
CUtlLinkedList overflow! (exhausted index range)
CUtlLinkedList overflow! (exhausted memory allocator)
CUtlMemoryPoolBase: Cannot specify 0 elements to grow each time!
CUtlMemoryPoolBase::CUtlMemoryPoolBase(int, int, int, MemoryPoolGrowType_t, const char *)
CUtlMemoryPoolBase::FreeList_t *CUtlMemoryPoolBase::AddNewBlob()
CUtlRBTree overflow with %u elements!
CUtlStreamBuffer does not support TEXT_BUFFER's use CUtlBuffer
CUtlStreamBuffer::CUtlStreamBuffer(const char *, const char *, int, bool, int, int)
CUtlStreamBuffer::Close() Unable to open file %s!
CUtlStreamBuffer::Close() Write %s failed %d != %d.
CUtlString::SetDirect does not support resizing strings in place.
CUtlSymbol CUtlSymbolTable::AddString(const char *)
CUtlVector
CVProfNode *CVProfNode::GetVParent()
CVProfNode::EnterScope()
CVProfNode::ExitScope()
CVProfNode::GetSubNode(char const*, int, char const*, int)
CVertexBufferBase::CVertexBufferBase(RenderBufferType_t, const BufferDesc_t &)
CVertexBufferGL::CVertexBufferGL(RenderBufferType_t, const BufferDesc_t &, bool)
C\x#D9
Call to NULL read function
Can't detect memory size on this platform!
Can't set both read_data_fn and write_data_fn in the same structure
Cannot determine resource type for handle '%s' - schema data not loaded for the referred-to type?
Cannot quantize more than %d color components
Cannot quantize to fewer than %d colors
Cannot quantize to more than %d colors
Cannot transcode due to multiple use of quantization table %d
Caution: quantization tables are too coarse for baseline JPEG
Checked pending presents %s times; waited %s times; abandoned %s times
Chipset version %d %d 
CkeyValuesTokenReader::SeekBackOneToken: No tokens read yet
Closed temporary file %s
Color Bitmap_t::GetColor(int, int) const
Command stream pools: %s bytes in base, %s bytes in medium, %s bytes in large (%s extra data fallbacks)
Compatibility
Compilation failed; no code produced.  Log string from driver:
Component index %d: mismatching sampling ratio %d:%d, %d:%d, %c
Compressed texture decoded in %.2f ms
Compute shaders unimplemented in GL
Compute shaders unsupported in GL
ConVar(%s) defined with infinite float value (%s)
ConVarRef %s doesn't point to an existing ConVar
Conditional Error: %s
ConfigurationSystem_001
ConstantBufferHandle_t CRenderDeviceBase::AcquirePooledDynamicConstantBuffer(uint32, uint32, uint32, int, uint)
ConstantBufferHandle_t CSheetDataTextureCache::GetSequenceTextureDataConstantBuffer(HRenderTexture)
Construction is only allowed from the resolve function
ConvertJpegToRGB
ConvertRGBToRGBAImage
CopyAttrFrom
Copyright (C) 2012, Thomas G. Lane, Guido Vollbeding
Corrupt JPEG data: %u extraneous bytes before marker 0x%02x
Corrupt JPEG data: bad Huffman code
Corrupt JPEG data: bad arithmetic code
Corrupt JPEG data: found marker 0x%02x instead of RST%d
Corrupt JPEG data: premature end of data segment
Could not find Semantic "%s" in available list: %s
Could not find required OpenGL entry point '%s'!
Count
CreateDevice: Requested DX level %d, clamped to DX level %d
CreateGPUBuffer(): Unimplemented in GL!
CreateGPUBufferFormatted(): Unimplemented in GL!
CreateInterface
CubeMapFace_t
D$ f.
D$ fA
D$"D9
D$$Hc
D$$L9
D$$fA
D$(H9
D$(fA
D$,fA
D$0L9
D$0fA
D$@H9
D',Hc
D)c L
D15S1
D16_SHADOW
D24FS8
D24S8
D24X4S4
D24X8
D24X8_SHADOW
D5(D9
D9 t5H
D9k s*H
D9sXu
D9sls*H
D9{ s*H
D9{ sGL
D;#t.
D;cdt.H
D;xHu@
DATAL
DCT coefficient out of range
DCT scaled block size %dx%d not supported
DDDDUUUU
DEPRECATION
DM96u/H
DNEIt
DNEIu
DXT1_ONEBITALPHA
DXT5_NM
Data error in compressed datastream
DebugTextureInfo001
Decompression Error
Decompression error
Deferred Compile Time: %llu ms (Count: %d) 
Define Arithmetic Table 0x%02x: 0x%02x
Define Huffman Table 0x%02x
Define Quantization Table %d  precision %d
Define Restart Interval %u
Deleting texture with outstanding streaming request
DependencyClass::m_pDependencyLL == NULL
DevMsg(char const*, ...)
DevWarning(char const*, ...)
Device Caps :
DeviceID
Didn't expect more than one scan
Disabling GL_ARB_buffer_storage for RenderDoc.
Discarding abandoned streaming texture load
Display GPU memory usage.
Display mode : %d x %d @%dHz (%s)
DotaCardGameClient_001
Driver : %s Version : %d.%d
Driver Description :  %s
Duplicate PLTE chunk
Duplicate bKGD chunk
Duplicate cHRM chunk
Duplicate gAMA chunk
Duplicate hIST chunk
Duplicate iCCP chunk
Duplicate oFFs chunk
Duplicate pCAL chunk
Duplicate pHYs chunk
Duplicate sBIT chunk
Duplicate sCAL chunk
Duplicate sRGB chunk
Duplicate tIME chunk
Duplicate tRNS chunk
E A;E
E$;C`u;
E(fff.
E+f A9
E+|$$
E9t$0t
E9wdr
E;e u
E;e(u
E;e@u
E;fhu
E;gXu
E;l$ u
E;n ~0
E;n ~FH
E;o tQA
E;w(u#A
E;|$8|
E;} u
E;}xu
EDeviceCreated
EMItuhL
EMItuwL
ERROR
ERROR: CAtomicManipulator::Allocate() Cannot allocate CResourceArray
ERROR: CAtomicManipulator::AllocateAndCopy() Cannot allocate CResourceArray
ERROR: CAtomicManipulator::Copy() Cannot copy CResourceArray(FIXME: maybe you can?)
ERROR: CAtomicManipulator::Deallocate() Cannot deallocate CResourceArray
ERROR: Problem allocating permanent data for resource in file '%s'. See above for reason(s)
ERROR: Resource name "%s" has the incorrect extension "%s" for the specified resource type (expected "%s")!
ETLPu
EXECUTABLE_PATH
EXPORTSYSTEM_INTERFACE_VERSION_001
EconItemToolModel_001
Empty
Empty JPEG image (DNL not supported)
Empty input file
Encountered ConCommand '%s' without a callback!
Encountered too many releases for resource "%s"
End Of Image
End: 
EngineInitialization
EngineServiceMgr001
EnvironmentMapBuilder_001
Error State on string being set.
Error getting CGLMQuery result.
Error loading resource "%s" (Invalid resource version: %d != %d)
Error opening GL shader cache binaries file "%s"!
EtIcMp=
EventSystem001
Evict all resident texture.
Exceeded size limit while expanding chunk
Exec %s
Expecting the main thread pool to be initialized
Extra compressed data
Extra compression data
F 9G u
F A;^
F$A;B$
F(L95
F0I;F8r7H
F0I;F8raH
F0I;F8t
F0I;F8t>1
F0I;F8u
F@H+F8H
F@[A^]
FHI;FPrQH
FHI;FPt(1
FIXME: Implement dual-source color blending in GL
FPIcV$H
Failed initializing render pipeline stats!
Failed to allocate CUtlMemoryPoolBase blob of size %d ('%s' blob count = %d)
Failed to call CBaseIntrospectedTypeManager::Init
Failed to call CBaseIntrospectedTypeManager::SetDiskDataBinding
Failed to create D3D device! Please see the following for more info.
Failed to create OpenGL context.
Failed to create an OpenGL context.
Failed to create temporary file %s
Failed to create the GL context.
Failed to detect video memory size.
Failed to find CGDirectDisplayID associated with display %d
Failed to find display mode match
Failed to fix resource reference '%s' (%s)- ID = %016llX, Expected in extref block.'
Failed to load shader using program binary.  Falling back to shader source.  Log string from driver:
Failed to save video settings config to '%s'
Fffff.
FieldIntrospectionHandle_t CSchemaFieldIterator::GetRawFieldHandle() const
File has not been opened!
FileKeys
FillAttr
FindOrCreateTexture: Cannot create static textures with no data!
FindOrCreateTexture: Cannot load multiple mipmaps into cubemap texture: %s
FindOrCreateTexture: Only dynamic textures can have non-global scope!
FindOrCreateTexture: Texture scope is unspecified!
FindOrCreateTexture: Texture usage is unspecified!
FixupResourceName: Illegal full path passed in ("%s")!
FlattenedSerializersVersion001
FmtStrVSNPrintf truncated to %d without QUIET_TRUNCATION specified! String: "%s"
FmtStrVSNPrintf truncated without QUIET_TRUNCATION specified!
FontManager_001
Forgot to unlock a dynamic ib created by the context!
Forgot to unlock a dynamic vb created by the context!
Fractional sampling not implemented yet
Freed EMS handle %u
Freed XMS handle %u
From Class Binding
From Enum Binding
Fx[A\A^A_]
G$;F$
G$IcO
G(H)p
G,;G0
G,;G0tO
G,;G0tS
G0I;G8r$H
G0I;G8r'H
G0I;G8t
G0Ic}
G4Ic}
G8H	p(]
G8I;G@
GAMECONSOLE
GL shader binaries cache "%s" does not have enough data, resetting. 
GL shader cache TOC file version is %d instead of %d for %s
GL texture manager frame update
GL: [%s][%s][%s][%d]: %s
GLContext()
GLMContext::DelTex: Leaking tex %08x [ %s ] - was attached for drawing at time of delete
GLMContext::GLMContext(GLMDisplayParams *)
GLMContext::GLMContext: Debug output (gl_arb_debug_output) enabled!
GLMDisplayDB *GetDisplayDB()
GLMQueryResult_t CGLMQuery::GetData(void *, uint, bool)
GLMTexLayout *CGLMTexLayoutTable::NewLayoutRef(GLMTexLayoutKey *)
GLRenderThread
GLX_EXT_swap_control_tear
GL_1PASS_EXT
GL_2D
GL_2PASS_0_EXT
GL_2PASS_1_EXT
GL_2_BYTES
GL_3D
GL_3D_COLOR
GL_3D_COLOR_TEXTURE
GL_3_BYTES
GL_422_AVERAGE_EXT
GL_422_EXT
GL_422_REV_AVERAGE_EXT
GL_422_REV_EXT
GL_4D_COLOR_TEXTURE
GL_4PASS_0_EXT
GL_4PASS_1_EXT
GL_4PASS_2_EXT
GL_4PASS_3_EXT
GL_4_BYTES
GL_ABGR_EXT
GL_ACCUM_ALPHA_BITS
GL_ACCUM_BLUE_BITS
GL_ACCUM_CLEAR_VALUE
GL_ACCUM_GREEN_BITS
GL_ACCUM_RED_BITS
GL_ACTIVE_ATTRIBUTES
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
GL_ACTIVE_STENCIL_FACE_EXT
GL_ACTIVE_TEXTURE
GL_ACTIVE_UNIFORMS
GL_ACTIVE_UNIFORM_BLOCKS
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH
GL_ACTIVE_UNIFORM_MAX_LENGTH
GL_ACTIVE_VERTEX_UNITS_ARB
GL_ADD_SIGNED
GL_ADD_SIGNED_ARB
GL_ADD_SIGNED_EXT
GL_ALIASED_LINE_WIDTH_RANGE
GL_ALIASED_POINT_SIZE_RANGE
GL_ALPHA
GL_ALPHA12
GL_ALPHA16
GL_ALPHA16F_ARB
GL_ALPHA16I_EXT
GL_ALPHA16UI_EXT
GL_ALPHA32F_ARB
GL_ALPHA32I_EXT
GL_ALPHA32UI_EXT
GL_ALPHA4
GL_ALPHA8
GL_ALPHA8I_EXT
GL_ALPHA8UI_EXT
GL_ALPHA_BIAS
GL_ALPHA_BITS
GL_ALPHA_BLEND_EQUATION_ATI
GL_ALPHA_FLOAT16_APPLE
GL_ALPHA_FLOAT16_ATI
GL_ALPHA_FLOAT32_APPLE
GL_ALPHA_FLOAT32_ATI
GL_ALPHA_INTEGER_EXT
GL_ALPHA_SCALE
GL_ALPHA_TEST
GL_ALPHA_TEST_FUNC
GL_ALPHA_TEST_REF
GL_ALWAYS
GL_AMBIENT
GL_AMBIENT_AND_DIFFUSE
GL_AMD_pinned_memory
GL_AND
GL_AND_INVERTED
GL_AND_REVERSE
GL_APPLE_client_storage
GL_APPLE_flush_buffer_range
GL_APPLE_texture_range
GL_ARB_buffer_storage
GL_ARB_compatibility
GL_ARB_compressed_texture_pixel_storage
GL_ARB_copy_image
GL_ARB_debug_output
GL_ARB_framebuffer_object
GL_ARB_geometry_shader4
GL_ARB_get_program_binary
GL_ARB_map_buffer_range
GL_ARB_program_interface_query
GL_ARB_separate_shader_objects
GL_ARB_shader_image_load_store
GL_ARB_shading_language_420pack
GL_ARB_sync
GL_ARB_tesselation_shader
GL_ARB_texture_cube_map_array
GL_ARB_texture_gather
GL_ARB_texture_storage
GL_ARB_texture_storage_multisample
GL_ARB_timer_query
GL_ARB_uniform_buffer_object
GL_ARB_vertex_array_bgra
GL_ARB_vertex_attrib_binding
GL_ARB_viewport_array
GL_ARRAY_BUFFER
GL_ARRAY_BUFFER_ARB
GL_ARRAY_BUFFER_BINDING
GL_ARRAY_BUFFER_BINDING_ARB
GL_ARRAY_ELEMENT_LOCK_COUNT_EXT
GL_ARRAY_ELEMENT_LOCK_FIRST_EXT
GL_ATI_meminfo
GL_ATTACHED_SHADERS
GL_ATTENUATION_EXT
GL_ATTRIB_ARRAY_POINTER_NV
GL_ATTRIB_ARRAY_SIZE_NV
GL_ATTRIB_ARRAY_STRIDE_NV
GL_ATTRIB_ARRAY_TYPE_NV
GL_ATTRIB_STACK_DEPTH
GL_AUTO_NORMAL
GL_AUX0
GL_AUX1
GL_AUX2
GL_AUX3
GL_AUX_BUFFERS
GL_AVERAGE_EXT
GL_BACK
GL_BACK_LEFT
GL_BACK_RIGHT
GL_BGR
GL_BGRA
GL_BGRA_EXT
GL_BGRA_INTEGER_EXT
GL_BGR_EXT
GL_BGR_INTEGER_EXT
GL_BINORMAL_ARRAY_EXT
GL_BINORMAL_ARRAY_POINTER_EXT
GL_BINORMAL_ARRAY_STRIDE_EXT
GL_BINORMAL_ARRAY_TYPE_EXT
GL_BITMAP
GL_BITMAP_TOKEN
GL_BLEND
GL_BLEND_COLOR
GL_BLEND_DST
GL_BLEND_DST_ALPHA
GL_BLEND_DST_RGB
GL_BLEND_EQUATION
GL_BLEND_EQUATION_ALPHA
GL_BLEND_EQUATION_ALPHA_EXT
GL_BLEND_EQUATION_RGB
GL_BLEND_SRC
GL_BLEND_SRC_ALPHA
GL_BLEND_SRC_RGB
GL_BLUE
GL_BLUE_BIAS
GL_BLUE_BITS
GL_BLUE_INTEGER_EXT
GL_BLUE_SCALE
GL_BOOL
GL_BOOL_ARB
GL_BOOL_VEC2
GL_BOOL_VEC2_ARB
GL_BOOL_VEC3
GL_BOOL_VEC3_ARB
GL_BOOL_VEC4
GL_BOOL_VEC4_ARB
GL_BUFFER_ACCESS
GL_BUFFER_ACCESS_ARB
GL_BUFFER_MAPPED
GL_BUFFER_MAPPED_ARB
GL_BUFFER_MAP_POINTER
GL_BUFFER_MAP_POINTER_ARB
GL_BUFFER_SIZE
GL_BUFFER_SIZE_ARB
GL_BUFFER_USAGE
GL_BUFFER_USAGE_ARB
GL_BYTE 
GL_C3F_V3F
GL_C4F_N3F_V3F
GL_C4UB_V2F
GL_C4UB_V3F
GL_CCW
GL_CLAMP
GL_CLAMP_FRAGMENT_COLOR_ARB
GL_CLAMP_READ_COLOR_ARB
GL_CLAMP_TO_BORDER
GL_CLAMP_TO_BORDER_ARB
GL_CLAMP_TO_EDGE
GL_CLAMP_VERTEX_COLOR_ARB
GL_CLEAR
GL_CLIENT_ACTIVE_TEXTURE
GL_CLIENT_ATTRIB_STACK_DEPTH
GL_CLIP_PLANE0
GL_CLIP_PLANE1
GL_CLIP_PLANE2
GL_CLIP_PLANE3
GL_CLIP_PLANE4
GL_CLIP_PLANE5
GL_CLIP_VOLUME_CLIPPING_HINT_EXT
GL_COEFF
GL_COLOR
GL_COLOR_ARRAY
GL_COLOR_ARRAY_BUFFER_BINDING
GL_COLOR_ARRAY_BUFFER_BINDING_ARB
GL_COLOR_ARRAY_POINTER
GL_COLOR_ARRAY_SIZE
GL_COLOR_ARRAY_STRIDE
GL_COLOR_ARRAY_TYPE
GL_COLOR_ATTACHMENT0
GL_COLOR_ATTACHMENT0_EXT
GL_COLOR_ATTACHMENT1
GL_COLOR_ATTACHMENT10
GL_COLOR_ATTACHMENT10_EXT
GL_COLOR_ATTACHMENT11
GL_COLOR_ATTACHMENT11_EXT
GL_COLOR_ATTACHMENT12
GL_COLOR_ATTACHMENT12_EXT
GL_COLOR_ATTACHMENT13
GL_COLOR_ATTACHMENT13_EXT
GL_COLOR_ATTACHMENT14
GL_COLOR_ATTACHMENT14_EXT
GL_COLOR_ATTACHMENT15
GL_COLOR_ATTACHMENT15_EXT
GL_COLOR_ATTACHMENT1_EXT
GL_COLOR_ATTACHMENT2
GL_COLOR_ATTACHMENT2_EXT
GL_COLOR_ATTACHMENT3
GL_COLOR_ATTACHMENT3_EXT
GL_COLOR_ATTACHMENT4
GL_COLOR_ATTACHMENT4_EXT
GL_COLOR_ATTACHMENT5
GL_COLOR_ATTACHMENT5_EXT
GL_COLOR_ATTACHMENT6
GL_COLOR_ATTACHMENT6_EXT
GL_COLOR_ATTACHMENT7
GL_COLOR_ATTACHMENT7_EXT
GL_COLOR_ATTACHMENT8
GL_COLOR_ATTACHMENT8_EXT
GL_COLOR_ATTACHMENT9
GL_COLOR_ATTACHMENT9_EXT
GL_COLOR_CLEAR_VALUE
GL_COLOR_FLOAT_APPLE
GL_COLOR_INDEX
GL_COLOR_INDEX12_EXT
GL_COLOR_INDEX16_EXT
GL_COLOR_INDEX1_EXT
GL_COLOR_INDEX2_EXT
GL_COLOR_INDEX4_EXT
GL_COLOR_INDEX8_EXT
GL_COLOR_INDEXES
GL_COLOR_LOGIC_OP
GL_COLOR_MATERIAL
GL_COLOR_MATERIAL_FACE
GL_COLOR_MATERIAL_PARAMETER
GL_COLOR_MATRIX
GL_COLOR_MATRIX_STACK_DEPTH
GL_COLOR_SUM
GL_COLOR_SUM_ARB
GL_COLOR_SUM_EXT
GL_COLOR_TABLE
GL_COLOR_TABLE_ALPHA_SIZE
GL_COLOR_TABLE_BIAS
GL_COLOR_TABLE_BLUE_SIZE
GL_COLOR_TABLE_FORMAT
GL_COLOR_TABLE_GREEN_SIZE
GL_COLOR_TABLE_INTENSITY_SIZE
GL_COLOR_TABLE_LUMINANCE_SIZE
GL_COLOR_TABLE_RED_SIZE
GL_COLOR_TABLE_SCALE
GL_COLOR_TABLE_WIDTH
GL_COLOR_WRITEMASK
GL_COMBINE
GL_COMBINE_ALPHA
GL_COMBINE_ALPHA_ARB
GL_COMBINE_ALPHA_EXT
GL_COMBINE_ARB
GL_COMBINE_EXT
GL_COMBINE_RGB
GL_COMBINE_RGB_ARB
GL_COMBINE_RGB_EXT
GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT
GL_COMPARE_R_TO_TEXTURE
GL_COMPARE_R_TO_TEXTURE_ARB
GL_COMPILE
GL_COMPILE_AND_EXECUTE
GL_COMPILE_STATUS
GL_COMPRESSED_ALPHA
GL_COMPRESSED_INTENSITY
GL_COMPRESSED_LUMINANCE
GL_COMPRESSED_LUMINANCE_ALPHA
GL_COMPRESSED_RED
GL_COMPRESSED_RED_RGTC1
GL_COMPRESSED_RG
GL_COMPRESSED_RGB
GL_COMPRESSED_RGBA
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT
GL_COMPRESSED_RGB_S3TC_DXT1_EXT
GL_COMPRESSED_RG_RGTC2
GL_COMPRESSED_SIGNED_RED_RGTC1
GL_COMPRESSED_SIGNED_RG_RGTC2
GL_COMPRESSED_SLUMINANCE
GL_COMPRESSED_SLUMINANCE_ALPHA
GL_COMPRESSED_SLUMINANCE_ALPHA_EXT
GL_COMPRESSED_SLUMINANCE_EXT
GL_COMPRESSED_SRGB
GL_COMPRESSED_SRGB_ALPHA
GL_COMPRESSED_SRGB_ALPHA_EXT
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT
GL_COMPRESSED_SRGB_EXT
GL_COMPRESSED_SRGB_S3TC_DXT1_EXT
GL_COMPRESSED_TEXTURE_FORMATS
GL_COMPRESSED_TEXTURE_FORMATS_ARB
GL_CONSTANT
GL_CONSTANT_ALPHA
GL_CONSTANT_ARB
GL_CONSTANT_ATTENUATION
GL_CONSTANT_BORDER
GL_CONSTANT_COLOR
GL_CONSTANT_EXT
GL_CONVOLUTION_1D
GL_CONVOLUTION_2D
GL_CONVOLUTION_BORDER_COLOR
GL_CONVOLUTION_BORDER_MODE
GL_CONVOLUTION_FILTER_BIAS
GL_CONVOLUTION_FILTER_SCALE
GL_CONVOLUTION_FORMAT
GL_CONVOLUTION_HEIGHT
GL_CONVOLUTION_WIDTH
GL_COORD_REPLACE
GL_COORD_REPLACE_ARB
GL_COPY
GL_COPY_INVERTED
GL_COPY_PIXEL_TOKEN
GL_CUBIC_EXT
GL_CULL_FACE
GL_CULL_FACE_MODE
GL_CULL_VERTEX_EXT
GL_CULL_VERTEX_EYE_POSITION_EXT
GL_CULL_VERTEX_OBJECT_POSITION_EXT
GL_CURRENT_ATTRIB_NV
GL_CURRENT_BINORMAL_EXT
GL_CURRENT_COLOR
GL_CURRENT_FOG_COORD
GL_CURRENT_FOG_COORDINATE
GL_CURRENT_FOG_COORDINATE_EXT
GL_CURRENT_INDEX
GL_CURRENT_MATRIX_ARB
GL_CURRENT_MATRIX_NV
GL_CURRENT_MATRIX_STACK_DEPTH_ARB
GL_CURRENT_MATRIX_STACK_DEPTH_NV
GL_CURRENT_NORMAL
GL_CURRENT_PROGRAM
GL_CURRENT_QUERY
GL_CURRENT_QUERY_ARB
GL_CURRENT_RASTER_COLOR
GL_CURRENT_RASTER_DISTANCE
GL_CURRENT_RASTER_INDEX
GL_CURRENT_RASTER_POSITION
GL_CURRENT_RASTER_POSITION_VALID
GL_CURRENT_RASTER_SECONDARY_COLOR
GL_CURRENT_RASTER_TEXTURE_COORDS
GL_CURRENT_SECONDARY_COLOR
GL_CURRENT_SECONDARY_COLOR_EXT
GL_CURRENT_TANGENT_EXT
GL_CURRENT_TEXTURE_COORDS
GL_CURRENT_VERTEX_ATTRIB
GL_CURRENT_VERTEX_ATTRIB_ARB
GL_CURRENT_VERTEX_EXT
GL_CURRENT_VERTEX_WEIGHT_EXT
GL_CURRENT_WEIGHT_ARB
GL_CW
GL_DECAL
GL_DECR
GL_DECR_WRAP
GL_DELETE_STATUS
GL_DEPTH
GL_DEPTH24_STENCIL8
GL_DEPTH24_STENCIL8_EXT
GL_DEPTH32F_STENCIL8
GL_DEPTH_ATTACHMENT
GL_DEPTH_ATTACHMENT_EXT
GL_DEPTH_BIAS
GL_DEPTH_BITS
GL_DEPTH_BOUNDS_EXT
GL_DEPTH_BOUNDS_TEST_EXT
GL_DEPTH_CLEAR_VALUE
GL_DEPTH_COMPONENT
GL_DEPTH_COMPONENT16
GL_DEPTH_COMPONENT16_ARB
GL_DEPTH_COMPONENT24
GL_DEPTH_COMPONENT24_ARB
GL_DEPTH_COMPONENT32
GL_DEPTH_COMPONENT32F
GL_DEPTH_COMPONENT32_ARB
GL_DEPTH_FUNC
GL_DEPTH_RANGE
GL_DEPTH_SCALE
GL_DEPTH_STENCIL
GL_DEPTH_STENCIL_ATTACHMENT
GL_DEPTH_TEST
GL_DEPTH_TEXTURE_MODE
GL_DEPTH_TEXTURE_MODE_ARB
GL_DEPTH_WRITEMASK
GL_DIFFUSE
GL_DITHER
GL_DOMAIN
GL_DONT_CARE
GL_DOT3_RGB
GL_DOT3_RGBA
GL_DOT3_RGBA_ARB
GL_DOT3_RGB_ARB
GL_DOUBLE
GL_DOUBLEBUFFER
GL_DRAW_BUFFER
GL_DRAW_BUFFER0
GL_DRAW_BUFFER0_ARB
GL_DRAW_BUFFER1
GL_DRAW_BUFFER10
GL_DRAW_BUFFER10_ARB
GL_DRAW_BUFFER11
GL_DRAW_BUFFER11_ARB
GL_DRAW_BUFFER12
GL_DRAW_BUFFER12_ARB
GL_DRAW_BUFFER13
GL_DRAW_BUFFER13_ARB
GL_DRAW_BUFFER14
GL_DRAW_BUFFER14_ARB
GL_DRAW_BUFFER15
GL_DRAW_BUFFER15_ARB
GL_DRAW_BUFFER1_ARB
GL_DRAW_BUFFER2
GL_DRAW_BUFFER2_ARB
GL_DRAW_BUFFER3
GL_DRAW_BUFFER3_ARB
GL_DRAW_BUFFER4
GL_DRAW_BUFFER4_ARB
GL_DRAW_BUFFER5
GL_DRAW_BUFFER5_ARB
GL_DRAW_BUFFER6
GL_DRAW_BUFFER6_ARB
GL_DRAW_BUFFER7
GL_DRAW_BUFFER7_ARB
GL_DRAW_BUFFER8
GL_DRAW_BUFFER8_ARB
GL_DRAW_BUFFER9
GL_DRAW_BUFFER9_ARB
GL_DRAW_FRAMEBUFFER
GL_DRAW_FRAMEBUFFER_BINDING_EXT
GL_DRAW_FRAMEBUFFER_EXT
GL_DRAW_PIXEL_TOKEN
GL_DST_ALPHA
GL_DST_COLOR
GL_DYNAMIC_COPY
GL_DYNAMIC_COPY_ARB
GL_DYNAMIC_DRAW
GL_DYNAMIC_DRAW_ARB
GL_DYNAMIC_READ
GL_DYNAMIC_READ_ARB
GL_EDGE_FLAG
GL_EDGE_FLAG_ARRAY
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB
GL_EDGE_FLAG_ARRAY_POINTER
GL_EDGE_FLAG_ARRAY_STRIDE
GL_ELEMENT_ARRAY_APPLE
GL_ELEMENT_ARRAY_BUFFER
GL_ELEMENT_ARRAY_BUFFER_ARB
GL_ELEMENT_ARRAY_BUFFER_BINDING
GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB
GL_ELEMENT_ARRAY_POINTER_APPLE
GL_ELEMENT_ARRAY_TYPE_APPLE
GL_EMISSION
GL_EQUAL
GL_EQUIV
GL_EXP
GL_EXP2
GL_EXTENSIONS
GL_EXT_direct_state_access
GL_EXT_framebuffer_multisample_blit_scaled
GL_EXT_texture_compression_s3tc
GL_EXT_texture_sRGB_decode
GL_EYE_LINEAR
GL_EYE_PLANE
GL_FASTEST
GL_FEEDBACK
GL_FEEDBACK_BUFFER_POINTER
GL_FEEDBACK_BUFFER_SIZE
GL_FEEDBACK_BUFFER_TYPE
GL_FILL
GL_FIRST_VERTEX_CONVENTION_EXT
GL_FIXED_ONLY_ARB
GL_FLAT
GL_FLOAT
GL_FLOAT_32_UNSIGNED_INT_24_8_REV
GL_FLOAT_MAT2
GL_FLOAT_MAT2_ARB
GL_FLOAT_MAT2x3
GL_FLOAT_MAT2x4
GL_FLOAT_MAT3
GL_FLOAT_MAT3_ARB
GL_FLOAT_MAT3x2
GL_FLOAT_MAT3x4
GL_FLOAT_MAT4
GL_FLOAT_MAT4_ARB
GL_FLOAT_MAT4x2
GL_FLOAT_MAT4x3
GL_FLOAT_VEC2
GL_FLOAT_VEC2_ARB
GL_FLOAT_VEC3
GL_FLOAT_VEC3_ARB
GL_FLOAT_VEC4
GL_FLOAT_VEC4_ARB
GL_FOG
GL_FOG_COLOR
GL_FOG_COORD
GL_FOG_COORDINATE
GL_FOG_COORDINATE_ARRAY
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB
GL_FOG_COORDINATE_ARRAY_EXT
GL_FOG_COORDINATE_ARRAY_POINTER
GL_FOG_COORDINATE_ARRAY_POINTER_EXT
GL_FOG_COORDINATE_ARRAY_STRIDE
GL_FOG_COORDINATE_ARRAY_STRIDE_EXT
GL_FOG_COORDINATE_ARRAY_TYPE
GL_FOG_COORDINATE_ARRAY_TYPE_EXT
GL_FOG_COORDINATE_EXT
GL_FOG_COORDINATE_SOURCE
GL_FOG_COORDINATE_SOURCE_EXT
GL_FOG_COORD_ARRAY
GL_FOG_COORD_ARRAY_BUFFER_BINDING
GL_FOG_COORD_ARRAY_BUFFER_BINDING_ARB
GL_FOG_COORD_ARRAY_POINTER
GL_FOG_COORD_ARRAY_STRIDE
GL_FOG_COORD_ARRAY_TYPE
GL_FOG_COORD_SRC
GL_FOG_DENSITY
GL_FOG_END
GL_FOG_HINT
GL_FOG_INDEX
GL_FOG_MODE
GL_FOG_START
GL_FRAGMENT_COLOR_EXT
GL_FRAGMENT_DEPTH
GL_FRAGMENT_DEPTH_EXT
GL_FRAGMENT_MATERIAL_EXT
GL_FRAGMENT_NORMAL_EXT
GL_FRAGMENT_PROGRAM_ARB
GL_FRAGMENT_SHADER
GL_FRAGMENT_SHADER_ARB
GL_FRAGMENT_SHADER_DERIVATIVE_HINT
GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB
GL_FRAGMENT_SHADER_EXT
GL_FRAMEBUFFER
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
GL_FRAMEBUFFER_BINDING
GL_FRAMEBUFFER_BINDING_EXT
GL_FRAMEBUFFER_COMPLETE
GL_FRAMEBUFFER_COMPLETE_EXT
GL_FRAMEBUFFER_DEFAULT
GL_FRAMEBUFFER_EXT
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
GL_FRAMEBUFFER_SRGB_CAPABLE_EXT
GL_FRAMEBUFFER_SRGB_EXT
GL_FRAMEBUFFER_UNDEFINED
GL_FRAMEBUFFER_UNSUPPORTED
GL_FRAMEBUFFER_UNSUPPORTED_EXT
GL_FRONT
GL_FRONT_AND_BACK
GL_FRONT_FACE
GL_FRONT_LEFT
GL_FRONT_RIGHT
GL_FULL_RANGE_EXT
GL_FUNC_ADD
GL_FUNC_REVERSE_SUBTRACT
GL_FUNC_SUBTRACT
GL_GENERATE_MIPMAP
GL_GENERATE_MIPMAP_HINT
GL_GEOMETRY_INPUT_TYPE_EXT
GL_GEOMETRY_OUTPUT_TYPE_EXT
GL_GEOMETRY_SHADER_EXT
GL_GEOMETRY_VERTICES_OUT_EXT
GL_GEQUAL
GL_GREATER
GL_GREEN
GL_GREEN_BIAS
GL_GREEN_BITS
GL_GREEN_INTEGER_EXT
GL_GREEN_SCALE
GL_GREMEDY_frame_terminator
GL_GREMEDY_string_marker
GL_HALF_FLOAT
GL_HISTOGRAM
GL_HISTOGRAM_ALPHA_SIZE
GL_HISTOGRAM_BLUE_SIZE
GL_HISTOGRAM_FORMAT
GL_HISTOGRAM_GREEN_SIZE
GL_HISTOGRAM_LUMINANCE_SIZE
GL_HISTOGRAM_RED_SIZE
GL_HISTOGRAM_SINK
GL_HISTOGRAM_WIDTH
GL_IDENTITY_NV
GL_INCR
GL_INCR_WRAP
GL_INDEX_ARRAY
GL_INDEX_ARRAY_BUFFER_BINDING
GL_INDEX_ARRAY_BUFFER_BINDING_ARB
GL_INDEX_ARRAY_POINTER
GL_INDEX_ARRAY_STRIDE
GL_INDEX_ARRAY_TYPE
GL_INDEX_BITS
GL_INDEX_CLEAR_VALUE
GL_INDEX_LOGIC_OP
GL_INDEX_MATERIAL_EXT
GL_INDEX_MATERIAL_FACE_EXT
GL_INDEX_MATERIAL_PARAMETER_EXT
GL_INDEX_MODE
GL_INDEX_OFFSET
GL_INDEX_SHIFT
GL_INDEX_TEST_EXT
GL_INDEX_TEST_FUNC_EXT
GL_INDEX_TEST_REF_EXT
GL_INDEX_WRITEMASK
GL_INFO_LOG_LENGTH
GL_INT  
GL_INTENSITY
GL_INTENSITY12
GL_INTENSITY16
GL_INTENSITY16F_ARB
GL_INTENSITY16I_EXT
GL_INTENSITY16UI_EXT
GL_INTENSITY32F_ARB
GL_INTENSITY32I_EXT
GL_INTENSITY32UI_EXT
GL_INTENSITY4
GL_INTENSITY8
GL_INTENSITY8I_EXT
GL_INTENSITY8UI_EXT
GL_INTENSITY_FLOAT16_APPLE
GL_INTENSITY_FLOAT16_ATI
GL_INTENSITY_FLOAT32_APPLE
GL_INTENSITY_FLOAT32_ATI
GL_INTERLEAVED_ATTRIBS_EXT
GL_INTERPOLATE
GL_INTERPOLATE_ARB
GL_INTERPOLATE_EXT
GL_INT_SAMPLER_1D_ARRAY_EXT
GL_INT_SAMPLER_1D_EXT
GL_INT_SAMPLER_2D_ARRAY_EXT
GL_INT_SAMPLER_2D_EXT
GL_INT_SAMPLER_2D_RECT_EXT
GL_INT_SAMPLER_3D_EXT
GL_INT_SAMPLER_BUFFER_EXT
GL_INT_SAMPLER_CUBE_EXT
GL_INT_VEC2
GL_INT_VEC2_ARB
GL_INT_VEC3
GL_INT_VEC3_ARB
GL_INT_VEC4
GL_INT_VEC4_ARB
GL_INVALID_ENUM
GL_INVALID_FRAMEBUFFER_OPERATION
GL_INVALID_FRAMEBUFFER_OPERATION_EXT
GL_INVALID_OPERATION
GL_INVALID_VALUE
GL_INVARIANT_DATATYPE_EXT
GL_INVARIANT_EXT
GL_INVARIANT_VALUE_EXT
GL_INVERSE_NV
GL_INVERSE_TRANSPOSE_NV
GL_INVERT
GL_IUI_N3F_V2F_EXT
GL_IUI_N3F_V3F_EXT
GL_IUI_V2F_EXT
GL_IUI_V3F_EXT
GL_KEEP
GL_KHR_debug
GL_LAST_VERTEX_CONVENTION_EXT
GL_LEFT
GL_LEQUAL
GL_LESS
GL_LIGHT0
GL_LIGHT1
GL_LIGHT2
GL_LIGHT3
GL_LIGHT4
GL_LIGHT5
GL_LIGHT6
GL_LIGHT7
GL_LIGHTING
GL_LIGHT_MODEL_AMBIENT
GL_LIGHT_MODEL_COLOR_CONTROL
GL_LIGHT_MODEL_COLOR_CONTROL_EXT
GL_LIGHT_MODEL_LOCAL_VIEWER
GL_LIGHT_MODEL_TWO_SIDE
GL_LINE
GL_LINEAR
GL_LINEAR_ATTENUATION
GL_LINEAR_MIPMAP_LINEAR
GL_LINEAR_MIPMAP_NEAREST
GL_LINE_RESET_TOKEN
GL_LINE_SMOOTH
GL_LINE_SMOOTH_HINT
GL_LINE_STIPPLE
GL_LINE_STIPPLE_PATTERN
GL_LINE_STIPPLE_REPEAT
GL_LINE_TOKEN
GL_LINE_WIDTH
GL_LINE_WIDTH_GRANULARITY
GL_LINE_WIDTH_RANGE
GL_LINK_STATUS
GL_LIST_BASE
GL_LIST_INDEX
GL_LIST_MODE
GL_LOCAL_CONSTANT_DATATYPE_EXT
GL_LOCAL_CONSTANT_EXT
GL_LOCAL_CONSTANT_VALUE_EXT
GL_LOCAL_EXT
GL_LOGIC_OP_MODE
GL_LOWER_LEFT
GL_LUMINANCE
GL_LUMINANCE12
GL_LUMINANCE12_ALPHA12
GL_LUMINANCE12_ALPHA4
GL_LUMINANCE16
GL_LUMINANCE16F_ARB
GL_LUMINANCE16I_EXT
GL_LUMINANCE16UI_EXT
GL_LUMINANCE16_ALPHA16
GL_LUMINANCE32F_ARB
GL_LUMINANCE32I_EXT
GL_LUMINANCE32UI_EXT
GL_LUMINANCE4
GL_LUMINANCE4_ALPHA4
GL_LUMINANCE6_ALPHA2
GL_LUMINANCE8
GL_LUMINANCE8I_EXT
GL_LUMINANCE8UI_EXT
GL_LUMINANCE8_ALPHA8
GL_LUMINANCE_ALPHA
GL_LUMINANCE_ALPHA16F_ARB
GL_LUMINANCE_ALPHA16I_EXT
GL_LUMINANCE_ALPHA16UI_EXT
GL_LUMINANCE_ALPHA32F_ARB
GL_LUMINANCE_ALPHA32I_EXT
GL_LUMINANCE_ALPHA32UI_EXT
GL_LUMINANCE_ALPHA8I_EXT
GL_LUMINANCE_ALPHA8UI_EXT
GL_LUMINANCE_ALPHA_FLOAT16_APPLE
GL_LUMINANCE_ALPHA_FLOAT16_ATI
GL_LUMINANCE_ALPHA_FLOAT32_APPLE
GL_LUMINANCE_ALPHA_FLOAT32_ATI
GL_LUMINANCE_ALPHA_INTEGER_EXT
GL_LUMINANCE_FLOAT16_APPLE
GL_LUMINANCE_FLOAT16_ATI
GL_LUMINANCE_FLOAT32_APPLE
GL_LUMINANCE_FLOAT32_ATI
GL_LUMINANCE_INTEGER_EXT
GL_MAP1_BINORMAL_EXT
GL_MAP1_COLOR_4
GL_MAP1_GRID_DOMAIN
GL_MAP1_GRID_SEGMENTS
GL_MAP1_INDEX
GL_MAP1_NORMAL
GL_MAP1_TANGENT_EXT
GL_MAP1_TEXTURE_COORD_1
GL_MAP1_TEXTURE_COORD_2
GL_MAP1_TEXTURE_COORD_3
GL_MAP1_TEXTURE_COORD_4
GL_MAP1_VERTEX_3
GL_MAP1_VERTEX_4
GL_MAP1_VERTEX_ATTRIB0_4_NV
GL_MAP1_VERTEX_ATTRIB10_4_NV
GL_MAP1_VERTEX_ATTRIB11_4_NV
GL_MAP1_VERTEX_ATTRIB12_4_NV
GL_MAP1_VERTEX_ATTRIB13_4_NV
GL_MAP1_VERTEX_ATTRIB14_4_NV
GL_MAP1_VERTEX_ATTRIB15_4_NV
GL_MAP1_VERTEX_ATTRIB1_4_NV
GL_MAP1_VERTEX_ATTRIB2_4_NV
GL_MAP1_VERTEX_ATTRIB3_4_NV
GL_MAP1_VERTEX_ATTRIB4_4_NV
GL_MAP1_VERTEX_ATTRIB5_4_NV
GL_MAP1_VERTEX_ATTRIB6_4_NV
GL_MAP1_VERTEX_ATTRIB7_4_NV
GL_MAP1_VERTEX_ATTRIB8_4_NV
GL_MAP1_VERTEX_ATTRIB9_4_NV
GL_MAP2_BINORMAL_EXT
GL_MAP2_COLOR_4
GL_MAP2_GRID_DOMAIN
GL_MAP2_GRID_SEGMENTS
GL_MAP2_INDEX
GL_MAP2_NORMAL
GL_MAP2_TANGENT_EXT
GL_MAP2_TEXTURE_COORD_1
GL_MAP2_TEXTURE_COORD_2
GL_MAP2_TEXTURE_COORD_3
GL_MAP2_TEXTURE_COORD_4
GL_MAP2_VERTEX_3
GL_MAP2_VERTEX_4
GL_MAP2_VERTEX_ATTRIB0_4_NV
GL_MAP2_VERTEX_ATTRIB10_4_NV
GL_MAP2_VERTEX_ATTRIB11_4_NV
GL_MAP2_VERTEX_ATTRIB12_4_NV
GL_MAP2_VERTEX_ATTRIB13_4_NV
GL_MAP2_VERTEX_ATTRIB14_4_NV
GL_MAP2_VERTEX_ATTRIB15_4_NV
GL_MAP2_VERTEX_ATTRIB1_4_NV
GL_MAP2_VERTEX_ATTRIB2_4_NV
GL_MAP2_VERTEX_ATTRIB3_4_NV
GL_MAP2_VERTEX_ATTRIB4_4_NV
GL_MAP2_VERTEX_ATTRIB5_4_NV
GL_MAP2_VERTEX_ATTRIB6_4_NV
GL_MAP2_VERTEX_ATTRIB7_4_NV
GL_MAP2_VERTEX_ATTRIB8_4_NV
GL_MAP2_VERTEX_ATTRIB9_4_NV
GL_MAP_COLOR
GL_MAP_STENCIL
GL_MATRIX0_ARB
GL_MATRIX0_NV
GL_MATRIX10_ARB
GL_MATRIX11_ARB
GL_MATRIX12_ARB
GL_MATRIX13_ARB
GL_MATRIX14_ARB
GL_MATRIX15_ARB
GL_MATRIX16_ARB
GL_MATRIX17_ARB
GL_MATRIX18_ARB
GL_MATRIX19_ARB
GL_MATRIX1_ARB
GL_MATRIX1_NV
GL_MATRIX20_ARB
GL_MATRIX21_ARB
GL_MATRIX22_ARB
GL_MATRIX23_ARB
GL_MATRIX24_ARB
GL_MATRIX25_ARB
GL_MATRIX26_ARB
GL_MATRIX27_ARB
GL_MATRIX28_ARB
GL_MATRIX29_ARB
GL_MATRIX2_ARB
GL_MATRIX2_NV
GL_MATRIX30_ARB
GL_MATRIX31_ARB
GL_MATRIX3_ARB
GL_MATRIX3_NV
GL_MATRIX4_ARB
GL_MATRIX4_NV
GL_MATRIX5_ARB
GL_MATRIX5_NV
GL_MATRIX6_ARB
GL_MATRIX6_NV
GL_MATRIX7_ARB
GL_MATRIX7_NV
GL_MATRIX8_ARB
GL_MATRIX9_ARB
GL_MATRIX_EXT
GL_MATRIX_MODE
GL_MAX
GL_MAX_3D_TEXTURE_SIZE
GL_MAX_ARRAY_TEXTURE_LAYERS_EXT
GL_MAX_ATTRIB_STACK_DEPTH
GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
GL_MAX_CLIENT_ATTRIB_STACK_DEPTH
GL_MAX_CLIP_PLANES
GL_MAX_COLOR_ATTACHMENTS
GL_MAX_COLOR_ATTACHMENTS_EXT
GL_MAX_COLOR_MATRIX_STACK_DEPTH
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB
GL_MAX_COMBINED_UNIFORM_BLOCKS
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS
GL_MAX_CONVOLUTION_HEIGHT
GL_MAX_CONVOLUTION_WIDTH
GL_MAX_CUBE_MAP_TEXTURE_SIZE
GL_MAX_DRAW_BUFFERS
GL_MAX_DRAW_BUFFERS_ARB
GL_MAX_ELEMENTS_INDICES
GL_MAX_ELEMENTS_INDICES_EXT
GL_MAX_ELEMENTS_VERTICES
GL_MAX_ELEMENTS_VERTICES_EXT
GL_MAX_EVAL_ORDER
GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
GL_MAX_FRAGMENT_UNIFORM_BLOCKS
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB
GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT
GL_MAX_GEOMETRY_UNIFORM_BLOCKS
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT
GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT
GL_MAX_LIGHTS
GL_MAX_LIST_NESTING
GL_MAX_MODELVIEW_STACK_DEPTH
GL_MAX_NAME_STACK_DEPTH
GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT
GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT
GL_MAX_PIXEL_MAP_TABLE
GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT
GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB
GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB
GL_MAX_PROGRAM_ATTRIBS_ARB
GL_MAX_PROGRAM_ENV_PARAMETERS_ARB
GL_MAX_PROGRAM_INSTRUCTIONS_ARB
GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB
GL_MAX_PROGRAM_MATRICES_ARB
GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB
GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB
GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB
GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB
GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB
GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB
GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB
GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB
GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB
GL_MAX_PROGRAM_PARAMETERS_ARB
GL_MAX_PROGRAM_TEMPORARIES_ARB
GL_MAX_PROGRAM_TEXEL_OFFSET_EXT
GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB
GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB
GL_MAX_PROJECTION_STACK_DEPTH
GL_MAX_RECTANGLE_TEXTURE_SIZE_EXT
GL_MAX_RENDERBUFFER_SIZE
GL_MAX_SAMPLES
GL_MAX_SAMPLES_EXT
GL_MAX_TEXTURE_COORDS
GL_MAX_TEXTURE_COORDS_ARB
GL_MAX_TEXTURE_IMAGE_UNITS
GL_MAX_TEXTURE_IMAGE_UNITS_ARB
GL_MAX_TEXTURE_LOD_BIAS
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
GL_MAX_TEXTURE_SIZE
GL_MAX_TEXTURE_STACK_DEPTH
GL_MAX_TEXTURE_UNITS
GL_MAX_TRACK_MATRICES_NV
GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT
GL_MAX_UNIFORM_BLOCK_SIZE
GL_MAX_UNIFORM_BUFFER_BINDINGS
GL_MAX_VARYING_COMPONENTS_EXT
GL_MAX_VARYING_FLOATS
GL_MAX_VARYING_FLOATS_ARB
GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_APPLE
GL_MAX_VERTEX_ATTRIBS
GL_MAX_VERTEX_ATTRIBS_ARB
GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT
GL_MAX_VERTEX_SHADER_INVARIANTS_EXT
GL_MAX_VERTEX_SHADER_LOCALS_EXT
GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
GL_MAX_VERTEX_SHADER_VARIANTS_EXT
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB
GL_MAX_VERTEX_UNIFORM_BLOCKS
GL_MAX_VERTEX_UNIFORM_COMPONENTS
GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB
GL_MAX_VERTEX_UNITS_ARB
GL_MAX_VERTEX_VARYING_COMPONENTS_EXT
GL_MAX_VIEWPORT_DIMS
GL_MIN
GL_MINMAX
GL_MINMAX_FORMAT
GL_MINMAX_SINK
GL_MIN_PROGRAM_TEXEL_OFFSET_EXT
GL_MIRRORED_REPEAT
GL_MIRRORED_REPEAT_ARB
GL_MIRROR_CLAMP_EXT
GL_MIRROR_CLAMP_TO_BORDER_EXT
GL_MIRROR_CLAMP_TO_EDGE_EXT
GL_MODELVIEW
GL_MODELVIEW0_ARB
GL_MODELVIEW10_ARB
GL_MODELVIEW11_ARB
GL_MODELVIEW12_ARB
GL_MODELVIEW13_ARB
GL_MODELVIEW14_ARB
GL_MODELVIEW15_ARB
GL_MODELVIEW16_ARB
GL_MODELVIEW17_ARB
GL_MODELVIEW18_ARB
GL_MODELVIEW19_ARB
GL_MODELVIEW1_ARB
GL_MODELVIEW1_STACK_DEPTH_EXT
GL_MODELVIEW20_ARB
GL_MODELVIEW21_ARB
GL_MODELVIEW22_ARB
GL_MODELVIEW23_ARB
GL_MODELVIEW24_ARB
GL_MODELVIEW25_ARB
GL_MODELVIEW26_ARB
GL_MODELVIEW27_ARB
GL_MODELVIEW28_ARB
GL_MODELVIEW29_ARB
GL_MODELVIEW2_ARB
GL_MODELVIEW30_ARB
GL_MODELVIEW31_ARB
GL_MODELVIEW3_ARB
GL_MODELVIEW4_ARB
GL_MODELVIEW5_ARB
GL_MODELVIEW6_ARB
GL_MODELVIEW7_ARB
GL_MODELVIEW8_ARB
GL_MODELVIEW9_ARB
GL_MODELVIEW_MATRIX
GL_MODELVIEW_MATRIX1_EXT
GL_MODELVIEW_PROJECTION_NV
GL_MODELVIEW_STACK_DEPTH
GL_MODULATE
GL_MULTISAMPLE
GL_MULTISAMPLE_ARB
GL_MVP_MATRIX_EXT
GL_N3F_V3F
GL_NAME_STACK_DEPTH
GL_NAND
GL_NEAREST
GL_NEAREST_MIPMAP_LINEAR
GL_NEAREST_MIPMAP_NEAREST
GL_NEGATIVE_ONE_EXT
GL_NEGATIVE_W_EXT
GL_NEGATIVE_X_EXT
GL_NEGATIVE_Y_EXT
GL_NEGATIVE_Z_EXT
GL_NEVER
GL_NICEST
GL_NOOP
GL_NOR
GL_NORMALIZE
GL_NORMALIZED_RANGE_EXT
GL_NORMAL_ARRAY
GL_NORMAL_ARRAY_BUFFER_BINDING
GL_NORMAL_ARRAY_BUFFER_BINDING_ARB
GL_NORMAL_ARRAY_POINTER
GL_NORMAL_ARRAY_STRIDE
GL_NORMAL_ARRAY_TYPE
GL_NORMAL_MAP
GL_NORMAL_MAP_ARB
GL_NORMAL_MAP_EXT
GL_NOTEQUAL
GL_NUM_COMPRESSED_TEXTURE_FORMATS
GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
GL_NUM_FRAGMENT_CONSTANTS_EXT
GL_NUM_FRAGMENT_REGISTERS_EXT
GL_NVX_gpu_memory_info
GL_NV_bindless_texture
GL_OBJECT_ACTIVE_ATTRIBUTES_ARB
GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB
GL_OBJECT_ACTIVE_UNIFORMS_ARB
GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB
GL_OBJECT_ATTACHED_OBJECTS_ARB
GL_OBJECT_COMPILE_STATUS_ARB
GL_OBJECT_DELETE_STATUS_ARB
GL_OBJECT_INFO_LOG_LENGTH_ARB
GL_OBJECT_LINEAR
GL_OBJECT_LINK_STATUS_ARB
GL_OBJECT_PLANE
GL_OBJECT_SHADER_SOURCE_LENGTH_ARB
GL_OBJECT_SUBTYPE_ARB
GL_OBJECT_TYPE_ARB
GL_OBJECT_VALIDATE_STATUS_ARB
GL_ONE
GL_ONE_MINUS_CONSTANT_ALPHA
GL_ONE_MINUS_CONSTANT_COLOR
GL_ONE_MINUS_DST_ALPHA
GL_ONE_MINUS_DST_COLOR
GL_ONE_MINUS_SRC_ALPHA
GL_ONE_MINUS_SRC_COLOR
GL_OPERAND0_ALPHA
GL_OPERAND0_ALPHA_ARB
GL_OPERAND0_ALPHA_EXT
GL_OPERAND0_RGB
GL_OPERAND0_RGB_ARB
GL_OPERAND0_RGB_EXT
GL_OPERAND1_ALPHA
GL_OPERAND1_ALPHA_ARB
GL_OPERAND1_ALPHA_EXT
GL_OPERAND1_RGB
GL_OPERAND1_RGB_ARB
GL_OPERAND1_RGB_EXT
GL_OPERAND2_ALPHA
GL_OPERAND2_ALPHA_ARB
GL_OPERAND2_ALPHA_EXT
GL_OPERAND2_RGB
GL_OPERAND2_RGB_ARB
GL_OPERAND2_RGB_EXT
GL_OPERAND3_ALPHA
GL_OPERAND3_ALPHA_ARB
GL_OPERAND3_ALPHA_EXT
GL_OPERAND3_RGB
GL_OPERAND3_RGB_ARB
GL_OPERAND3_RGB_EXT
GL_OPERAND4_ALPHA
GL_OPERAND4_ALPHA_ARB
GL_OPERAND4_ALPHA_EXT
GL_OPERAND4_RGB
GL_OPERAND4_RGB_ARB
GL_OPERAND4_RGB_EXT
GL_OPERAND5_ALPHA
GL_OPERAND5_ALPHA_ARB
GL_OPERAND5_ALPHA_EXT
GL_OPERAND5_RGB
GL_OPERAND5_RGB_ARB
GL_OPERAND5_RGB_EXT
GL_OPERAND6_ALPHA
GL_OPERAND6_ALPHA_ARB
GL_OPERAND6_ALPHA_EXT
GL_OPERAND6_RGB
GL_OPERAND6_RGB_ARB
GL_OPERAND6_RGB_EXT
GL_OPERAND7_ALPHA
GL_OPERAND7_ALPHA_ARB
GL_OPERAND7_ALPHA_EXT
GL_OPERAND7_RGB
GL_OPERAND7_RGB_ARB
GL_OPERAND7_RGB_EXT
GL_OP_ADD_EXT
GL_OP_CLAMP_EXT
GL_OP_CROSS_PRODUCT_EXT
GL_OP_DOT3_EXT
GL_OP_DOT4_EXT
GL_OP_EXP_BASE_2_EXT
GL_OP_FLOOR_EXT
GL_OP_FRAC_EXT
GL_OP_INDEX_EXT
GL_OP_LOG_BASE_2_EXT
GL_OP_MADD_EXT
GL_OP_MAX_EXT
GL_OP_MIN_EXT
GL_OP_MOV_EXT
GL_OP_MULTIPLY_MATRIX_EXT
GL_OP_MUL_EXT
GL_OP_NEGATE_EXT
GL_OP_POWER_EXT
GL_OP_RECIP_EXT
GL_OP_RECIP_SQRT_EXT
GL_OP_ROUND_EXT
GL_OP_SET_GE_EXT
GL_OP_SET_LT_EXT
GL_OP_SUB_EXT
GL_OR
GL_ORDER
GL_OR_INVERTED
GL_OR_REVERSE
GL_OUTPUT_COLOR0_EXT
GL_OUTPUT_COLOR1_EXT
GL_OUTPUT_FOG_EXT
GL_OUTPUT_TEXTURE_COORD0_EXT
GL_OUTPUT_TEXTURE_COORD10_EXT
GL_OUTPUT_TEXTURE_COORD11_EXT
GL_OUTPUT_TEXTURE_COORD12_EXT
GL_OUTPUT_TEXTURE_COORD13_EXT
GL_OUTPUT_TEXTURE_COORD14_EXT
GL_OUTPUT_TEXTURE_COORD15_EXT
GL_OUTPUT_TEXTURE_COORD16_EXT
GL_OUTPUT_TEXTURE_COORD17_EXT
GL_OUTPUT_TEXTURE_COORD18_EXT
GL_OUTPUT_TEXTURE_COORD19_EXT
GL_OUTPUT_TEXTURE_COORD1_EXT
GL_OUTPUT_TEXTURE_COORD20_EXT
GL_OUTPUT_TEXTURE_COORD21_EXT
GL_OUTPUT_TEXTURE_COORD22_EXT
GL_OUTPUT_TEXTURE_COORD23_EXT
GL_OUTPUT_TEXTURE_COORD24_EXT
GL_OUTPUT_TEXTURE_COORD25_EXT
GL_OUTPUT_TEXTURE_COORD26_EXT
GL_OUTPUT_TEXTURE_COORD27_EXT
GL_OUTPUT_TEXTURE_COORD28_EXT
GL_OUTPUT_TEXTURE_COORD29_EXT
GL_OUTPUT_TEXTURE_COORD2_EXT
GL_OUTPUT_TEXTURE_COORD30_EXT
GL_OUTPUT_TEXTURE_COORD31_EXT
GL_OUTPUT_TEXTURE_COORD3_EXT
GL_OUTPUT_TEXTURE_COORD4_EXT
GL_OUTPUT_TEXTURE_COORD5_EXT
GL_OUTPUT_TEXTURE_COORD6_EXT
GL_OUTPUT_TEXTURE_COORD7_EXT
GL_OUTPUT_TEXTURE_COORD8_EXT
GL_OUTPUT_TEXTURE_COORD9_EXT
GL_OUTPUT_VERTEX_EXT
GL_OUT_OF_MEMORY
GL_PACK_ALIGNMENT
GL_PACK_IMAGE_HEIGHT
GL_PACK_LSB_FIRST
GL_PACK_ROW_LENGTH
GL_PACK_SKIP_IMAGES
GL_PACK_SKIP_PIXELS
GL_PACK_SKIP_ROWS
GL_PACK_SWAP_BYTES
GL_PASS_THROUGH_TOKEN
GL_PERSPECTIVE_CORRECTION_HINT
GL_PERTURB_EXT
GL_PIXEL_CUBIC_WEIGHT_EXT
GL_PIXEL_MAG_FILTER_EXT
GL_PIXEL_MAP_A_TO_A
GL_PIXEL_MAP_A_TO_A_SIZE
GL_PIXEL_MAP_B_TO_B
GL_PIXEL_MAP_B_TO_B_SIZE
GL_PIXEL_MAP_G_TO_G
GL_PIXEL_MAP_G_TO_G_SIZE
GL_PIXEL_MAP_I_TO_A
GL_PIXEL_MAP_I_TO_A_SIZE
GL_PIXEL_MAP_I_TO_B
GL_PIXEL_MAP_I_TO_B_SIZE
GL_PIXEL_MAP_I_TO_G
GL_PIXEL_MAP_I_TO_G_SIZE
GL_PIXEL_MAP_I_TO_I
GL_PIXEL_MAP_I_TO_I_SIZE
GL_PIXEL_MAP_I_TO_R
GL_PIXEL_MAP_I_TO_R_SIZE
GL_PIXEL_MAP_R_TO_R
GL_PIXEL_MAP_R_TO_R_SIZE
GL_PIXEL_MAP_S_TO_S
GL_PIXEL_MAP_S_TO_S_SIZE
GL_PIXEL_MIN_FILTER_EXT
GL_PIXEL_PACK_BUFFER
GL_PIXEL_PACK_BUFFER_ARB
GL_PIXEL_PACK_BUFFER_BINDING
GL_PIXEL_PACK_BUFFER_BINDING_ARB
GL_PIXEL_TRANSFORM_2D_EXT
GL_PIXEL_TRANSFORM_2D_MATRIX_EXT
GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT
GL_PIXEL_UNPACK_BUFFER
GL_PIXEL_UNPACK_BUFFER_ARB
GL_PIXEL_UNPACK_BUFFER_BINDING
GL_PIXEL_UNPACK_BUFFER_BINDING_ARB
GL_POINT
GL_POINT_DISTANCE_ATTENUATION
GL_POINT_DISTANCE_ATTENUATION_ARB
GL_POINT_FADE_THRESHOLD_SIZE
GL_POINT_FADE_THRESHOLD_SIZE_ARB
GL_POINT_SIZE
GL_POINT_SIZE_GRANULARITY
GL_POINT_SIZE_MAX
GL_POINT_SIZE_MAX_ARB
GL_POINT_SIZE_MIN
GL_POINT_SIZE_MIN_ARB
GL_POINT_SIZE_RANGE
GL_POINT_SMOOTH
GL_POINT_SMOOTH_HINT
GL_POINT_SPRITE
GL_POINT_SPRITE_ARB
GL_POINT_SPRITE_COORD_ORIGIN
GL_POINT_TOKEN
GL_POLYGON
GL_POLYGON_MODE
GL_POLYGON_OFFSET_FACTOR
GL_POLYGON_OFFSET_FILL
GL_POLYGON_OFFSET_LINE
GL_POLYGON_OFFSET_POINT
GL_POLYGON_OFFSET_UNITS
GL_POLYGON_SMOOTH
GL_POLYGON_SMOOTH_HINT
GL_POLYGON_STIPPLE
GL_POLYGON_TOKEN
GL_POSITION
GL_POST_COLOR_MATRIX_ALPHA_BIAS
GL_POST_COLOR_MATRIX_ALPHA_SCALE
GL_POST_COLOR_MATRIX_BLUE_BIAS
GL_POST_COLOR_MATRIX_BLUE_SCALE
GL_POST_COLOR_MATRIX_COLOR_TABLE
GL_POST_COLOR_MATRIX_GREEN_BIAS
GL_POST_COLOR_MATRIX_GREEN_SCALE
GL_POST_COLOR_MATRIX_RED_BIAS
GL_POST_COLOR_MATRIX_RED_SCALE
GL_POST_CONVOLUTION_ALPHA_BIAS
GL_POST_CONVOLUTION_ALPHA_SCALE
GL_POST_CONVOLUTION_BLUE_BIAS
GL_POST_CONVOLUTION_BLUE_SCALE
GL_POST_CONVOLUTION_COLOR_TABLE
GL_POST_CONVOLUTION_GREEN_BIAS
GL_POST_CONVOLUTION_GREEN_SCALE
GL_POST_CONVOLUTION_RED_BIAS
GL_POST_CONVOLUTION_RED_SCALE
GL_PREVIOUS
GL_PREVIOUS_ARB
GL_PREVIOUS_EXT
GL_PRIMARY_COLOR
GL_PRIMARY_COLOR_ARB
GL_PRIMARY_COLOR_EXT
GL_PRIMITIVES_GENERATED_EXT
GL_PROGRAM_ADDRESS_REGISTERS_ARB
GL_PROGRAM_ALU_INSTRUCTIONS_ARB
GL_PROGRAM_ATTRIBS_ARB
GL_PROGRAM_BINDING_ARB
GL_PROGRAM_ERROR_POSITION_ARB
GL_PROGRAM_ERROR_POSITION_NV
GL_PROGRAM_ERROR_STRING_ARB
GL_PROGRAM_FORMAT_ARB
GL_PROGRAM_FORMAT_ASCII_ARB
GL_PROGRAM_INSTRUCTIONS_ARB
GL_PROGRAM_LENGTH_ARB
GL_PROGRAM_LENGTH_NV
GL_PROGRAM_NAME_ARB
GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB
GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB
GL_PROGRAM_NATIVE_ATTRIBS_ARB
GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB
GL_PROGRAM_NATIVE_PARAMETERS_ARB
GL_PROGRAM_NATIVE_TEMPORARIES_ARB
GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB
GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB
GL_PROGRAM_OBJECT_ARB
GL_PROGRAM_PARAMETERS_ARB
GL_PROGRAM_PARAMETER_NV
GL_PROGRAM_POINT_SIZE_EXT
GL_PROGRAM_RESIDENT_NV
GL_PROGRAM_STRING_ARB
GL_PROGRAM_STRING_NV
GL_PROGRAM_TARGET_NV
GL_PROGRAM_TEMPORARIES_ARB
GL_PROGRAM_TEX_INDIRECTIONS_ARB
GL_PROGRAM_TEX_INSTRUCTIONS_ARB
GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB
GL_PROJECTION
GL_PROJECTION_MATRIX
GL_PROJECTION_STACK_DEPTH
GL_PROVOKING_VERTEX_EXT
GL_PROXY_COLOR_TABLE
GL_PROXY_HISTOGRAM
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE
GL_PROXY_TEXTURE_1D
GL_PROXY_TEXTURE_1D_ARRAY_EXT
GL_PROXY_TEXTURE_2D
GL_PROXY_TEXTURE_2D_ARRAY_EXT
GL_PROXY_TEXTURE_3D
GL_PROXY_TEXTURE_CUBE_MAP
GL_PROXY_TEXTURE_RECTANGLE_EXT
GL_QUADRATIC_ATTENUATION
GL_QUADS
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT
GL_QUAD_STRIP
GL_QUERY_COUNTER_BITS
GL_QUERY_COUNTER_BITS_ARB
GL_QUERY_RESULT
GL_QUERY_RESULT_ARB
GL_QUERY_RESULT_AVAILABLE
GL_QUERY_RESULT_AVAILABLE_ARB
GL_R11F_G11F_B10F_EXT
GL_R16
GL_R16F
GL_R16I
GL_R16UI
GL_R32F
GL_R32I
GL_R32UI
GL_R3_G3_B2
GL_R8
GL_R8I
GL_R8UI
GL_RASTERIZER_DISCARD_EXT
GL_READ_BUFFER
GL_READ_FRAMEBUFFER
GL_READ_FRAMEBUFFER_BINDING
GL_READ_FRAMEBUFFER_BINDING_EXT
GL_READ_FRAMEBUFFER_EXT
GL_READ_ONLY
GL_READ_ONLY_ARB
GL_READ_WRITE
GL_READ_WRITE_ARB
GL_RED
GL_REDUCE
GL_RED_BIAS
GL_RED_BITS
GL_RED_INTEGER_EXT
GL_RED_SCALE
GL_REFLECTION_MAP
GL_REFLECTION_MAP_ARB
GL_REFLECTION_MAP_EXT
GL_RENDER
GL_RENDERBUFFER
GL_RENDERBUFFER_ALPHA_SIZE
GL_RENDERBUFFER_ALPHA_SIZE_EXT
GL_RENDERBUFFER_BINDING
GL_RENDERBUFFER_BINDING_EXT
GL_RENDERBUFFER_BLUE_SIZE
GL_RENDERBUFFER_BLUE_SIZE_EXT
GL_RENDERBUFFER_DEPTH_SIZE
GL_RENDERBUFFER_DEPTH_SIZE_EXT
GL_RENDERBUFFER_EXT
GL_RENDERBUFFER_GREEN_SIZE
GL_RENDERBUFFER_GREEN_SIZE_EXT
GL_RENDERBUFFER_HEIGHT
GL_RENDERBUFFER_HEIGHT_EXT
GL_RENDERBUFFER_INTERNAL_FORMAT
GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
GL_RENDERBUFFER_RED_SIZE
GL_RENDERBUFFER_RED_SIZE_EXT
GL_RENDERBUFFER_SAMPLES
GL_RENDERBUFFER_SAMPLES_EXT
GL_RENDERBUFFER_STENCIL_SIZE
GL_RENDERBUFFER_STENCIL_SIZE_EXT
GL_RENDERBUFFER_WIDTH
GL_RENDERBUFFER_WIDTH_EXT
GL_RENDERER
GL_RENDER_MODE
GL_REPEAT
GL_REPLACE
GL_REPLICATE_BORDER
GL_RESCALE_NORMAL
GL_RG
GL_RG16
GL_RG16F
GL_RG16I
GL_RG16UI
GL_RG32F
GL_RG32I
GL_RG32UI
GL_RG8
GL_RG8I
GL_RG8UI
GL_RGB
GL_RGB10
GL_RGB10_A2
GL_RGB12
GL_RGB16
GL_RGB16F_ARB
GL_RGB16I_EXT
GL_RGB16UI_EXT
GL_RGB32F_ARB
GL_RGB32I_EXT
GL_RGB32UI_EXT
GL_RGB4
GL_RGB5
GL_RGB5_A1
GL_RGB8
GL_RGB8I_EXT
GL_RGB8UI_EXT
GL_RGB9_E5_EXT
GL_RGBA
GL_RGBA12
GL_RGBA16
GL_RGBA16F_ARB
GL_RGBA16I_EXT
GL_RGBA16UI_EXT
GL_RGBA2
GL_RGBA32F_ARB
GL_RGBA32I_EXT
GL_RGBA32UI_EXT
GL_RGBA4
GL_RGBA8
GL_RGBA8I_EXT
GL_RGBA8UI_EXT
GL_RGBA_FLOAT16_APPLE
GL_RGBA_FLOAT16_ATI
GL_RGBA_FLOAT32_APPLE
GL_RGBA_FLOAT32_ATI
GL_RGBA_FLOAT_MODE_ARB
GL_RGBA_INTEGER_EXT
GL_RGBA_INTEGER_MODE_EXT
GL_RGBA_MODE
GL_RGBA_SIGNED_COMPONENTS_EXT
GL_RGB_FLOAT16_APPLE
GL_RGB_FLOAT16_ATI
GL_RGB_FLOAT32_APPLE
GL_RGB_FLOAT32_ATI
GL_RGB_INTEGER_EXT
GL_RGB_SCALE
GL_RGB_SCALE_ARB
GL_RGB_SCALE_EXT
GL_RG_INTEGER
GL_RIGHT
GL_SAMPLER_1D
GL_SAMPLER_1D_ARB
GL_SAMPLER_1D_ARRAY_EXT
GL_SAMPLER_1D_ARRAY_SHADOW_EXT
GL_SAMPLER_1D_SHADOW
GL_SAMPLER_1D_SHADOW_ARB
GL_SAMPLER_2D
GL_SAMPLER_2D_ARB
GL_SAMPLER_2D_ARRAY_EXT
GL_SAMPLER_2D_ARRAY_SHADOW_EXT
GL_SAMPLER_2D_RECT_ARB
GL_SAMPLER_2D_RECT_SHADOW_ARB
GL_SAMPLER_2D_SHADOW
GL_SAMPLER_2D_SHADOW_ARB
GL_SAMPLER_3D
GL_SAMPLER_3D_ARB
GL_SAMPLER_BUFFER_EXT
GL_SAMPLER_CUBE
GL_SAMPLER_CUBE_ARB
GL_SAMPLER_CUBE_SHADOW_EXT
GL_SAMPLES
GL_SAMPLES_PASSED
GL_SAMPLES_PASSED_ARB
GL_SAMPLE_ALPHA_TO_COVERAGE
GL_SAMPLE_ALPHA_TO_COVERAGE_ARB
GL_SAMPLE_ALPHA_TO_ONE
GL_SAMPLE_ALPHA_TO_ONE_ARB
GL_SAMPLE_BUFFERS
GL_SAMPLE_COVERAGE
GL_SAMPLE_COVERAGE_ARB
GL_SAMPLE_COVERAGE_INVERT
GL_SAMPLE_COVERAGE_VALUE
GL_SAMPLE_MASK_EXT
GL_SAMPLE_PATTERN_EXT
GL_SCALAR_EXT
GL_SCISSOR_BOX
GL_SCISSOR_TEST
GL_SECONDARY_COLOR_ARRAY
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB
GL_SECONDARY_COLOR_ARRAY_EXT
GL_SECONDARY_COLOR_ARRAY_POINTER
GL_SECONDARY_COLOR_ARRAY_POINTER_EXT
GL_SECONDARY_COLOR_ARRAY_SIZE
GL_SECONDARY_COLOR_ARRAY_SIZE_EXT
GL_SECONDARY_COLOR_ARRAY_STRIDE
GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT
GL_SECONDARY_COLOR_ARRAY_TYPE
GL_SECONDARY_COLOR_ARRAY_TYPE_EXT
GL_SECONDARY_INTERPOLATOR_EXT
GL_SELECT
GL_SELECTION_BUFFER_POINTER
GL_SELECTION_BUFFER_SIZE
GL_SEPARABLE_2D
GL_SEPARATE_ATTRIBS_EXT
GL_SEPARATE_SPECULAR_COLOR
GL_SEPARATE_SPECULAR_COLOR_EXT
GL_SET
GL_SHADER_OBJECT_ARB
GL_SHADER_SOURCE_LENGTH
GL_SHADER_TYPE
GL_SHADE_MODEL
GL_SHADING_LANGUAGE_VERSION
GL_SHADING_LANGUAGE_VERSION_ARB
GL_SHADOW_ATTENUATION_EXT
GL_SHARED_TEXTURE_PALETTE_EXT
GL_SHININESS
GL_SHORT
GL_SINGLE_COLOR
GL_SINGLE_COLOR_EXT
GL_SLUMINANCE
GL_SLUMINANCE8
GL_SLUMINANCE8_ALPHA8
GL_SLUMINANCE8_ALPHA8_EXT
GL_SLUMINANCE8_EXT
GL_SLUMINANCE_ALPHA
GL_SLUMINANCE_ALPHA_EXT
GL_SLUMINANCE_EXT
GL_SMOOTH
GL_SMOOTH_LINE_WIDTH_GRANULARITY
GL_SMOOTH_LINE_WIDTH_RANGE
GL_SMOOTH_POINT_SIZE_GRANULARITY
GL_SMOOTH_POINT_SIZE_RANGE
GL_SOURCE0_ALPHA
GL_SOURCE0_ALPHA_ARB
GL_SOURCE0_ALPHA_EXT
GL_SOURCE0_RGB
GL_SOURCE0_RGB_ARB
GL_SOURCE0_RGB_EXT
GL_SOURCE1_ALPHA
GL_SOURCE1_ALPHA_ARB
GL_SOURCE1_ALPHA_EXT
GL_SOURCE1_RGB
GL_SOURCE1_RGB_ARB
GL_SOURCE1_RGB_EXT
GL_SOURCE2_ALPHA
GL_SOURCE2_ALPHA_ARB
GL_SOURCE2_ALPHA_EXT
GL_SOURCE2_RGB
GL_SOURCE2_RGB_ARB
GL_SOURCE2_RGB_EXT
GL_SOURCE3_ALPHA
GL_SOURCE3_ALPHA_ARB
GL_SOURCE3_ALPHA_EXT
GL_SOURCE3_RGB
GL_SOURCE3_RGB_ARB
GL_SOURCE3_RGB_EXT
GL_SOURCE4_ALPHA
GL_SOURCE4_ALPHA_ARB
GL_SOURCE4_ALPHA_EXT
GL_SOURCE4_RGB
GL_SOURCE4_RGB_ARB
GL_SOURCE4_RGB_EXT
GL_SOURCE5_ALPHA
GL_SOURCE5_ALPHA_ARB
GL_SOURCE5_ALPHA_EXT
GL_SOURCE5_RGB
GL_SOURCE5_RGB_ARB
GL_SOURCE5_RGB_EXT
GL_SOURCE6_ALPHA
GL_SOURCE6_ALPHA_ARB
GL_SOURCE6_ALPHA_EXT
GL_SOURCE6_RGB
GL_SOURCE6_RGB_ARB
GL_SOURCE6_RGB_EXT
GL_SOURCE7_ALPHA
GL_SOURCE7_ALPHA_ARB
GL_SOURCE7_ALPHA_EXT
GL_SOURCE7_RGB
GL_SOURCE7_RGB_ARB
GL_SOURCE7_RGB_EXT
GL_SPECULAR
GL_SPHERE_MAP
GL_SPOT_CUTOFF
GL_SPOT_DIRECTION
GL_SPOT_EXPONENT
GL_SRC0_ALPHA
GL_SRC0_RGB
GL_SRC1_ALPHA
GL_SRC1_RGB
GL_SRC2_ALPHA
GL_SRC2_RGB
GL_SRC3_ALPHA
GL_SRC3_RGB
GL_SRC4_ALPHA
GL_SRC4_RGB
GL_SRC5_ALPHA
GL_SRC5_RGB
GL_SRC6_ALPHA
GL_SRC6_RGB
GL_SRC7_ALPHA
GL_SRC7_RGB
GL_SRC_ALPHA
GL_SRC_ALPHA_SATURATE
GL_SRC_COLOR
GL_SRGB
GL_SRGB8
GL_SRGB8_ALPHA8
GL_SRGB8_ALPHA8_EXT
GL_SRGB8_EXT
GL_SRGB_ALPHA
GL_SRGB_ALPHA_EXT
GL_SRGB_EXT
GL_STACK_OVERFLOW
GL_STACK_UNDERFLOW
GL_STATIC_COPY
GL_STATIC_COPY_ARB
GL_STATIC_DRAW
GL_STATIC_DRAW_ARB
GL_STATIC_READ
GL_STATIC_READ_ARB
GL_STENCIL
GL_STENCIL_ATTACHMENT
GL_STENCIL_ATTACHMENT_EXT
GL_STENCIL_BACK_FAIL
GL_STENCIL_BACK_FAIL_ATI
GL_STENCIL_BACK_FUNC
GL_STENCIL_BACK_FUNC_ATI
GL_STENCIL_BACK_PASS_DEPTH_FAIL
GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI
GL_STENCIL_BACK_PASS_DEPTH_PASS
GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI
GL_STENCIL_BACK_REF
GL_STENCIL_BACK_VALUE_MASK
GL_STENCIL_BACK_WRITEMASK
GL_STENCIL_BITS
GL_STENCIL_CLEAR_VALUE
GL_STENCIL_FAIL
GL_STENCIL_FUNC
GL_STENCIL_INDEX
GL_STENCIL_INDEX1
GL_STENCIL_INDEX16
GL_STENCIL_INDEX16_EXT
GL_STENCIL_INDEX1_EXT
GL_STENCIL_INDEX4
GL_STENCIL_INDEX4_EXT
GL_STENCIL_INDEX8
GL_STENCIL_INDEX8_EXT
GL_STENCIL_PASS_DEPTH_FAIL
GL_STENCIL_PASS_DEPTH_PASS
GL_STENCIL_REF
GL_STENCIL_TEST
GL_STENCIL_TEST_TWO_SIDE_EXT
GL_STENCIL_VALUE_MASK
GL_STENCIL_WRITEMASK
GL_STEREO
GL_STORAGE_CACHED_APPLE
GL_STORAGE_CLIENT_APPLE
GL_STORAGE_PRIVATE_APPLE
GL_STORAGE_SHARED_APPLE
GL_STREAM_COPY
GL_STREAM_COPY_ARB
GL_STREAM_DRAW
GL_STREAM_DRAW_ARB
GL_STREAM_READ
GL_STREAM_READ_ARB
GL_SUBPIXEL_BITS
GL_SUBTRACT
GL_T2F_C3F_V3F
GL_T2F_C4F_N3F_V3F
GL_T2F_C4UB_V3F
GL_T2F_IUI_N3F_V2F_EXT
GL_T2F_IUI_N3F_V3F_EXT
GL_T2F_IUI_V2F_EXT
GL_T2F_IUI_V3F_EXT
GL_T2F_N3F_V3F
GL_T2F_V3F
GL_T4F_C4F_N3F_V4F
GL_T4F_V4F
GL_TABLE_TOO_LARGE
GL_TANGENT_ARRAY_EXT
GL_TANGENT_ARRAY_POINTER_EXT
GL_TANGENT_ARRAY_STRIDE_EXT
GL_TANGENT_ARRAY_TYPE_EXT
GL_TEXTURE
GL_TEXTURE0
GL_TEXTURE1
GL_TEXTURE10
GL_TEXTURE11
GL_TEXTURE12
GL_TEXTURE13
GL_TEXTURE14
GL_TEXTURE15
GL_TEXTURE16
GL_TEXTURE17
GL_TEXTURE18
GL_TEXTURE19
GL_TEXTURE2
GL_TEXTURE20
GL_TEXTURE21
GL_TEXTURE22
GL_TEXTURE23
GL_TEXTURE24
GL_TEXTURE25
GL_TEXTURE26
GL_TEXTURE27
GL_TEXTURE28
GL_TEXTURE29
GL_TEXTURE3
GL_TEXTURE30
GL_TEXTURE31
GL_TEXTURE4
GL_TEXTURE5
GL_TEXTURE6
GL_TEXTURE7
GL_TEXTURE8
GL_TEXTURE9
GL_TEXTURE_1D
GL_TEXTURE_1D_ARRAY_EXT
GL_TEXTURE_2D
GL_TEXTURE_2D_ARRAY_EXT
GL_TEXTURE_3D
GL_TEXTURE_ALPHA_SIZE
GL_TEXTURE_ALPHA_TYPE
GL_TEXTURE_ALPHA_TYPE_ARB
GL_TEXTURE_APPLICATION_MODE_EXT
GL_TEXTURE_BASE_LEVEL
GL_TEXTURE_BINDING_1D
GL_TEXTURE_BINDING_1D_ARRAY_EXT
GL_TEXTURE_BINDING_2D
GL_TEXTURE_BINDING_2D_ARRAY_EXT
GL_TEXTURE_BINDING_3D
GL_TEXTURE_BINDING_CUBE_MAP
GL_TEXTURE_BINDING_CUBE_MAP_ARB
GL_TEXTURE_BINDING_CUBE_MAP_EXT
GL_TEXTURE_BINDING_RECTANGLE_EXT
GL_TEXTURE_BLUE_SIZE
GL_TEXTURE_BLUE_TYPE
GL_TEXTURE_BLUE_TYPE_ARB
GL_TEXTURE_BORDER
GL_TEXTURE_BORDER_COLOR
GL_TEXTURE_COMPARE_FAIL_VALUE_ARB
GL_TEXTURE_COMPARE_FUNC
GL_TEXTURE_COMPARE_FUNC_ARB
GL_TEXTURE_COMPARE_MODE
GL_TEXTURE_COMPARE_MODE_ARB
GL_TEXTURE_COMPRESSED
GL_TEXTURE_COMPRESSED_ARB
GL_TEXTURE_COMPRESSED_IMAGE_SIZE
GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
GL_TEXTURE_COMPRESSION_HINT
GL_TEXTURE_COORD_ARRAY
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB
GL_TEXTURE_COORD_ARRAY_POINTER
GL_TEXTURE_COORD_ARRAY_SIZE
GL_TEXTURE_COORD_ARRAY_STRIDE
GL_TEXTURE_COORD_ARRAY_TYPE
GL_TEXTURE_CUBE_MAP
GL_TEXTURE_CUBE_MAP_ARB
GL_TEXTURE_CUBE_MAP_EXT
GL_TEXTURE_CUBE_MAP_NEGATIVE_X
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
GL_TEXTURE_CUBE_MAP_POSITIVE_X
GL_TEXTURE_CUBE_MAP_POSITIVE_Y
GL_TEXTURE_CUBE_MAP_POSITIVE_Z
GL_TEXTURE_DEPTH
GL_TEXTURE_DEPTH_SIZE
GL_TEXTURE_DEPTH_SIZE_ARB
GL_TEXTURE_DEPTH_TYPE
GL_TEXTURE_DEPTH_TYPE_ARB
GL_TEXTURE_ENV
GL_TEXTURE_ENV_COLOR
GL_TEXTURE_ENV_MODE
GL_TEXTURE_FILTER_CONTROL
GL_TEXTURE_GEN_MODE
GL_TEXTURE_GEN_Q
GL_TEXTURE_GEN_R
GL_TEXTURE_GEN_S
GL_TEXTURE_GEN_T
GL_TEXTURE_GREEN_SIZE
GL_TEXTURE_GREEN_TYPE
GL_TEXTURE_GREEN_TYPE_ARB
GL_TEXTURE_HEIGHT
GL_TEXTURE_INDEX_SIZE_EXT
GL_TEXTURE_INTENSITY_SIZE
GL_TEXTURE_INTENSITY_TYPE_ARB
GL_TEXTURE_INTERNAL_FORMAT
GL_TEXTURE_LIGHT_EXT
GL_TEXTURE_LOD_BIAS
GL_TEXTURE_LUMINANCE_SIZE
GL_TEXTURE_LUMINANCE_TYPE_ARB
GL_TEXTURE_MAG_FILTER
GL_TEXTURE_MATERIAL_FACE_EXT
GL_TEXTURE_MATERIAL_PARAMETER_EXT
GL_TEXTURE_MATRIX
GL_TEXTURE_MAX_ANISOTROPY_EXT
GL_TEXTURE_MAX_LEVEL
GL_TEXTURE_MAX_LOD
GL_TEXTURE_MIN_FILTER
GL_TEXTURE_MIN_LOD
GL_TEXTURE_NORMAL_EXT
GL_TEXTURE_PRIORITY
GL_TEXTURE_RECTANGLE_EXT
GL_TEXTURE_RED_SIZE
GL_TEXTURE_RED_TYPE
GL_TEXTURE_RED_TYPE_ARB
GL_TEXTURE_RESIDENT
GL_TEXTURE_SHARED_SIZE_EXT
GL_TEXTURE_STACK_DEPTH
GL_TEXTURE_STENCIL_SIZE
GL_TEXTURE_STENCIL_SIZE_EXT
GL_TEXTURE_WIDTH
GL_TEXTURE_WRAP_R
GL_TEXTURE_WRAP_S
GL_TEXTURE_WRAP_T
GL_TRACK_MATRIX_NV
GL_TRACK_MATRIX_TRANSFORM_NV
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT
GL_TRANSFORM_FEEDBACK_BUFFER_EXT
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT
GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT
GL_TRANSFORM_FEEDBACK_VARYINGS_EXT
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT
GL_TRANSPOSE_COLOR_MATRIX
GL_TRANSPOSE_CURRENT_MATRIX_ARB
GL_TRANSPOSE_MODELVIEW_MATRIX
GL_TRANSPOSE_NV
GL_TRANSPOSE_PROJECTION_MATRIX
GL_TRANSPOSE_TEXTURE_MATRIX
GL_TRIANGLES
GL_TRIANGLE_FAN
GL_TRIANGLE_STRIP
GL_UBYTE
GL_UINT 
GL_UNIFORM_ARRAY_STRIDE
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES
GL_UNIFORM_BLOCK_BINDING
GL_UNIFORM_BLOCK_DATA_SIZE
GL_UNIFORM_BLOCK_INDEX
GL_UNIFORM_BLOCK_NAME_LENGTH
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER
GL_UNIFORM_BUFFER
GL_UNIFORM_BUFFER_BINDING
GL_UNIFORM_BUFFER_BINDING_EXT
GL_UNIFORM_BUFFER_EXT
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT
GL_UNIFORM_BUFFER_SIZE
GL_UNIFORM_BUFFER_START
GL_UNIFORM_IS_ROW_MAJOR
GL_UNIFORM_MATRIX_STRIDE
GL_UNIFORM_NAME_LENGTH
GL_UNIFORM_OFFSET
GL_UNIFORM_SIZE
GL_UNIFORM_TYPE
GL_UNPACK_ALIGNMENT
GL_UNPACK_IMAGE_HEIGHT
GL_UNPACK_LSB_FIRST
GL_UNPACK_ROW_LENGTH
GL_UNPACK_SKIP_IMAGES
GL_UNPACK_SKIP_PIXELS
GL_UNPACK_SKIP_ROWS
GL_UNPACK_SWAP_BYTES
GL_UNSIGNED_BYTE_2_3_3_REV
GL_UNSIGNED_BYTE_3_3_2
GL_UNSIGNED_INT_10F_11F_11F_REV_EXT
GL_UNSIGNED_INT_10_10_10_2
GL_UNSIGNED_INT_24_8
GL_UNSIGNED_INT_2_10_10_10_REV
GL_UNSIGNED_INT_5_9_9_9_REV_EXT
GL_UNSIGNED_INT_8_8_8_8
GL_UNSIGNED_INT_8_8_8_8_REV
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT
GL_UNSIGNED_INT_SAMPLER_1D_EXT
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT
GL_UNSIGNED_INT_SAMPLER_2D_EXT
GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT
GL_UNSIGNED_INT_SAMPLER_3D_EXT
GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT
GL_UNSIGNED_INT_SAMPLER_CUBE_EXT
GL_UNSIGNED_INT_VEC2_EXT
GL_UNSIGNED_INT_VEC3_EXT
GL_UNSIGNED_INT_VEC4_EXT
GL_UNSIGNED_NORMALIZED
GL_UNSIGNED_NORMALIZED_ARB
GL_UNSIGNED_SHORT_1_5_5_5_REV
GL_UNSIGNED_SHORT_4_4_4_4
GL_UNSIGNED_SHORT_4_4_4_4_REV
GL_UNSIGNED_SHORT_5_5_5_1
GL_UNSIGNED_SHORT_5_6_5
GL_UNSIGNED_SHORT_5_6_5_REV
GL_UPPER_LEFT
GL_USHRT
GL_V2F
GL_V3F
GL_VALIDATE_STATUS
GL_VARIANT_ARRAY_EXT
GL_VARIANT_ARRAY_POINTER_EXT
GL_VARIANT_ARRAY_STRIDE_EXT
GL_VARIANT_ARRAY_TYPE_EXT
GL_VARIANT_DATATYPE_EXT
GL_VARIANT_EXT
GL_VARIANT_VALUE_EXT
GL_VECTOR_EXT
GL_VENDOR
GL_VERSION
GL_VERTEX_ARRAY
GL_VERTEX_ARRAY_BINDING_APPLE
GL_VERTEX_ARRAY_BUFFER_BINDING
GL_VERTEX_ARRAY_BUFFER_BINDING_ARB
GL_VERTEX_ARRAY_POINTER
GL_VERTEX_ARRAY_RANGE_APPLE
GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE
GL_VERTEX_ARRAY_RANGE_POINTER_APPLE
GL_VERTEX_ARRAY_SIZE
GL_VERTEX_ARRAY_STORAGE_HINT_APPLE
GL_VERTEX_ARRAY_STRIDE
GL_VERTEX_ARRAY_TYPE
GL_VERTEX_ATTRIB_ARRAY0_NV
GL_VERTEX_ATTRIB_ARRAY10_NV
GL_VERTEX_ATTRIB_ARRAY11_NV
GL_VERTEX_ATTRIB_ARRAY12_NV
GL_VERTEX_ATTRIB_ARRAY13_NV
GL_VERTEX_ATTRIB_ARRAY14_NV
GL_VERTEX_ATTRIB_ARRAY15_NV
GL_VERTEX_ATTRIB_ARRAY1_NV
GL_VERTEX_ATTRIB_ARRAY2_NV
GL_VERTEX_ATTRIB_ARRAY3_NV
GL_VERTEX_ATTRIB_ARRAY4_NV
GL_VERTEX_ATTRIB_ARRAY5_NV
GL_VERTEX_ATTRIB_ARRAY6_NV
GL_VERTEX_ATTRIB_ARRAY7_NV
GL_VERTEX_ATTRIB_ARRAY8_NV
GL_VERTEX_ATTRIB_ARRAY9_NV
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB
GL_VERTEX_ATTRIB_ARRAY_ENABLED
GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB
GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB
GL_VERTEX_ATTRIB_ARRAY_POINTER
GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB
GL_VERTEX_ATTRIB_ARRAY_SIZE
GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB
GL_VERTEX_ATTRIB_ARRAY_STRIDE
GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB
GL_VERTEX_ATTRIB_ARRAY_TYPE
GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB
GL_VERTEX_BLEND_ARB
GL_VERTEX_PROGRAM_ARB
GL_VERTEX_PROGRAM_BINDING_NV
GL_VERTEX_PROGRAM_NV
GL_VERTEX_PROGRAM_POINT_SIZE
GL_VERTEX_PROGRAM_POINT_SIZE_ARB
GL_VERTEX_PROGRAM_POINT_SIZE_NV
GL_VERTEX_PROGRAM_TWO_SIDE
GL_VERTEX_PROGRAM_TWO_SIDE_ARB
GL_VERTEX_PROGRAM_TWO_SIDE_NV
GL_VERTEX_SHADER
GL_VERTEX_SHADER_ARB
GL_VERTEX_SHADER_BINDING_EXT
GL_VERTEX_SHADER_EXT
GL_VERTEX_SHADER_INSTRUCTIONS_EXT
GL_VERTEX_SHADER_INVARIANTS_EXT
GL_VERTEX_SHADER_LOCALS_EXT
GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
GL_VERTEX_SHADER_OPTIMIZED_EXT
GL_VERTEX_SHADER_VARIANTS_EXT
GL_VERTEX_STATE_PROGRAM_NV
GL_VERTEX_WEIGHTING_EXT
GL_VERTEX_WEIGHT_ARRAY_EXT
GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT
GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT
GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT
GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT
GL_VIEWPORT
GL_WEIGHT_ARRAY_ARB
GL_WEIGHT_ARRAY_BUFFER_BINDING
GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB
GL_WEIGHT_ARRAY_POINTER_ARB
GL_WEIGHT_ARRAY_SIZE_ARB
GL_WEIGHT_ARRAY_STRIDE_ARB
GL_WEIGHT_ARRAY_TYPE_ARB
GL_WEIGHT_SUM_UNITY_ARB
GL_WRITE_ONLY
GL_WRITE_ONLY_ARB
GL_W_EXT
GL_XOR
GL_X_EXT
GL_Y_EXT
GL_ZERO
GL_ZOOM_X
GL_ZOOM_Y
GL_Z_EXT
GLuint GLMContext::FindSamplerObject(const GLMTexSamplingParams &)
GPU Pipeline statistics: VCONCOMM's outgoing message queue is too large (%u ) - dropping frame.
GPU reports %dMB available memory which is too low, using %d MB
GXI;G`
G`I;Ghsi1
GameResourceServiceClientV001
GameResourceServiceServerV001
GameUIService_001
Generic
GenericFloat
GetBufferType() != RENDER_BUFFER_TYPE_DYNAMIC
GetBufferType() != RENDER_BUFFER_TYPE_GPU_ONLY
GetBufferType() == RENDER_BUFFER_TYPE_DYNAMIC
GetBufferType() == RENDER_BUFFER_TYPE_SEMISTATIC
GetRendererCount() > 0
GetResourceManifest
GetVfxShaderFile: Failed to unserialize CVfxShaderFile.  Is your shadercache out-of-date?  Try deleting it.
GhIcL$8H
Graphics Device changed, resetting video config
H	p(]
H	w(]
H!w(]
H$A;L$$u
H+S(H
H,A;L$,u
H,IcD$
H0I;H8
H9JHt/H9JPt7H
H9[0u0H9[8t*H
H9[8u
H9[8u0H9[@t*H
H9q(w
H;A(usH
H;G t
H;W A
HIGHDPI
HKeySymbol KeyValues::GetNameSymbol() const
HKeySymbol KeyValues::GetNameSymbolCaseSensitive() const
HRenderTexture
H[A\A]A^A_]
H[A^A_]
H__ZdaPv
H__ZdlPv
H__Znam
H__Znwm
HammerMapLoader001
Hc=$*
Hc=/*
Hc@(Hi
Hc@XH
Hc@`H
Hc@pH
Hc@pI
HcC0I
HcGlH
HcI(H
HcIHH
HcILH
HcP(H
HcR(H
HcqLH
Header mismatch.
Height
HelpSystem_001
Hitch alert: Present was waiting for %d iterations and %.1f seconds.
HookUpTextureBits
HostStateMgr001
Huffman code size table overflow
Huffman table 0x%02x was not defined
I CUtlLinkedList<BlendStateGL_t, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<BlendStateGL_t, long long> > >::AllocInternal(bool) [T = BlendStateGL_t, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<BlendStateGL_t, long long> >]
I CUtlLinkedList<CGLMProgramSeparable::UniformBinding_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CGLMProgramSeparable::UniformBinding_t, unsigned short>, unsigned short> >::AllocInternal(bool) [T = CGLMProgramSeparable::UniformBinding_t, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<CGLMProgramSeparable::UniformBinding_t, unsigned short>, unsigned short>]
I CUtlLinkedList<COcclusionQueryMgr::OcclusionQueryObject_t, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<COcclusionQueryMgr::OcclusionQueryObject_t, long long> > >::AllocInternal(bool) [T = COcclusionQueryMgr::OcclusionQueryObject_t, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<COcclusionQueryMgr::OcclusionQueryObject_t, long long> >]
I CUtlLinkedList<CSwapChainBase *, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<CSwapChainBase *, long long> > >::AllocInternal(bool) [T = CSwapChainBase *, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<CSwapChainBase *, long long> >]
I CUtlLinkedList<DepthStencilStateGL_t, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<DepthStencilStateGL_t, long long> > >::AllocInternal(bool) [T = DepthStencilStateGL_t, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<DepthStencilStateGL_t, long long> >]
I CUtlLinkedList<RasterizerStateGL_t, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<RasterizerStateGL_t, long long> > >::AllocInternal(bool) [T = RasterizerStateGL_t, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<RasterizerStateGL_t, long long> >]
I CUtlLinkedList<__GLsync *, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<__GLsync *, unsigned short>, unsigned short> >::AllocInternal(bool) [T = __GLsync *, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<__GLsync *, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<CGLShaderHashValue, ProgramBinaryGL_t, unsigned int, bool (*)(const CGLShaderHashValue &, const CGLShaderHashValue &)>::Node_t, unsigned int, CUtlMap<CGLShaderHashValue, ProgramBinaryGL_t, unsigned int, bool (*)(const CGLShaderHashValue &, const CGLShaderHashValue &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CGLShaderHashValue, ProgramBinaryGL_t, unsigned int, bool (*)(const CGLShaderHashValue &, const CGLShaderHashValue &)>::Node_t, unsigned int>, unsigned int> >::NewNode(const T *) [T = CUtlMap<CGLShaderHashValue, ProgramBinaryGL_t, unsigned int, bool (*)(const CGLShaderHashValue &, const CGLShaderHashValue &)>::Node_t, I = unsigned int, L = CUtlMap<CGLShaderHashValue, ProgramBinaryGL_t, unsigned int, bool (*)(const CGLShaderHashValue &, const CGLShaderHashValue &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<CGLShaderHashValue, ProgramBinaryGL_t, unsigned int, bool (*)(const CGLShaderHashValue &, const CGLShaderHashValue &)>::Node_t, unsigned int>, unsigned int>]
I CUtlRBTree<CUtlMap<GLMTexLayoutKey, GLMTexLayout *, unsigned short, bool (*)(const GLMTexLayoutKey &, const GLMTexLayoutKey &)>::Node_t, unsigned short, CUtlMap<GLMTexLayoutKey, GLMTexLayout *, unsigned short, bool (*)(const GLMTexLayoutKey &, const GLMTexLayoutKey &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<GLMTexLayoutKey, GLMTexLayout *, unsigned short, bool (*)(const GLMTexLayoutKey &, const GLMTexLayoutKey &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<GLMTexLayoutKey, GLMTexLayout *, unsigned short, bool (*)(const GLMTexLayoutKey &, const GLMTexLayoutKey &)>::Node_t, I = unsigned short, L = CUtlMap<GLMTexLayoutKey, GLMTexLayout *, unsigned short, bool (*)(const GLMTexLayoutKey &, const GLMTexLayoutKey &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<GLMTexLayoutKey, GLMTexLayout *, unsigned short, bool (*)(const GLMTexLayoutKey &, const GLMTexLayoutKey &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<OsSpecificWindowHandle_t__ *, SDL_Window *, unsigned short, bool (*)(OsSpecificWindowHandle_t__ *const &, OsSpecificWindowHandle_t__ *const &)>::Node_t, unsigned short, CUtlMap<OsSpecificWindowHandle_t__ *, SDL_Window *, unsigned short, bool (*)(OsSpecificWindowHandle_t__ *const &, OsSpecificWindowHandle_t__ *const &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<OsSpecificWindowHandle_t__ *, SDL_Window *, unsigned short, bool (*)(OsSpecificWindowHandle_t__ *const &, OsSpecificWindowHandle_t__ *const &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<OsSpecificWindowHandle_t__ *, SDL_Window *, unsigned short, bool (*)(OsSpecificWindowHandle_t__ *const &, OsSpecificWindowHandle_t__ *const &)>::Node_t, I = unsigned short, L = CUtlMap<OsSpecificWindowHandle_t__ *, SDL_Window *, unsigned short, bool (*)(OsSpecificWindowHandle_t__ *const &, OsSpecificWindowHandle_t__ *const &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<OsSpecificWindowHandle_t__ *, SDL_Window *, unsigned short, bool (*)(OsSpecificWindowHandle_t__ *const &, OsSpecificWindowHandle_t__ *const &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<RenderTargetState_t, CGLMFBO *, unsigned short, bool (*)(const RenderTargetState_t &, const RenderTargetState_t &)>::Node_t, unsigned short, CUtlMap<RenderTargetState_t, CGLMFBO *, unsigned short, bool (*)(const RenderTargetState_t &, const RenderTargetState_t &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<RenderTargetState_t, CGLMFBO *, unsigned short, bool (*)(const RenderTargetState_t &, const RenderTargetState_t &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<RenderTargetState_t, CGLMFBO *, unsigned short, bool (*)(const RenderTargetState_t &, const RenderTargetState_t &)>::Node_t, I = unsigned short, L = CUtlMap<RenderTargetState_t, CGLMFBO *, unsigned short, bool (*)(const RenderTargetState_t &, const RenderTargetState_t &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<RenderTargetState_t, CGLMFBO *, unsigned short, bool (*)(const RenderTargetState_t &, const RenderTargetState_t &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Insert(const T &, ERBTreeInsertBehavior) [T = CUtlSymbolTable::CStringPoolIndex, I = unsigned short, L = CUtlSymbolTable::CLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlSymbolTable::CStringPoolIndex, I = unsigned short, L = CUtlSymbolTable::CLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>]
I CUtlRBTree<void *, int, bool (*)(void *const &, void *const &), CUtlMemory<UtlRBTreeNode_t<void *, int>, int> >::NewNode(const T *) [T = void *, I = int, L = bool (*)(void *const &, void *const &), M = CUtlMemory<UtlRBTreeNode_t<void *, int>, int>]
I#A H9
I+V H)
I9\08
I9}0t
I9}Ht
IB "%s" : Attempted to create too big of a dynamic index buffer!
IB: %d buffers, %.2f MB
INPUT_LAYOUT_VARIATION_DEFAULT
INPUT_LAYOUT_VARIATION_MAX
INPUT_LAYOUT_VARIATION_STREAM1_INSTANCEID
INPUT_LAYOUT_VARIATION_STREAM1_INSTANCEID_LIGHTMAP_PARAMS
INPUT_LAYOUT_VARIATION_STREAM1_INSTANCEID_MORPH_VERT_ID
INPUT_LAYOUT_VARIATION_STREAM1_MAT3X4
INSt3__11
IOAccelerator
IOGLBundleName
IOService
IQuickTime001
IStack_Annotation::IStack_Annotation(CCallStackMarkerBase const&)
IStack_Annotation::~IStack_Annotation()
IT;H0s
IT;H@s
IcD$(A;D$
IcD$(H
IcEHHi
IcG L
IcG0I
IcG0M
IcL$ H
IcM H
IcM(H
IcM@H
IcMPH
IcMxH
IcN8H
IcNXH
IcNhH
IcO(H
IcO,H
IcOxI
Icu 1
IcwXH
Ifffff.
Ignoring PLTE chunk in grayscale PNG
Ignoring attempt to set cHRM RGB triangle with zero area
Ignoring attempt to set negative chromaticity value
Ignoring cHRM chunk with negative chromaticities
Ignoring gAMA chunk with out of range gamma
Ignoring iCCP chunk with declared size = @1 and actual length = @2
Ignoring incorrect cHRM value when sRGB is also present
Ignoring incorrect cHRM white(@1,@2) r(@3,@4)g(@5,@6)b(@7,@8) when sRGB is also present
Ignoring incorrect gAMA value @1 when sRGB is also present
Ignoring invalid time value
Ignoring nonzero compression type in iCCP chunk
Illegal layout for dx9! Cannot have a stream with both instanced + non-instanced fields!
Illegal layout for dx9! Cannot have a stream with fields with different step rates!
Image height exceeds user limit in IHDR
Image height is zero in IHDR
Image too wide for this implementation
Image width exceeds user limit in IHDR
Image width is zero in IHDR
ImageFormat CColorFormatBase::FindNearestSupportedDepthFormat(ImageFormat, ImageFormat, ImageFormat)
ImageFormat GLMFormatToImageFormat(GLMTexFormat_t)
ImageFormat VTEX_FormatToRuntime(VTEX_Format_t)
Implement me
Implement me!
Improper call to JPEG library in state %d
Incomplete compressed datastream
Inconsistent progression sequence for component %d coefficient %d
Incorrect IEND chunk length
Incorrect bKGD chunk index value
Incorrect bKGD chunk length
Incorrect cHRM chunk length
Incorrect gAMA chunk length
Incorrect hIST chunk length
Incorrect oFFs chunk length
Incorrect pHYs chunk length
Incorrect primitive topology for bound shader. Shader expects RENDER_PRIM_%d_CONTROL_POINT_PATCHLIST. Rendering will be corrupt.
Incorrect sBIT chunk length
Incorrect sRGB chunk length
Incorrect tIME chunk length
Incorrect tRNS chunk length
Input file read error
InputLayoutGL_t *CInputLayoutGL::ComputeVertexSpec(const CVsInputSignatureVector *) const
InputLayoutVariation_t
InputService_001
InputStackSystemVersion001
InputSystemVersion001
InstallSchemaBindings
Insufficient memory (case %d)
Insufficient memory for hIST chunk data
Insufficient memory for pCAL parameter
Insufficient memory for pCAL params
Insufficient memory for pCAL purpose
Insufficient memory for pCAL units
Insufficient memory to process iCCP chunk
Insufficient memory to process iCCP profile
Insufficient memory to process text chunk
Insufficient memory to store iTXt chunk
Insufficient memory to store zTXt chunk
Intel900
IntelX3100
Intentionally vague touch behavior for %p
Interlace handling should be turned on when using png_read_image
InternalRT0
InternalSwapChainDepthStencil
InternalSwapChainRT
Internal_GetSubKey() != NULL
Internal_GetSubKey() == NULL
Internal_GetSubKey() == dat
Invalid IHDR chunk
Invalid IHDR data
Invalid JPEG file structure: SOS before SOF
Invalid JPEG file structure: missing SOS marker
Invalid JPEG file structure: two SOF markers
Invalid JPEG file structure: two SOI markers
Invalid PLTE after IDAT
Invalid SOS parameters for sequential JPEG
Invalid argument.
Invalid attempt to read row data
Invalid bKGD after IDAT
Invalid bit depth in IHDR
Invalid cHRM after IDAT
Invalid cHRM blue point
Invalid cHRM green point
Invalid cHRM red point
Invalid cHRM white point
Invalid channels format.
Invalid color quantization mode change
Invalid color type in IHDR
Invalid color type/bit depth combination in IHDR
Invalid component ID %d in SOS
Invalid crop request
Invalid filter method in IHDR
Invalid format for pCAL parameter
Invalid gAMA after IDAT
Invalid hIST after IDAT
Invalid iCCP after IDAT
Invalid image format for render target
Invalid image height in IHDR
Invalid image width in IHDR
Invalid memory pool code %d
Invalid oFFs after IDAT
Invalid pCAL after IDAT
Invalid pCAL data
Invalid pCAL equation type
Invalid pCAL parameters for equation type
Invalid pHYs after IDAT
Invalid palette chunk
Invalid palette length
Invalid palette size, hIST allocation skipped
Invalid progressive parameters Ss=%d Se=%d Ah=%d Al=%d
Invalid progressive parameters at scan script entry %d
Invalid rendersystem %d
Invalid sBIT after IDAT
Invalid sCAL after IDAT
Invalid sCAL chunk ignored: bad height format
Invalid sCAL chunk ignored: bad width format
Invalid sCAL chunk ignored: non-positive height
Invalid sCAL chunk ignored: non-positive width
Invalid sCAL height
Invalid sCAL ignored: invalid unit
Invalid sCAL unit
Invalid sCAL width
Invalid sPLT after IDAT
Invalid sRGB after IDAT
Invalid scan script at entry %d
Invalid tRNS after IDAT
Invalid thread index (%d) given
IsIdxValid(i)
IsInList(after)
IsInList(before)
IsPowerOfTwo( m_nAlignment )
IsRelevantFieldType( pFieldType )
IsResourceWeakHandle( pHandleType )
IsValid()
IsValidIndex(elem)
IsValidIndex(elem) && IndexInRange( elem )
IsValidIndex(i) && (i != InvalidIndex())
IsValidIterator( it )
J9\)8u
JFIF APP0 marker: version %d.%02d, density %dx%d  %d
JFIF extension marker: JPEG-compressed thumbnail image, length %u
JFIF extension marker: RGB thumbnail image, length %u
JFIF extension marker: palette thumbnail image, length %u
JFIF extension marker: type 0x%02x, length %u
JPEG datastream contains no image
JPEG parameter struct mismatch: library thinks size is %u, caller expects %u
JPEGMEM
JobStatus_t CJob::Abort(bool)
K8H9K0
KM96u/H
KV Conditional Evaluation Error
KcD'0
KeyValueCache001
KeyValues *KeyValues::FindKey(HKeySymbol) const
KeyValues *KeyValues::FindKey(const char *, bool)
KeyValues *KeyValues::GetFirstSubKey() const
KeyValues *KeyValues::GetNextKey() const
KeyValues Error: %s in file %s
KeyValues::FindKey called on NULL pointer!
KeyValues::ParseIncludedKeys: Couldn't load included keyvalue file %s
KeyValues::RecursiveSaveToFile: TODO, missing code for TYPE_COLOR.
Kffffff.
L$	@A
L$ ;H u
L$(E1
L$@Hi
L)3[A^]
L+V(I
L90t*H
L;>t!L9
L;>t'L9
LACsukL
LACsuwL
LE_BGRA8888
LE_BGRX8888
LINEAR_ABGR8888
LINEAR_ARGB8888
LINEAR_BGR888
LINEAR_BGRA8888
LINEAR_BGRX5551
LINEAR_BGRX8888
LINEAR_D24S8
LINEAR_I8
LINEAR_RGB888
LINEAR_RGBA16161616
LINEAR_RGBA8888
LINUX
LOWVIOLENCE
Lc4%(
Lc;fB
LcS@L
Lcq(L
Lcs(I
Lcx<L
Lc~@Hc
Link failed; no code produced.  Log string from driver:
LoadFromBuffer: expected '{', found '%s'
Loaded video settings config from '%s'
Localize_001
LockDynamicTexture not currently implemented in rendersystemdx9
LoggingSystem_Log(int, LoggingSeverity_t, Color, char const*, ...)
LoggingSystem_Log(int, LoggingSeverity_t, LeafCodeInfo_t const&, char const*, ...)
M96u/H
M9d$8
M;w8u
MATCHFRAMEWORK_001
MAX_ALLOC_CHUNK is wrong, please fix
MDiskDataForResourceType
MEDIUM
MNG features are not allowed in a PNG datastream
MNoScatter
MODEL_PROCESSING_SCRIPT_INTERFACE_001
MODEL_PROCESSING_SERVICES_INTERFACE_001
MResourceTypeForInfoType
MResourceVersion
Malformed iCCP chunk
Malformed iTXt chunk
Mantle
MapListService_001
MaterialUtils_001
Max Combined Texture Image Units : %d
Max Fragment Texture Image Units : %d
Max Geometry Texture Image Units : %d
Max Tess Control Texture Image Units : %d
Max Tess Eval Texture Image Units : %d
Max Texture Dimensions : %d x %d
Max Vertex Texture Image Units : %d
MaxDeviceID
Maximum device access threads: %u
Maximum supported image dimension is %u pixels
Mc'fC
Mc<$J
Mcg I
Mcl$LE
Mc}hI
Member function called on NULL KeyValues
Memory allocation failed while processing sCAL
Mesa3DFX
MeshSystem001
MeshUtils001
Mffffff.
MinDeviceID
Miscellaneous marker 0x%02x, length %u
Missing Huffman code table entry
Missing IHDR before IDAT
Missing IHDR before PLTE
Missing IHDR before bKGD
Missing IHDR before cHRM
Missing IHDR before gAMA
Missing IHDR before hIST
Missing IHDR before iCCP
Missing IHDR before iTXt
Missing IHDR before oFFs
Missing IHDR before pCAL
Missing IHDR before pHYs
Missing IHDR before sBIT
Missing IHDR before sCAL
Missing IHDR before sPLT
Missing IHDR before sRGB
Missing IHDR before tEXt
Missing IHDR before tRNS
Missing IHDR before zTXt
Missing OpenGL ES v3.1 required entrypoints.
Missing OpenGL v3.0 required entrypoints.
Missing OpenGL v3.1 required entrypoints.
Missing OpenGL v3.2 required entrypoints.
Missing OpenGL v3.3 required entrypoints.
Missing OpenGL v4.0 required entrypoints.
Missing OpenGL v4.1 required entrypoints.
Missing OpenGL v4.2 required entrypoints.
Missing OpenGL v4.3 required entrypoints.
Missing PLTE before IDAT
Missing PLTE before bKGD
Missing PLTE before hIST
Missing PLTE before tRNS
Missing basic OpenGL v1.0 -> v2.0 required OpenGL functionality.
ModelDocUtils001
N([A^]
N0H9O0r
N0I;N8
N0I;N8rPH
N0I;N8rcI
N0I;N8tE1
N11PerfMarkers19IPerfMarkerProviderE
N11PerfMarkers27CKHRDebugPerfMarkerProviderE
N11PerfMarkers31CGREMDYStringPerfMarkerProviderE
N11PerfMarkers33CARBDebugOutputPerfMarkerProviderE
N24MDiskDataForResourceType45CValueSearchTester_ClassIntrospectionHandle_tE
N94.u
N9<+u
NHI;NP
NSt3__110__back_refIcEE
NSt3__110__l_anchorIcEE
NSt3__110__r_anchorIcEE
NSt3__111__alternateIcEE
NSt3__111__end_stateIcEE
NSt3__111__lookaheadIcNS_12regex_traitsIcEEEE
NSt3__111__match_anyIcEE
NSt3__112__match_charIcEE
NSt3__113__empty_stateIcEE
NSt3__114default_deleteINS_13__empty_stateIcEEEE
NSt3__115__has_one_stateIcEE
NSt3__115__word_boundaryIcNS_12regex_traitsIcEEEE
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__116__back_ref_icaseIcNS_12regex_traitsIcEEEE
NSt3__116__owns_one_stateIcEE
NSt3__117__owns_two_statesIcEE
NSt3__117__repeat_one_loopIcEE
NSt3__117bad_function_callE
NSt3__118__back_ref_collateIcNS_12regex_traitsIcEEEE
NSt3__118__match_char_icaseIcNS_12regex_traitsIcEEEE
NSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__120__bracket_expressionIcNS_12regex_traitsIcEEEE
NSt3__120__match_char_collateIcNS_12regex_traitsIcEEEE
NSt3__120__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__121__empty_non_own_stateIcEE
NSt3__123__match_any_but_newlineIcEE
NSt3__126__end_marked_subexpressionIcEE
NSt3__128__begin_marked_subexpressionIcEE
NSt3__16__loopIcEE
NSt3__16__nodeIcEE
NTROL
NULL row buffer
NVGeForce2MX
NVGeForce3
NVGeForce8xxx
NVGeForceFX
NV_DST16
NV_DST24
NV_INTZ
NV_NULL
NV_RAWZ
NetworkClientService_001
NetworkMessagesVersion001
NetworkP2PService_001
NetworkServerService_001
NetworkService_001
NetworkSystemUtilsVersion001
NetworkSystemVersion001
No image in file
No memory for pCAL params
No memory for pCAL purpose
No memory for sPLT palettes
No memory to process iTXt chunk
No memory to process text chunk
No space in chunk cache for iTXt
No space in chunk cache for sPLT
No space in chunk cache for tEXt
No space in chunk cache for unknown chunk
No space in chunk cache for zTXt
Not a JPEG file: starts with 0x%02x 0x%02x
Not a PNG file
Not enough image data
Not enough memory to decompress chunk
Not enough memory to process iTXt chunk
Not enough memory to process text chunk
Not enough memory to process zTXt chunk
Not implemented yet
O u!H
O!u!H
O"u!H
O$u!H
O%u!H
O'u!H
O,u!H
O0H;O8
O0I;O8s=1
O0I;O8s@1
O8;N8|
O9$0u
OSX: Current system display mode %d is %d x %d
OSX: Fetching true current display mode for display %d
OSX: Matched current display mode %d
OSX: Requested mode %d x %d, efs %d
OTHER
OXI;O`
Obtained EMS handle %u
Obtained XMS handle %u
Offffff.
OnGenerateMipMaps on non-existing texture.
OpenGL
OpenGL %s (%08x)
Opened temporary file %s
Ordered constructor wrapped type has no default constructor.
Ordered object did not begin in a zeroed state
Ordered object's memory was modified prior to construction
Out of Memory
Out of memory processing zTXt chunk
Out of memory while processing sCAL chunk
Out of memory while processing sPLT chunk
Out of memory while processing unknown chunk
Out of place IHDR
Out of place cHRM chunk
Out of place gAMA chunk
Out of place iCCP chunk
Out of place sBIT chunk
Out of place sRGB chunk
Out of place tIME chunk
Out of range gamma value ignored
Output file write error --- out of disk space?
Overflow of the sheet cache texture. Releasing and starting over. This is ok in asset browser, not so ok if the game is triggering this!
Overflow of the sheet cache texture: Try increasing SHEETCACHE_TEXTURE_HEIGHT (current value %d)!
P L;e
P10GLMContext
P8H=vtexu
P@IcL$
P@P@00
P@P@`` 0
PERF WARNING: Texture pool size set to more than 80%% of total GPU memory.
PERFORMANCE
PHL;}
PNG file corrupted by ASCII conversion
PNG load error %s
PNG unsigned integer out of range
PORTABILITY
POSIX
P[A\A^A_]
P[A^]
PanoramaTextServices001
PanoramaUIClient001
PanoramaUIEngine001
ParticleSystemMgr002
PhL;u
Physics2 Interface Old v0.5
PhysicsBuilderMgr001
Pipeline stats initialized
Pipeline stats shutdown
PixRGBAF FloatBitMap_t::PixelRGBAF(int, int, int) const
PostProcessingSystem_001
Potential overflow in png_zalloc()
Potentially fatal error: unsupported vertex format COLOR_FORMAT_xxxx (%d)
Premature end of JPEG file
Premature end of input file
Prevent state leakage: Do not modify rendercontext's attributes when doing local rendering.
Profile size field missing from iCCP chunk
PropertyEditorSystem_001
Quantization table 0x%02x was not defined
Quantizing to %d = %d*%d*%d colors
Quantizing to %d colors
QueuedLoaderVersion001
R16F_EXPAND
RATBTATAp
RBRAp
RBRBRBRBRAp
RBRBRBRBRB\0
RBRBUARBRBRBUAUAUARBUARBUARBUARBUARBUARBUARBUARBUARBUARBUARBUARBUARBUARBSAp
RBRBXARATAp
RBRB]ARA
RBSAXAp
RBUARBUARBUARBVBp
RBUK`
RBWAp
RDHIu
RENDERDOC_GetAPI
RENDER_BUFFER_APPEND_CONSUME_BUFFER
RENDER_BUFFER_BYTEADDRESS_BUFFER
RENDER_BUFFER_STRUCTURED_BUFFER
RENDER_BUFFER_UAV_COUNTER
RENDER_BUFFER_USAGE_INDEX_BUFFER
RENDER_BUFFER_USAGE_SHADER_RESOURCE
RENDER_BUFFER_USAGE_UNORDERED_ACCESS
RENDER_BUFFER_USAGE_VERTEX_BUFFER
RENDER_MULTISAMPLE_16X
RENDER_MULTISAMPLE_2X
RENDER_MULTISAMPLE_4X
RENDER_MULTISAMPLE_6X
RENDER_MULTISAMPLE_8X
RENDER_MULTISAMPLE_INVALID
RENDER_MULTISAMPLE_NONE
RENDER_MULTISAMPLE_TYPE_COUNT
RENDER_PRIM_10_CONTROL_POINT_PATCHLIST
RENDER_PRIM_11_CONTROL_POINT_PATCHLIST
RENDER_PRIM_12_CONTROL_POINT_PATCHLIST
RENDER_PRIM_13_CONTROL_POINT_PATCHLIST
RENDER_PRIM_14_CONTROL_POINT_PATCHLIST
RENDER_PRIM_15_CONTROL_POINT_PATCHLIST
RENDER_PRIM_16_CONTROL_POINT_PATCHLIST
RENDER_PRIM_17_CONTROL_POINT_PATCHLIST
RENDER_PRIM_18_CONTROL_POINT_PATCHLIST
RENDER_PRIM_19_CONTROL_POINT_PATCHLIST
RENDER_PRIM_1_CONTROL_POINT_PATCHLIST
RENDER_PRIM_20_CONTROL_POINT_PATCHLIST
RENDER_PRIM_21_CONTROL_POINT_PATCHLIST
RENDER_PRIM_22_CONTROL_POINT_PATCHLIST
RENDER_PRIM_23_CONTROL_POINT_PATCHLIST
RENDER_PRIM_24_CONTROL_POINT_PATCHLIST
RENDER_PRIM_25_CONTROL_POINT_PATCHLIST
RENDER_PRIM_26_CONTROL_POINT_PATCHLIST
RENDER_PRIM_27_CONTROL_POINT_PATCHLIST
RENDER_PRIM_28_CONTROL_POINT_PATCHLIST
RENDER_PRIM_29_CONTROL_POINT_PATCHLIST
RENDER_PRIM_2_CONTROL_POINT_PATCHLIST
RENDER_PRIM_30_CONTROL_POINT_PATCHLIST
RENDER_PRIM_31_CONTROL_POINT_PATCHLIST
RENDER_PRIM_32_CONTROL_POINT_PATCHLIST
RENDER_PRIM_3_CONTROL_POINT_PATCHLIST
RENDER_PRIM_4_CONTROL_POINT_PATCHLIST
RENDER_PRIM_5_CONTROL_POINT_PATCHLIST
RENDER_PRIM_6_CONTROL_POINT_PATCHLIST
RENDER_PRIM_7_CONTROL_POINT_PATCHLIST
RENDER_PRIM_8_CONTROL_POINT_PATCHLIST
RENDER_PRIM_9_CONTROL_POINT_PATCHLIST
RENDER_PRIM_COMPUTE_SHADER
RENDER_PRIM_HETEROGENOUS
RENDER_PRIM_INSTANCED_QUADS
RENDER_PRIM_LINES
RENDER_PRIM_LINES_WITH_ADJACENCY
RENDER_PRIM_LINE_STRIP
RENDER_PRIM_LINE_STRIP_WITH_ADJACENCY
RENDER_PRIM_POINTS
RENDER_PRIM_TRIANGLES
RENDER_PRIM_TRIANGLES_WITH_ADJACENCY
RENDER_PRIM_TRIANGLE_STRIP
RENDER_PRIM_TRIANGLE_STRIP_WITH_ADJACENCY
RENDER_PRIM_TYPE_COUNT
RENDER_SLOT_INVALID
RENDER_SLOT_PER_INSTANCE
RENDER_SLOT_PER_VERTEX
RESOURCE_TYPE_TEXTURE
RG1616
RG1616F
RG1616F_EXPAND
RG3232F
RGB323232F
RGB565
RGB888
RGB888_BLUESCREEN
RGBA1010102
RGBA1010102F_EDRAM
RGBA16161616
RGBA16161616F
RGBA16161616F_EDRAM_RGBA1010102F
RGBA16161616F_EXPAND
RGBA16161616F_EXPAND_EDRAM_RGBA1010102F
RGBA16161616_EDRAM
RGBA16161616_EDRAM_RGBA16161616
RGBA32323232F
RGBA8888
RGBA8888_LINEAR
RGBX555
RGBX8888
RST%d
Read Error
Read failed on temporary file
Read from EMS failed
Read from XMS failed
Read palette index exceeding num_palette
RecursiveLoadFromBuffer:  got EOF instead of keyname
RecursiveLoadFromBuffer:  got NULL key
RecursiveLoadFromBuffer:  got conditional between key and value
RecursiveLoadFromBuffer:  got empty keyname
RecursiveLoadFromBuffer:  got } in key
RecursiveLoadFromBuffer:  recursion overflow
RegisterConfigValue: Unknown error constructing config value "%s"!
Release
Render to cubemap array not yet supported.  If we hit this, implement it.
RenderBufferFlags_t
RenderDevice003
RenderDeviceMgr001
RenderDoc was detected.
RenderHardwareConfig002
RenderInputLayoutField_t
RenderInputLayout_t CInputLayoutDict<CInputLayoutGL>::CreateInputLayout(const char *, int, const RenderInputLayoutField_t *) [T = CInputLayoutGL]
RenderMultisampleType_t
RenderPrimitiveType_t
RenderService_001
RenderSlotType_t
RenderSystem
RenderSystem/AllowSampleableDepthInVr
RenderSystem/AlwaysPreloadTexturesInGame
RenderSystemSurface001
RenderUtils_001
Requested feature was omitted at compile time
Required OpenGL extension "%s" is not supported. Please update your OpenGL driver.
Resource %s
ResourceCompilerSystem001
ResourceHandleUtils001
ResourceManifestRegistry001
ResourceSystem013
ResourceType_t GetResourceTypeOfWeakHandle(const CSchemaType *)
Rfffff.
Row has too many bytes to allocate in memory
S0;S4
S8;S<u}
SARASATAp
SARATAp
SARBSAXBRB`
SATAp
SATB\HRAZBp
SBRCUBSDTKTCp
SDL failed to set window gamma ramp: %s
SDL_VIDEO_WINDOW_SHARE_PIXEL_FORMAT
SDL_WasInit( SDL_INIT_VIDEO )
SDL_Window *COpenGLDriverEntryPoints::GetCurrentWindow()
SDL_Window *CRenderDeviceGL::SDLWindowFromOsSpecificWindowHandle(OsSpecificWindowHandle_t)
SERBRBRAp
SHADERAPI CAPS:
SHADER_COMPILER
SNSt3__11
SSE and SSE2 are required.
Sampler object hash is full, increase cSamplerObjectHashSize
Sampling factors too large for interleaved scan
Saved video settings config to '%s'
ScaleformUI001
Scan script does not transmit all data
SceneSystem_002
SceneUtils_001
Schema Field
SchemaSystem_001
SchemaTestExternal_One_001
SchemaTestExternal_Two_001
Screen Gamma (only in fullscreen modes)
Seek failed on temporary file
Selected %d colors for quantization
SequenceFloatParam_t
ServerUploadGameStats001
SetHardwareGammaRamp( %f )
Sffff.
Shader API Driver Info:
Shader Compile Time: %llu ms (Count: %d) 
Shader file version mismatch.  Expected (%d), Got (%d).
SheetFrameImage_t
SheetSequenceFrame_t
SheetSequence_t
Sheet_t
Size of Texture Memory : %llu kb
Smoothing not supported with nonstandard sampling ratios
SoundOpSystem001
SoundOpSystemEdit001
SoundService_001
SoundSystem001
Source2Client002
Source2ClientPrediction001
Source2ClientUI001
Source2EngineToClient001
Source2EngineToClientStringTable001
Source2EngineToServer001
Source2EngineToServerStringTable001
Source2GameClients001
Source2GameEntities001
Source2Host001
Source2Server001
Source2ServerSerializers002
Start Of Frame 0x%02x: width=%u, height=%u, components=%d
Start Of Scan: %d components
Start of Image
StatsService_001
SteamAudio001
Subregion IB lock/unlocks only currently supported for semistatic buffers
Subregion IB unlock without ever locking
Subregion VB lock/unlocks only currently supported for semistatic buffers
Subregion VB unlock without ever locking
Suspension not allowed here
SwapChainTexture
T &CUtlFixedMemory<UtlLinkedListElem_t<BlendStateGL_t, long long> >::operator[](intp) [T = UtlLinkedListElem_t<BlendStateGL_t, long long>]
T &CUtlFixedMemory<UtlLinkedListElem_t<COcclusionQueryMgr::OcclusionQueryObject_t, long long> >::operator[](intp) [T = UtlLinkedListElem_t<COcclusionQueryMgr::OcclusionQueryObject_t, long long>]
T &CUtlFixedMemory<UtlLinkedListElem_t<CSwapChainBase *, long long> >::operator[](intp) [T = UtlLinkedListElem_t<CSwapChainBase *, long long>]
T &CUtlFixedMemory<UtlLinkedListElem_t<DepthStencilStateGL_t, long long> >::operator[](intp) [T = UtlLinkedListElem_t<DepthStencilStateGL_t, long long>]
T &CUtlFixedMemory<UtlLinkedListElem_t<RasterizerStateGL_t, long long> >::operator[](intp) [T = UtlLinkedListElem_t<RasterizerStateGL_t, long long>]
T &CUtlStringMap<CInputLayoutGL *, CUtlSymbolTable>::operator[](UtlSymId_t) [T = CInputLayoutGL *, SymbolTableType_t = CUtlSymbolTable]
T$$;Q$u(A
T$,;P,u
T$0;P0t`
TADIt
TADIu
TADIu'A
TADIu*E
TATA^ATAp
TATAp
TATBRATAp
TAWATAp
TBRARAp
TBRATAp
TBRAXATBSATAp
TBRAp
TBRBRBSATBYATAp
TBRBUATAp
TBRB`GATAp
TBSATAp
TBSATB`
TBSA`
TBSAp
TBSBp
TBTARAUCTAY0
TBTAp
TBTBRBTBRBTBRBTBRBTBRBRBRB`%ATATAp
TBTBRB`
TBUATAp
TBVATARBp
TBVATAp
TBWATBSATAp
TBYATAp
TB]Ap
TB`zARAp
TCRAp
TCRBRBRBRBRB\Hp
TCRBRBSAp
TCRBTBp
TCSARBRBVATC`$ASATAp
TCSATAp
TCSAp
TCSBWKp
TCSDRATHXBRB`
TCTATAp
TCTBRBRBSATAp
TCUATAp
TCVATARAp
TCVATAp
TCVAp
TCWARAp
TCWATAp
TC[ATBp
TC`$ASATAp
TCp(p
TDRAp
TD[ATBRBp
TERMVALUE
TEX read request: %d KB; %s
TEX: %u textures, %.2f MB
TEXMAN: %s MarkTextureBitsLoadRequired (%s)
TEXMAN: %s MarkTextureBitsLoaded (%s)
TEXMAN: Deleting %d textures
TEXMAN: Outstanding stream count %d -> %d (%s)
TEXTURESTREAMING: Extremely low memory: Available mem: %.2f MB, Required: %.2f MB. Kicking out all non-pinned textures.
TEXTURESTREAMING: Filled %d fallback textures in %.3f ms
TEXTURESTREAMING: IN: %4d m %4d tex, %-4.2f MB;	 OUT %4d m %4d tex, %-4.2f MB, %d dealloced, %.2f ms
THIRD_PARTY
TIBstc
TIBstl
TKRAp
TLPsu
TOTAL: %.2f MB
TSPEC_CUBE_TEXTURE
TSPEC_FLAGS
TSPEC_INPUT_ATTACHMENT
TSPEC_LINEAR_ADDRESSING_360
TSPEC_LINE_TEXTURE_360
TSPEC_NO_LOD
TSPEC_RENDER_TARGET
TSPEC_RENDER_TARGET_SAMPLEABLE
TSPEC_SHARED_RESOURCE
TSPEC_SUGGEST_CLAMPS
TSPEC_SUGGEST_CLAMPT
TSPEC_SUGGEST_CLAMPU
TSPEC_TEXTURE_ARRAY
TSPEC_TEXTURE_GEN_MIP_MAPS
TSPEC_UAV
TSPEC_UNFILTERABLE_OK
TSPEC_USE_TYPED_IMAGEFORMAT
TSPEC_VERTEX_TEXTURE
TSPEC_VOLUME_TEXTURE
TUUUUUU
TestScriptMgr001
TextLayout_001
TextMessageMgr_001
Texture manager out of space! Can't allocate new texture!
Texture memory limit: %s; in use: %s in %s textures
TextureCreationExtraDataType_t VTEX_ExtraDataTypeToRuntime(VTEX_ExtraDataType_t)
TextureDesc_t
TextureHeader_t
TextureSpecificationFlags_t
Textures created overall: %s; textures evicted: %s
The value of field.m_nSlot (%d) exceeds the value of MAX_D3DVERTEXELEMENTS (%d)!
ThreadInMainThread()
Timed out waiting for thread to exit? hung?
Too many IDATs found
Too many color components: %d, max %d
Too many threads (%d) accessing the render device, need to increase -r_max_device_threads (%d)
ToolFramework2_002
ToolGameSimulationDispatcher_001
ToolGameSimulationSystem_001
ToolSceneNodeFactory_001
ToolScriptManager001
ToolService_001
Total size of the texture pool in MB
TrpLi
Truncated iTXt chunk
Truncated zTXt chunk
Truncating incorrect info tRNS chunk length
Truncating incorrect tRNS chunk length
Trying to cast '%s' to a different resource type!
Trying to create a render target with invalid image format %s
Trying to discard a command buffer which has a deferred resource creation. This command buffer cannot be discarded!
Trying to discard a command buffer which has a fence. This command buffer cannot be discarded!
Trying to discard a command buffer which is detroying resources. This command buffer cannot be discarded!
Trying to set dxlevel (%d) which is higher than the card can support (%d)!
Trying to set dxlevel (%d) which is lower than the card can support (%d)!
TwYH%
TypeManager
UARAp
UNDEFINED_BEHAVIOR
UNKNOWN
UNKNOWNTYPE
UPDATE_STRING_TOKEN_DATABASE
UTF8String
UUUUA9
UUUUUUU
UUUUUUUUUUUUUUUU0123456789ABCDEF
UVLX8888
UVWQ8888
Unable to append GL program binary to cache file "%s".  Clearing cache.
Unable to create dummy context for GLMDisplayDB.
Unable to create dummy window for GLMDisplayDB.
Unable to open GL shader cache TOC %s file - might not exist yet.
Unable to read file %s!
Unable to stream in resource file "%s" (Error: %s)
Unable to write GL shader cache %s file.
Unexpected marker 0x%02x
Unexpected resource version '%d' for '%s'
Unhandled field type for field '%s': '%s' (Why did it pass SchemaRecurseType?)
Unimplemented feature: Read texture data from smaller mip level
Unimplemented feature: Read texture data from texture array slice
Uninitialized row
Unknown APP0 marker (not JFIF), length %u
Unknown APP14 marker (not Adobe), length %u
Unknown Adobe color transform code %d
Unknown compression method in IHDR
Unknown compression type @1
Unknown compression type in zTXt chunk
Unknown filter method in IHDR
Unknown iTXt compression type or method
Unknown interlace method in IHDR
Unknown job state
Unknown sRGB intent
Unknown zlib error
UnknownModel
Unrecognized component IDs %d %d %d, assuming YCbCr
Unrecognized equation type for pCAL chunk
Unsatisfied dependency at present time = death!
Unsupported FBO attachment for Blit
Unsupported JPEG data precision %d
Unsupported JPEG process: SOF type 0x%02x
Unsupported PSD color mode!
Unsupported color conversion request
Unsupported compression type.
Unsupported format.
Unsupported marker type 0x%02x
Unsupported stage for sampler state.
Unsupported texture target for Blit.  Implement this.
Unsupported version or scanline.
Updating a non-context local index buffer in a discarded display list. Are you sure you want to do this?
Updating a non-context local vertex buffer in a discarded display list. Are you sure you want to do this?
Updating a texture in a discarded display list. Are you sure you want to do this?
Upper limit on texture pool size.
UserInfoChangeService_001
UtlHashFastHandle_t CUtlScalarHash<const void *, CDefaultHash32>::Insert(unsigned int, const Data &) [Data = const void *, CHashFunction = CDefaultHash32]
VATAp
VApplication001
VAvi001
VB "%s" : Attempted to create too big of a dynamic vertex buffer!
VB: %d buffers, %.2f MB
VBAllocTracker001
VBaseFileSystem011
VBik001
VConComm001
VDebugService_001
VDmeMakeFileUtils001
VEngineCvar007
VFileSystem017
VGUI_Input005
VGUI_Panel010
VGUI_Scheme010
VGUI_Surface032
VGUI_System010
VGUI_ivgui008
VMDLLIB001
VMaterialSystem2_001
VMediaFoundation001
VNewAsyncFileSystem001
VP4003
VPhysX Interface ResourceMgr v0.1
VPhysics2_Handle_Interface_001
VPhysics2_Interface_001
VProcessUtils002
VProfService_001
VR_001
VRenderDeviceMgrBackdoor001
VRenderDeviceSetupV001
VScript
VScriptDbg
VScriptManager010
VStringTokenSystem001
VTBladeXP2
VTEX_ExtraDataTypeToRuntime - Unsupported ImageFormat: %d
VTEX_FormatToRuntime - Invalid VTEX_Format_t: %d
VUUUH
VUUUL
V_stristr_fast(char const*, char const*)
Vector2D
Vector4D
VendorID
Video Card %s (%04x : %04x)
Virtual array controller messed up
VisBuilder_001
VoidFnPtrLookup_Tier0
VsInputSignatureElement_t
VsInputSignature_t
Vulkan
WARNING: Could not find schema data for helper class for resource type %lld '%s'. (Missing MDiskDataForResourceType metadata or schema data isn't loaded?)
WARNING: Exclusive fullscreen did not get requested resolution %d x %d (currently %d x %d), trying again
WARNING: Missing data block for file: %s
WARNING: Missing introspection manifest for file: %s
WARNING: Multiple classes registered as disk data for resource type %lld '%s'. (Should only have one class MDiskDataForResourceType - %d listed above.)
WARNING: Problems encounted with external references in resource '%s'. See above for reason(s)
WARNING: Trying to access schema binding '%s' before bindings were registered in this module!
WARNING: Trying to access schema enum binding before bindings were registered in this module! - %s()
WARNING: Trying to create a CRenderContextPtr without a valid context.
WATAp
WIN32
WINDOWS
WINDOW_SYSTEM
WINXP
Warning:  %s = '%s' is infinite, clamping value.
Warning: have %d in use and %d free per-frame memory stacks outstanding. The oldest stack was created at present %d, and we're now on present %d
Warning: have oustanding per-frame memory stack with %d allocations
Warning: thumbnail image size does not match data length %u
Warning: unknown JFIF revision number %d.%02d
Wffff.
Where does cubemap face come from?  Need to implement this.
Width
Width is too large for libpng to process pixels
WorkshopSetup001
WorldRendererBuilderMgr001
WorldRendererMgr001
Write failed on temporary file --- out of disk space?
Write to EMS failed
Write to XMS failed
Wrong JPEG library version: library is %d, caller expects %d
Wrong alignment %d
X A;]
X$A;X$
X360_DST16
X360_DST24
X360_DST24F
XBRB`
XXu*H
XXujH
X[A\A]A^A_]
X[A^A_]
Xbox 360
YA]A`
Yfffff.
Zero length tRNS chunk
ZeroStride Vertex buffer created!
Zffffff.
[%s %s %dx%dx%d mips=%d slices=%d flags=%02lX%s]
[A\A]A^A_]
[A\A]A^A_]A
[A\A^A_]
[A^A_]
[A^A_]A
[Disk class %d/%d] Name = '%s'; Project = '%s'; Binary = '%s'
[t,fD
\$0E1
\4`L9
\<`H9
\sPHi
^ [A^]
_A16B16G16R16
_A16B16G16R16F
_A8B8G8R8
_A8B8G8R8_SNORM
_A8B8G8R8_SRGB
_A8R8G8B8
_A8R8G8B8_SRGB
_AssertMsg_ConditionFailed
_BinaryProperties_GetValue
_CFDataGetBytePtr
_CFDataGetLength
_CFDictionaryGetValue
_CFNumberGetValue
_CFRelease
_CGDisplayCurrentMode
_CGDisplayIOServicePort
_CGDisplayIsActive
_CGDisplayIsMain
_CGDisplayMirrorsDisplay
_CGGetOnlineDisplayList
_CGLDescribeRenderer
_CGLDestroyRendererInfo
_CGLQueryRendererInfo
_CGOpenGLDisplayMaskToDisplayID
_CMemAllocSystemInitialize
_CommandLine
_CreateInterface
_CreateSimpleThread
_D24S8
_DXT1
_DXT1A
_DXT3
_DXT5
_DevMsg
_Gestalt
_GetCPUInformation
_GetResourceManifestCount
_GetResourceManifests
_HangWatchdogInternal_BeginScope
_HangWatchdogInternal_EndScope
_IOIteratorNext
_IOObjectRelease
_IORegistryEntryCreateCFProperty
_IORegistryEntryGetParentEntry
_IORegistryEntrySearchCFProperty
_IOServiceGetMatchingServices
_IOServiceMatching
_InstallSchemaBindings
_KeyValuesSystem
_LOG_GENERAL
_LoggingSystem_IsChannelEnabled
_LoggingSystem_Log
_LoggingSystem_RegisterLoggingChannel
_MemAlloc_AllocFunc
_MemAlloc_FreeFunc
_OBJC_CLASS_$_NSBundle
_OBJC_CLASS_$_NSString
_Plat_DebugPrint
_Plat_DebugString
_Plat_ExitProcess
_Plat_FloatTime
_Plat_GetCPUFrequency
_Plat_GetClockStart
_Plat_GetEnv
_Plat_GetOSType
_Plat_GetProcAddress
_Plat_GetThreadIndex
_Plat_GetWindowClientSize
_Plat_GlobalMemoryStatus
_Plat_IsHighDPI
_Plat_IsInDebugSessionRaw
_Plat_IsRunningOnCustomerMachine
_Plat_IsWindowMinimized
_Plat_LoadModuleRaw
_Plat_NeedsLowFragmentation
_Plat_OsSpecificHandleToPlatWindow
_Plat_ReconfigureWindow
_Plat_RelativeTicks
_Plat_SetWindowFullscreenState
_Plat_SetWindowSize
_Plat_ShouldCollectMiniDumpsForFatalErrors
_Plat_TicksAfterSecsF
_Plat_VirtualAlloc
_Plat_VirtualFree
_Plat_WindowToOsSpecificHandle
_R16F
_R32F
_RG16
_RG16F
_RG32F
_RGB32F
_RGBA1010102
_RGBA32F
_RGTC1
_RGTC2
_RandomInt
_ReleaseThreadHandle
_SDL_CreateWindow
_SDL_CreateWindowFrom
_SDL_DestroyWindow
_SDL_GL_CreateContext
_SDL_GL_DeleteContext
_SDL_GL_GetProcAddress
_SDL_GL_MakeCurrent
_SDL_GL_SetAttribute
_SDL_GL_SetSwapInterval
_SDL_GL_SwapWindow
_SDL_GL_UnloadLibrary
_SDL_GetCurrentDisplayMode
_SDL_GetDisplayBounds
_SDL_GetDisplayMode
_SDL_GetError
_SDL_GetNumDisplayModes
_SDL_GetNumVideoDisplays
_SDL_GetWindowSize
_SDL_SetHint
_SDL_SetWindowGammaRamp
_SDL_WasInit
_SeriousWarning
_ThreadGetCurrentId
_ThreadInMainThread
_ThreadInterlockedExchange64
_ThreadJoin
_ThreadYield
_V8U8
_V_CopyMemory3D
_V_FixSlashes
_V_GetErrno
_V_GetFileExtension
_V_IsAbsolutePath
_V_SetErrno
_V_StripTrailingSlash
_V_UTF16ToUTF8
_V_UTF32ToUTF8
_V_atof
_V_atoi
_V_fclose
_V_fopen
_V_fprintf
_V_logf
_V_powf
_V_pretifynum
_V_qsort
_V_qsort_s
_V_snprintf
_V_sscanf
_V_stricmp_fast
_V_strlower_fast
_V_strtod
_V_strtoi64
_V_strtoui64
_V_swscanf
_V_vscprintf
_V_vsnprintf
_V_vsnprintfRet
_V_vsnprintfSize
_V_wcstod
_V_wcstoi64
_VoidFnPtrLookup_Tier0
_Warning
_X8R8G8B8
_X8R8G8B8_SRGB
__DATA
__LINKEDIT
__TEXT
__Unwind_Resume
__V_FixupPathName
__V_SetExtension
__V_strncat
__V_strncpy
__V_strnicmp_fast
___CFConstantStringClassReference
___bzero
___cxa_allocate_exception
___cxa_atexit
___cxa_begin_catch
___cxa_call_unexpected
___cxa_end_catch
___cxa_free_exception
___cxa_guard_abort
___cxa_guard_acquire
___cxa_guard_release
___cxa_pure_virtual
___cxa_rethrow
___cxa_throw
___gxx_personality_v0
___memcpy_chk
___sprintf_chk
___stack_chk_fail
___stack_chk_guard
___stderrp
___tolower
__bss
__cfstring
__common
__const
__cstring
__data
__gcc_except_tab__TEXT
__got
__la_symbol_ptr
__mod_init_func
__nl_symbol_ptr
__objc_classrefs__DATA
__objc_imageinfo__DATA
__objc_methname
__objc_selrefs
__stub_helper
__stubs
__text
__unwind_info
_abort
_atoi
_ceilf
_dlclose
_dlsym
_exit
_ffffff.
_floor
_floorf
_fprintf
_fputc
_fread
_free
_g_Tier1_CRC32Table
_g_VProfCurrentProfile
_g_pMemAlloc
_g_pThreadPool
_getenv
_glGetString
_kCFAllocatorDefault
_kIOMasterPortDefault
_logf
_longjmp
_malloc
_memchr
_memcmp
_memcpy
_memmove
_memset
_memset_pattern16
_objc_msgSend
_printf
_pthread_mutex_destroy
_pthread_mutex_init
_pthread_mutex_lock
_pthread_mutex_unlock
_pthread_mutexattr_init
_pthread_mutexattr_settype
_putchar
_raise
_setjmp
_sscanf
_strchr
_strcmp
_strcpy
_strdup
_strlen
_strncpy
_strnlen
_strpbrk
_strstr
_tools.txt
_wcslen
` 0` 
` Pp0
`A;_8|
`D;s8|
`E;g8
`E;~8
`[A\A^A_]
`[A^]
````P`
`fff.
`h[A\A^A_]
aIcO H
actualMode.HasUsageType()
actualSpec.GetArrayCount() >= 6
affff.
alpha
apple
auto CKeyValues_Data::Internal_SetSubKey(KeyValues *)::(anonymous class)::operator()() const
auto COrderedConstructor_Create<COrderedInitShutdownRefWrapper<&EarlyInit_Common>, CResolveOrderedFunc<COrderedInitShutdownRefWrapper<&EarlyInit_Common>, &_ORDERED_INIT_SHUTDOWN_WRAPPER_RESOLVEFUNC>, false>::AddRef(bool)::(anonymous class)::operator()() const [T = COrderedInitShutdownRefWrapper<&EarlyInit_Common>, RESOLVECLASS = CResolveOrderedFunc<COrderedInitShutdownRefWrapper<&EarlyInit_Common>, &_ORDERED_INIT_SHUTDOWN_WRAPPER_RESOLVEFUNC>, bCONSTRUCT_ON_FIRST_USE = false]
auto COrderedConstructor_DependencyManagement<COrderedInitShutdownRefWrapper<&EarlyInit_Common> >::InternalConstruct(COrderedConstructor_DependencyManagement<void> *&&)::(anonymous class)::operator()() const [T = COrderedInitShutdownRefWrapper<&EarlyInit_Common>]
auto CRenderDeviceBase::OnPresentCompleted(SwapChainHandle_t, int, CDeviceFence *)::(anonymous class)::operator()() const
auto CUtlMemoryPoolBase::Free(void *)::(anonymous class)::operator()() const
bad adaptive filter value
binding
binormal
blendindices
blendweight
blocking issue in occlusion queries!!
bm.GetImageFormat() == IMAGE_FORMAT_RGBA8888
bool Bitmap_t::IsValid() const
bool CGLMProgramSeparable::ValidateShader(bool)
bool CGLMQuery::Begin()
bool CGLMQuery::IsDone()
bool CGLMShaderCache::LoadShaderCache()
bool CGLMShaderPipeline::UseProgram(RenderShaderType_t, CGLMProgramSeparable *, bool *)
bool CIndexBufferGL::Lock(uint, LockDesc_t *)
bool CIndexBufferGL::LockRegion(int32, int32, LockDesc_t *)
bool CMemoryStack::Init(const char *, unsigned int, unsigned int, unsigned int, unsigned int)
bool COcclusionQueryMgr::BeginOcclusionQueryDrawing(OcclusionQueryObjectHandle_t, IRenderContext *)
bool CRenderContextGL::SetTextureDataFromResource(CGLMTex *, const TextureSpecification_t *, const CTextureDesc *, const void *, int, TextureBitsMemoryType_t, bool)
bool CRenderContextGL::SetupForDrawIndexed(RenderPrimitiveType_t &, int, int *, int *)
bool CRenderDeviceGL::CreateGLContext(PlatWindow_t, int, const RenderDeviceInfo_t &)
bool CRenderPipelineStatsGL::GetFrameStats(CRenderPipelineFrameStats &)
bool CSwapChainGL::ReacquireResources()
bool CUtlBuffer::Get(void *, int)
bool CUtlFixedMemory<UtlLinkedListElem_t<BlendStateGL_t, long long> >::IsIdxAfter(intp, const CUtlFixedMemory::Iterator_t &) const [T = UtlLinkedListElem_t<BlendStateGL_t, long long>]
bool CUtlFixedMemory<UtlLinkedListElem_t<COcclusionQueryMgr::OcclusionQueryObject_t, long long> >::IsIdxAfter(intp, const CUtlFixedMemory::Iterator_t &) const [T = UtlLinkedListElem_t<COcclusionQueryMgr::OcclusionQueryObject_t, long long>]
bool CUtlFixedMemory<UtlLinkedListElem_t<CSwapChainBase *, long long> >::IsIdxAfter(intp, const CUtlFixedMemory::Iterator_t &) const [T = UtlLinkedListElem_t<CSwapChainBase *, long long>]
bool CUtlFixedMemory<UtlLinkedListElem_t<DepthStencilStateGL_t, long long> >::IsIdxAfter(intp, const CUtlFixedMemory::Iterator_t &) const [T = UtlLinkedListElem_t<DepthStencilStateGL_t, long long>]
bool CUtlFixedMemory<UtlLinkedListElem_t<RasterizerStateGL_t, long long> >::IsIdxAfter(intp, const CUtlFixedMemory::Iterator_t &) const [T = UtlLinkedListElem_t<RasterizerStateGL_t, long long>]
bool CUtlStreamBuffer::StreamGetOverflow(int)
bool CUtlStreamBuffer::StreamPutOverflow(int)
bool CVertexBufferGL::Lock(uint, LockDesc_t *)
bool CVertexBufferGL::LockRegion(int32, int32, LockDesc_t *)
bool GLMContext::Reset(GLMDisplayParams *)
bool ImageLoader::ConvertImageFormat(const uint8 *, ImageFormat, uint8 *, ImageFormat, int, int, int, int)
bool ImageLoader::ConvertToATIxN(const uint8 *, ImageFormat, uint8 *, ImageFormat, int, int, int, int, bool)
bool ImageLoader::ConvertToDXT(const uint8 *, ImageFormat, uint8 *, ImageFormat, int, int, int, int)
bool InitializeDisplayDB(const CUtlVector<GLContextVersion_t> &)
bool InstallSchemaBindings(const char *, ISchemaSystem *)
bool KeyValues::LoadFromBuffer(const char *, CUtlBuffer &, IBaseFileSystem *, const char *, GetSymbolProc_t, IKeyValuesErrorSpew *)
bool KeyValues::LoadFromFile(IBaseFileSystem *, const char *, const char *, GetSymbolProc_t)
bool PFMGetInfo_AndAdvanceToTextureBits(CUtlBuffer &, int &, int &, ImageFormat &)
bool PFMReadFile(CUtlBuffer &, Bitmap_t *, bool)
bool PSDReadFileRGBA8888(CUtlBuffer &, Bitmap_t &, bool)
bool VTEX_InitCreationDescFromHeader(CTextureCreationDesc *, const VTEX_Header_t *)
buf.IsValid()
buffer
bundleWithPath:
c(ffff.
cfg/moddefaults.txt
cfg/video.txt
cfg/video_%02d.txt
cfg/videodefaults.txt
channels
char *CUtlStringBuilder::InternalPrepareBuffer(size_t, bool, size_t)
char *CUtlStringBuilder::PrepareBuffer(size_t, bool, size_t)
clearInfo.m_nNumColors || ( ( clearInfo.m_nFlags & RENDER_CLEAR_FLAGS_CLEAR_COLOR ) == 0 )
cmd.m_nCmdSizeInBytes >= sizeof(T)
cmd.m_pDomainShader->m_pBits
cmd.m_pGLContext != NULL
cmd.m_pGeometryShader->m_pBits
cmd.m_pHullShader->m_pBits
cmd.m_pPixelShader->m_pBits
cmd.m_pTex != NULL
cmd.m_pVertexShader->m_pBits
color
compression
const CGLMProgramSeparable *CGLMShaderPipeline::GetShader(RenderShaderType_t) const
const GLMTexFormatDesc *GetFormatDesc(ImageFormat)
const HardwareCaps_t &CRenderDeviceMgrBase::GetHardwareCaps(int) const
const ImageFormatInfo_t &ImageLoader::ImageFormatInfo(ImageFormat)
const ResourceBlockEntry_t *Resource_GetBlockEntry(const ResourceFileHeader_t *, ResourceBlockId_t)
const SemanticNameMap_t &SemanticNameToUsage(const char *)
const T &CUtlStringMap<CInputLayoutGL *, CUtlSymbolTable>::operator[](UtlSymId_t) const [T = CInputLayoutGL *, SymbolTableType_t = CUtlSymbolTable]
const T &LoadCmd(const uint8 *&) [T = CommandBeginPixEventGL_t]
const T &LoadCmd(const uint8 *&) [T = CommandBeginQueryGL_t]
const T &LoadCmd(const uint8 *&) [T = CommandBindDomainShaderConstantBuffer_t]
const T &LoadCmd(const uint8 *&) [T = CommandBindDomainShader_t]
const T &LoadCmd(const uint8 *&) [T = CommandBindGeometryShaderConstantBuffer_t]
const T &LoadCmd(const uint8 *&) [T = CommandBindGeometryShader_t]
const T &LoadCmd(const uint8 *&) [T = CommandBindHullShaderConstantBuffer_t]
const T &LoadCmd(const uint8 *&) [T = CommandBindHullShader_t]
const T &LoadCmd(const uint8 *&) [T = CommandBindIndexBuffer_t]
const T &LoadCmd(const uint8 *&) [T = CommandBindPixelShaderConstantBuffer_t]
const T &LoadCmd(const uint8 *&) [T = CommandBindPixelShader_t]
const T &LoadCmd(const uint8 *&) [T = CommandBindTextureDS_t]
const T &LoadCmd(const uint8 *&) [T = CommandBindTextureGS_t]
const T &LoadCmd(const uint8 *&) [T = CommandBindTextureHS_t]
const T &LoadCmd(const uint8 *&) [T = CommandBindTexturePS_t]
const T &LoadCmd(const uint8 *&) [T = CommandBindTextureVS_t]
const T &LoadCmd(const uint8 *&) [T = CommandBindVertexBuffer_t]
const T &LoadCmd(const uint8 *&) [T = CommandBindVertexShaderConstantBuffer_t]
const T &LoadCmd(const uint8 *&) [T = CommandBindVertexShader_t]
const T &LoadCmd(const uint8 *&) [T = CommandBlockForQueryGL_t]
const T &LoadCmd(const uint8 *&) [T = CommandClearGL_t]
const T &LoadCmd(const uint8 *&) [T = CommandCopyTextureData_t]
const T &LoadCmd(const uint8 *&) [T = CommandCreateContext_t]
const T &LoadCmd(const uint8 *&) [T = CommandCreateDomainShader_t]
const T &LoadCmd(const uint8 *&) [T = CommandCreateGeometryShader_t]
const T &LoadCmd(const uint8 *&) [T = CommandCreateHullShader_t]
const T &LoadCmd(const uint8 *&) [T = CommandCreatePixelShader_t]
const T &LoadCmd(const uint8 *&) [T = CommandCreateVertexShader_t]
const T &LoadCmd(const uint8 *&) [T = CommandDeleteResource_t]
const T &LoadCmd(const uint8 *&) [T = CommandDestroyContext_t]
const T &LoadCmd(const uint8 *&) [T = CommandDestroyDomainShader_t]
const T &LoadCmd(const uint8 *&) [T = CommandDestroyGeometryShader_t]
const T &LoadCmd(const uint8 *&) [T = CommandDestroyHullShader_t]
const T &LoadCmd(const uint8 *&) [T = CommandDestroyPixelShader_t]
const T &LoadCmd(const uint8 *&) [T = CommandDestroyQueryGL_t]
const T &LoadCmd(const uint8 *&) [T = CommandDestroyVertexShader_t]
const T &LoadCmd(const uint8 *&) [T = CommandDeviceLost_t]
const T &LoadCmd(const uint8 *&) [T = CommandDeviceRestored_t]
const T &LoadCmd(const uint8 *&) [T = CommandDeviceThreadCallback_t]
const T &LoadCmd(const uint8 *&) [T = CommandDrawIndexed_t]
const T &LoadCmd(const uint8 *&) [T = CommandDraw_t]
const T &LoadCmd(const uint8 *&) [T = CommandDynamicCBUpdate_t]
const T &LoadCmd(const uint8 *&) [T = CommandEndPixEventGL_t]
const T &LoadCmd(const uint8 *&) [T = CommandEndQueryGL_t]
const T &LoadCmd(const uint8 *&) [T = CommandFence_t]
const T &LoadCmd(const uint8 *&) [T = CommandFinishDeferredResourceCreation_t]
const T &LoadCmd(const uint8 *&) [T = CommandGenerateMipMaps_t]
const T &LoadCmd(const uint8 *&) [T = CommandJump_t]
const T &LoadCmd(const uint8 *&) [T = CommandPixMarkerGL_t]
const T &LoadCmd(const uint8 *&) [T = CommandPresentGL_t]
const T &LoadCmd(const uint8 *&) [T = CommandReadTexturePixels_t]
const T &LoadCmd(const uint8 *&) [T = CommandReleaseConstantBuffer_t]
const T &LoadCmd(const uint8 *&) [T = CommandReleaseFallbackTexture_t]
const T &LoadCmd(const uint8 *&) [T = CommandReleaseIndexBuffer_t]
const T &LoadCmd(const uint8 *&) [T = CommandReleaseVertexBuffer_t]
const T &LoadCmd(const uint8 *&) [T = CommandReleasedVertexDeclaration_t]
const T &LoadCmd(const uint8 *&) [T = CommandResolveRenderTarget_t]
const T &LoadCmd(const uint8 *&) [T = CommandReturn_t]
const T &LoadCmd(const uint8 *&) [T = CommandServiceFallbackTextureQueueGL_t]
const T &LoadCmd(const uint8 *&) [T = CommandSetBlendState_t]
const T &LoadCmd(const uint8 *&) [T = CommandSetDepthStencilState_t]
const T &LoadCmd(const uint8 *&) [T = CommandSetPresentParameters_t]
const T &LoadCmd(const uint8 *&) [T = CommandSetRasterizerState_t]
const T &LoadCmd(const uint8 *&) [T = CommandSetRenderTarget_t]
const T &LoadCmd(const uint8 *&) [T = CommandSetSamplerStateDS_t]
const T &LoadCmd(const uint8 *&) [T = CommandSetSamplerStateGS_t]
const T &LoadCmd(const uint8 *&) [T = CommandSetSamplerStateHS_t]
const T &LoadCmd(const uint8 *&) [T = CommandSetSamplerStatePS_t]
const T &LoadCmd(const uint8 *&) [T = CommandSetSamplerStateVS_t]
const T &LoadCmd(const uint8 *&) [T = CommandSetScissorRect_t]
const T &LoadCmd(const uint8 *&) [T = CommandSetSteamVrCompositorTextureGL_t]
const T &LoadCmd(const uint8 *&) [T = CommandSetTexturePixelsFromResource_t]
const T &LoadCmd(const uint8 *&) [T = CommandSetTexturePixels_t]
const T &LoadCmd(const uint8 *&) [T = CommandSetThreadOwnership_t]
const T &LoadCmd(const uint8 *&) [T = CommandSetViewport_t]
const T &LoadCmd(const uint8 *&) [T = CommandUpdateIndexBuffer_t]
const T &LoadCmd(const uint8 *&) [T = CommandUpdateSubresource_t]
const T &LoadCmd(const uint8 *&) [T = CommandUpdateVertexBuffer_t]
const T &LoadCmd(const uint8 *&) [T = CommandWriteCBMemory_t]
const T &LoadCmd(const uint8 *&) [T = CommandWriteMemory_t]
const char *CFmtStrN<1024, true>::Format(const char *, ...) [SIZE_BUF = 1024, QUIET_TRUNCATION = true]
const char *CKeyValues_Data::Internal_GetString(const char *, char *, size_t)
const char *KeyValues::GetName() const
const void *CUtlBuffer::PeekGet(int, int)
const void *Resource_GetBlock(const ResourceFileHeader_t *, ResourceBlockId_t)
count >= 0
curFrame.m_pSamples->Count() == curFrame.m_pQueries->Count()
dat->m_pPeer == NULL
dataWindow
desc.m_nElementSizeInBytes > 0
device id: 0x%x
device-id
displayFormat != IMAGE_FORMAT_UNKNOWN && renderTargetFormat != IMAGE_FORMAT_UNKNOWN
displayWindow
dstStride == 0
dxsupport
dxsupport.cfg
dyld_stub_binder
error in user chunk
extreme cHRM chunk cannot be converted to tristimulus values
f0HcF0H
failed.
false
ffff.
fffff.
ffffff.
fffffff
field.m_nSlot < GLM_MAX_VERTEX_ELEMENTS
fields.m_nDisplayMask != 0
filesystem_stdio
filetoinclude
float &FloatBitMap_t::Pixel(int, int, int, int) const
float CKeyValues_Data::Internal_GetFloat()
fmt != IMAGE_FORMAT_UNKNOWN
fmt >= IMAGE_FORMAT_UNKNOWN && fmt < NUM_IMAGE_FORMATS
formatClass == GLM_BLIT_FORMAT_DEPTH || formatClass == GLM_BLIT_FORMAT_DEPTH_STENCIL
func && m_ModeChangeCallbacks.Find( func ) < 0
gACol[row][pix].b == 0
gACol[row][pix].g == 0
gACol[row][pix].r == 0
gGL->glDebugMessageCallbackARB
gGL->glDebugMessageControlARB
gGL->glDebugMessageInsertARB
gGL->glGenProgramPipelines != nullptr
gGL->glGetDebugMessageLogARB
gGL->glTexImage2DMultisample != nullptr
gGL->m_bHave_GL_ARB_debug_output
gGL->m_bHave_GL_ARB_map_buffer_range
gGL->m_bHave_GL_ARB_sync
gGL->m_bHave_GL_EXT_texture_sRGB_decode == true
gGL->m_bHave_GL_GREMEDY_string_marker
gGL->m_bHave_GL_KHR_debug
g_TSPointerListNodes.IsAllocationWithinPool( pCurrent )
g_bInitialized
g_formatDescTable[glTexFormat].m_nTexFormat == glTexFormat
g_pApplication->GetGameMode( ) == APPLICATION_IS_GAME
g_pCVar
g_pRenderDeviceGL->GetIndexBuffer( hIndexBuffer )->GetBufferType() == RENDER_BUFFER_TYPE_DYNAMIC
g_pRenderDeviceGL->GetIndexBuffer( ib.m_hIndexBuffer )
g_pRenderDeviceGL->GetVertexBuffer( hVertexBuffer )->GetBufferType() == RENDER_BUFFER_TYPE_DYNAMIC
g_pRenderDeviceGL->GetVertexBuffer( vb.m_hVertexBuffer )
g_pResourceHandleUtils
g_pResourceSystem
g_pTextureManagerBase == this
g_pTextureManagerGLNew != NULL
g_pThreadPool
gamma table being rebuilt
glActiveShaderProgram
glActiveTexture
glAttachShader
glBeginQuery
glBindAttribLocation
glBindBuffer
glBindBufferBase
glBindBufferRange
glBindFramebuffer
glBindImageTexture
glBindMultiTextureEXT
glBindProgramPipeline
glBindRenderbuffer
glBindSampler
glBindTexture
glBindVertexArray
glBindVertexBuffer
glBlendColor
glBlendEquation
glBlendEquationSeparate
glBlendFunc
glBlendFuncSeparate
glBlitFramebuffer
glBufferData
glBufferParameteriAPPLE
glBufferStorage
glBufferSubData
glCheckFramebufferStatus
glClear
glClearBufferfi
glClearBufferfv
glClearBufferiv
glClearBufferuiv
glClearColor
glClearDepth
glClearDepthf
glClearStencil
glClientWaitSync
glColorMask
glColorMaski
glCompileShader
glCompressedTexImage2D
glCompressedTexImage3D
glCompressedTexSubImage2D
glCompressedTexSubImage3D
glContextVersions.Count() > 0
glCopyBufferSubData
glCopyImageSubData
glCreateProgram
glCreateShader
glCreateShaderProgramv
glDebugMessageCallback
glDebugMessageCallbackARB
glDebugMessageControl
glDebugMessageControlARB
glDebugMessageInsert
glDebugMessageInsertARB
glDeleteBuffers
glDeleteFramebuffers
glDeleteProgram
glDeleteProgramPipelines
glDeleteQueries
glDeleteRenderbuffers
glDeleteSamplers
glDeleteShader
glDeleteSync
glDeleteTextures
glDeleteVertexArrays
glDepthFunc
glDepthMask
glDepthRange
glDepthRangeArrayv
glDepthRangeIndexed
glDepthRangef
glDetachShader
glDisable
glDisableVertexAttribArray
glDrawArrays
glDrawArraysInstanced
glDrawBuffer
glDrawBuffers
glDrawElementsInstancedBaseVertex
glDrawRangeElements
glDrawRangeElementsBaseVertex
glEnable
glEnableVertexAttribArray
glEndQuery
glFenceSync
glFinish
glFlush
glFlushMappedBufferRange
glFlushMappedBufferRangeAPPLE
glFlushMappedNamedBufferRangeEXT
glFrameTerminatorGREMEDY
glFramebufferRenderbuffer
glFramebufferTexture2D
glFramebufferTexture3D
glFramebufferTextureLayer
glFrontFace
glGenBuffers
glGenFramebuffers
glGenProgramPipelines
glGenQueries
glGenRenderbuffers
glGenSamplers
glGenTextures
glGenVertexArrays
glGenerateMipmap
glGetActiveUniform
glGetActiveUniformBlockName
glGetActiveUniformsiv
glGetBooleani_v
glGetBooleanv
glGetCompressedTexImage
glGetDebugMessageLog
glGetDebugMessageLogARB
glGetDoublei_v
glGetDoublev
glGetError
glGetFloati_v
glGetFloatv
glGetFramebufferAttachmentParameteriv
glGetIntegeri_v
glGetIntegerv
glGetMultisamplefv
glGetNamedBufferParameterivEXT
glGetNamedBufferPointervEXT
glGetNamedBufferSubDataEXT
glGetObjectLabel
glGetObjectPtrLabel
glGetPointerv
glGetProgramBinary
glGetProgramInfoLog
glGetProgramInterfaceiv
glGetProgramPipelineInfoLog
glGetProgramPipelineiv
glGetProgramResourceIndex
glGetProgramResourceLocation
glGetProgramResourceLocationIndex
glGetProgramResourceName
glGetProgramResourceiv
glGetProgramiv
glGetQueryObjectiv
glGetQueryObjectui64v
glGetQueryObjectuiv
glGetQueryiv
glGetShaderInfoLog
glGetShaderiv
glGetString
glGetStringi
glGetSynciv
glGetTexImage
glGetTexLevelParameteriv
glGetTexParameterPointervAPPLE
glGetTextureHandleNV
glGetTextureSamplerHandleNV
glGetUniformBlockIndex
glGetUniformIndices
glGetUniformLocation
glIsEnabled
glIsProgramPipeline
glIsTexture
glIsTextureHandleResidentNV
glLinkProgram
glMakeTextureHandleNonResidentNV
glMakeTextureHandleResidentNV
glMapBuffer
glMapBufferRange
glMapNamedBufferEXT
glMapNamedBufferRangeEXT
glMemoryBarrier
glMultiTexParameterfEXT
glMultiTexParameterfvEXT
glMultiTexParameteriEXT
glMultiTexParameterivEXT
glNamedBufferDataEXT
glNamedBufferSubDataEXT
glNamedCopyBufferSubDataEXT
glObjectLabel
glObjectPtrLabel
glPatchParameterfv
glPatchParameteri
glPixelStorei
glPolygonMode
glPolygonOffset
glPopDebugGroup
glProgramBinary
glProgramParameteri
glProgramUniform1d
glProgramUniform1dv
glProgramUniform1f
glProgramUniform1fv
glProgramUniform1i
glProgramUniform1iv
glProgramUniform1ui
glProgramUniform1uiv
glProgramUniform2d
glProgramUniform2dv
glProgramUniform2f
glProgramUniform2fv
glProgramUniform2i
glProgramUniform2iv
glProgramUniform2ui
glProgramUniform2uiv
glProgramUniform3d
glProgramUniform3dv
glProgramUniform3f
glProgramUniform3fv
glProgramUniform3i
glProgramUniform3iv
glProgramUniform3ui
glProgramUniform3uiv
glProgramUniform4d
glProgramUniform4dv
glProgramUniform4f
glProgramUniform4fv
glProgramUniform4i
glProgramUniform4iv
glProgramUniform4ui
glProgramUniform4uiv
glProgramUniformHandleui64NV
glProgramUniformHandleui64vNV
glProgramUniformMatrix2dv
glProgramUniformMatrix2fv
glProgramUniformMatrix2x3dv
glProgramUniformMatrix2x3fv
glProgramUniformMatrix2x4dv
glProgramUniformMatrix2x4fv
glProgramUniformMatrix3dv
glProgramUniformMatrix3fv
glProgramUniformMatrix3x2dv
glProgramUniformMatrix3x2fv
glProgramUniformMatrix3x4dv
glProgramUniformMatrix3x4fv
glProgramUniformMatrix4dv
glProgramUniformMatrix4fv
glProgramUniformMatrix4x2dv
glProgramUniformMatrix4x2fv
glProgramUniformMatrix4x3dv
glProgramUniformMatrix4x3fv
glPushDebugGroup
glQueryCounter
glReadBuffer
glReadPixels
glRenderbufferStorage
glRenderbufferStorageMultisample
glSampleMaski
glSamplerParameterf
glSamplerParameterfv
glSamplerParameteri
glScissor
glScissorArrayv
glScissorIndexed
glScissorIndexedv
glShaderSource
glStencilFunc
glStencilFuncSeparate
glStencilMask
glStencilOp
glStencilOpSeparate
glStringMarkerGREMEDY
glTexImage2D
glTexImage2DMultisample
glTexImage3D
glTexImage3DMultisample
glTexParameterfv
glTexParameteri
glTexStorage1D
glTexStorage2D
glTexStorage2DMultisample
glTexStorage3D
glTexStorage3DMultisample
glTexSubImage2D
glTexSubImage3D
glTextureParameterfEXT
glTextureParameterfvEXT
glTextureParameteriEXT
glTextureParameterivEXT
glTextureRangeAPPLE
glUniform1f
glUniform1i
glUniform4fv
glUniformBlockBinding
glUniformHandleui64NV
glUniformHandleui64vNV
glUnmapBuffer
glUnmapNamedBufferEXT
glUseProgram
glUseProgramStages
glValidateProgramPipeline
glVertexAttribBinding
glVertexAttribDivisor
glVertexAttribFormat
glVertexAttribIFormat
glVertexAttribIPointer
glVertexAttribLFormat
glVertexAttribPointer
glVertexBindingDivisor
glViewport
glViewportArrayv
glViewportIndexedf
glViewportIndexedfv
glWaitSync
gl_Position = inPos;  
gl_bufmode
gl_can_mix_shader_gammas
gl_can_resolve_flipped
gl_cannot_mix_shader_gammas
gl_cannot_resolve_flipped
gl_debug_output
gl_disableStaticBuffer
gl_enable_vertex_attrib_binding
gl_enabletexsubimage
gl_filter
gl_filter_set_texture_pixels
gl_magnify_resolve_mode
gl_minify_resolve_mode
gl_minimize_all_tex
gl_minimize_rt_tex
gl_minimize_tex_log
gl_mtglflush_at_tof
gl_rt_forcergba
gl_singlecontext
gl_texclientstorage
gl_texlayoutstats
gl_texmsaalog
gl_texture_preloading
glmParams.m_pFocusWindow != NULL
hPlatWnd != PLAT_WINDOW_INVALID
hResource->m_nRefCount > 0
hShader == RENDER_SHADER_HANDLE_INVALID
hTexture != RENDER_TEXTURE_HANDLE_INVALID
h[A\A]A^A_]
h[A^A_]
head->m_pPrev==which
header crc mismatch
hffff.
hfffff.
http://support.steampowered.com/cgi-bin/steampowered.cfg/php/enduser/std_adp.php?p_faqid=772
id != UTL_INVAL_SYMBOL
idx >= 0
incorrect data check
incorrect header check
incorrect length check
index < RS_MAX_RENDER_TARGETS
info.m_nVersion == RENDER_DEVICE_INFO_VERSION
infoDictionary
initialCommit <= m_maxSize
int CDeviceFence::AddRef()
int CIndexBufferBase::GetIndexCapacity() const
int CIndexBufferBase::GetIndexCount() const
int CInputLayoutBase::Release()
int CKeyValues_Data::Internal_GetInt()
int CPipelineFence::AddRef()
int CRenderContextGL::FindDynamicIB(DynamicIndexBufferHandle_t) const
int CRenderContextGL::FindDynamicVB(DynamicVertexBufferHandle_t) const
int CRenderPipelineStatsGL::BeginCommandListSubmission(const CRenderPipelineStats *, const CUtlVector<BoundResourceRecord_t> *, const char *)
int CSchemaInheritanceIterator::PopulateTraversal_R(ClassIntrospectionHandle_t, ClassIntrospectionHandle_t, uint32, bool, bool)
int CTextureBase::GetPinCount()
int CTextureBase::PinInMemory()
int CTextureBase::UnpinInMemory()
int CTextureDesc::GetArrayCount() const
int CTextureManagerBase::GetNumTextureLoadsInFlight() const
int CUtlStreamBuffer::ReadBytesFromFile(int, int)
int CUtlString::FormatV(const char *, __va_list_tag *)
int CVertexBufferBase::GetVertexCapacity() const
int CVertexBufferBase::GetVertexCount() const
int CVertexBufferBase::GetVertexSize() const
int ComputePrimitiveCount(RenderPrimitiveType_t, int)
int ResourceRelease(ResourceHandle_t, uintp, ResourceLeakTrackingGroup_t)
int ResourceReleaseNoDelete(ResourceHandle_t, uintp, ResourceLeakTrackingGroup_t)
int _V_strncmp(const char *, const char *, int)
intel
internal error handling cHRM coefficients
internal error handling cHRM->XYZ
internal error in png_XYZ_from_xy
internal row logic error
internal row size calculation error
internal row width error
internal sequential row size calculation error
intformat != 0
intp CUtlFixedMemory<UtlLinkedListElem_t<BlendStateGL_t, long long> >::GetIndex(const CUtlFixedMemory::Iterator_t &) const [T = UtlLinkedListElem_t<BlendStateGL_t, long long>]
intp CUtlFixedMemory<UtlLinkedListElem_t<COcclusionQueryMgr::OcclusionQueryObject_t, long long> >::GetIndex(const CUtlFixedMemory::Iterator_t &) const [T = UtlLinkedListElem_t<COcclusionQueryMgr::OcclusionQueryObject_t, long long>]
intp CUtlFixedMemory<UtlLinkedListElem_t<CSwapChainBase *, long long> >::GetIndex(const CUtlFixedMemory::Iterator_t &) const [T = UtlLinkedListElem_t<CSwapChainBase *, long long>]
intp CUtlFixedMemory<UtlLinkedListElem_t<DepthStencilStateGL_t, long long> >::GetIndex(const CUtlFixedMemory::Iterator_t &) const [T = UtlLinkedListElem_t<DepthStencilStateGL_t, long long>]
intp CUtlFixedMemory<UtlLinkedListElem_t<RasterizerStateGL_t, long long> >::GetIndex(const CUtlFixedMemory::Iterator_t &) const [T = UtlLinkedListElem_t<RasterizerStateGL_t, long long>]
invalid background gamma type
invalid bit length repeat
invalid block type
invalid chunk type
invalid chunklength
invalid code -- missing end-of-block
invalid code lengths set
invalid distance code
invalid distance too far back
invalid distances set
invalid handle
invalid literal/length code
invalid literal/lengths set
invalid stored block lengths
invalid user transform pixel depth
invalid window size
istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
item.m_hTexture == pTexture->m_nInternalHandle.GetResourceHandle()
k0L+s
l$	ffffff.
layout(location = 0) in  vec4 texCoords;  
layout(location = 0) in vec4 inPos;  
layout(location = 0) out vec4 outColor;
layout(location = 0) out vec4 texCoords;  
layout(location = 1) in vec2 inTexCoords;  
layout\s*\(.*\)\s+(uniform)\s+[A-Za-z0-9_]+
layout\s*\(.*\)\s+uniform\s+sampler[A-za-z0-9]+\s+[A-Za-z0-9_]+
len > 0 || HasError()
libpng does not support gamma+background+rgb_to_gray
libpng error: %s
libpng warning: %s
librendersystemgl.dylib
lineOrder
localize
m_Blobs.IsPeeked()
m_Count == 0
m_DriverInfoString
m_ElementCount == 0
m_Elements.IsValidIterator( it )
m_Elements.IsValidIterator( m_LastAlloc )
m_Elements.IsValidIterator( m_LastAlloc ) || m_NumElements == 0
m_FirstFree == InvalidIndex()
m_Format
m_Frames
m_Head == InvalidIndex()
m_Head.value.pNode != End()
m_Head.value.pNode == m_Tail.value.pNode
m_Head.value.pNode->pNext == End()
m_Images
m_LastEventName.Count() > 0
m_MaxPrimitiveCount: %d
m_MaxSimultaneousRenderTargets: %d
m_MaxTextureHeight: %d
m_MaxTextureWidth: %d
m_MaxUserClipPlanes: %d
m_Memory.IsIdxValid( Index )
m_Memory.IsIdxValid( Index ) && m_Memory.IsIdxValid( Index + nMaxSize - 1 )
m_Memory.IsIdxValid( Index ) && m_Memory.IsIdxValid( Index + size - 1 )
m_Memory.IsValidIterator( it )
m_Memory.IsValidIterator( m_LastAlloc ) || m_ElementCount == 0
m_NumBooleanVertexShaderConstants: %d
m_NumElements == 0
m_NumIntegerVertexShaderConstants: %d
m_NumPixelShaderConstants: %d
m_NumSamplers: %d
m_NumVertexShaderConstants: %d
m_OcclusionQueryObjects.IsValidIndex( h )
m_OutstandingQueryList.Find( cmd.m_pQuery ) < 0
m_PciModelString
m_PreferDynamicTextures: %s
m_Reflectivity
m_Root == InvalidIndex()
m_Sequences
m_SupportsMipmappedCubemaps: %s
m_Tail == InvalidIndex()
m_TextureMemorySize: %llu
m_Thread != NULL
m_ZBiasAndSlopeScaledDepthBiasSupported: %s
m_bAccelerated
m_bAlphaCrop
m_bBrokenBindBufferRange
m_bCantBlitReliably
m_bCantResolveFlipped
m_bCantResolveScaled
m_bClamp
m_bContextLocalBuffer
m_bDone
m_bFullscreen
m_bHasCubeMapArrays
m_bHasFramebufferBlit
m_bHasGeometryShader
m_bHasTesselation
m_bHasTextureGather
m_bIsDrivenByDx11
m_bIsLocked
m_bIsLocked == false
m_bIsWaitingToBeDestroyed == false
m_bNeedsATICentroidHack: %s
m_bNoAlpha
m_bNoColor
m_bPreferHardwareSync: %s
m_bPreferSmallPMBs
m_bPreferTexturesInHWMemory: %s
m_bPreferZPrepass: %s
m_bRequiresSM30
m_bStarted
m_bStopped
m_bSuppressPixelShaderCentroidHackFixup: %s
m_bUnsupported: %s
m_bWindowed
m_backing != NULL
m_commitIncrement <= m_maxSize && pageSize % m_alignment == 0
m_ctx
m_ctx->m_nCurOwnerThreadId == nCurThreadId
m_desc.m_handle == 0
m_elems
m_errorIndex>=0
m_fallbackTextureBits
m_flDisplayTime
m_flTotalTime
m_floatParams
m_fnChangeCallbacks.Count() == 0
m_iDataType == TYPE_NONE
m_layout != NULL
m_layout->m_format->m_glDataFormat != GL_ALPHA
m_layout->m_format->m_glDataFormat != GL_DEPTH_COMPONENT
m_layout->m_format->m_glDataFormat != GL_DEPTH_STENCIL
m_maxSize > 0
m_nAllocStatsId == INVALID_ALLOC_STATS_ID
m_nCurDepth > 0
m_nD3DSemanticIndex
m_nDXSupportLevel: %d
m_nDataType[nDestAttributeIndex] == other.m_nDataType[nSrcAttributeIndex]
m_nDepth
m_nDisplayMask
m_nDriverVersionHigh
m_nDriverVersionLow
m_nFlags
m_nHandle != 0
m_nHeight
m_nHeight == 0
m_nHeight > 0
m_nId
m_nImageFormat
m_nInstanceStepRate
m_nInternalHandle.GetPinCount() > 0
m_nInternalHandle.GetResourceHandle() == RENDER_TEXTURE_HANDLE_INVALID
m_nInternalHandle.GetTextureObject() == NULL
m_nMaxAniso
m_nMaxAnisotropy: %d
m_nMaxAuxBuffers
m_nMaxClipDistances
m_nMaxCombinedTextureImageUnits
m_nMaxFragmentTextureImageUnits
m_nMaxFragmentUniformVectors
m_nMaxGeometryTextureImageUnits
m_nMaxPrimitiveCount
m_nMaxRenderTargets
m_nMaxSampleBuffers
m_nMaxSamples
m_nMaxTessControlTextureImageUnits
m_nMaxTessEvaluationTextureImageUnits
m_nMaxTextureCubemap
m_nMaxTextureDepth
m_nMaxTextureHeight
m_nMaxTextureWidth
m_nMaxUniformBufferBindings >= ( m_nUniformBufferSlotOffset[RENDER_DOMAIN_SHADER] + m_nMaxUniformBlocks[RENDER_DOMAIN_SHADER] )
m_nMaxVertexShaderUniforms
m_nMaxVertexTextureImageUnits
m_nMaxVertexUniformVectors
m_nMaxViewports
m_nMultisampleType
m_nNumMipLevels
m_nNumSubmitsToSatisfy > 0
m_nOffset
m_nOfs <= m_nSize
m_nPciDeviceID
m_nPciVendorID
m_nPicmip0Res
m_nRef > 0
m_nRefCount == 0
m_nRefCount.GetRaw() > 0
m_nRendererID
m_nResolveSamplerUniformLoc >= 0
m_nResolveTexCoordOffsetScaleLoc >= 0
m_nSampleAlpha
m_nSemanticIndex
m_nShaderHandle == 0
m_nSheetSize
m_nSlot
m_nSlotType
m_nTexMemory
m_nTextureCount >= 0
m_nTextureLoadsInFlight >= 0
m_nThreadIndex == nThreadIndex
m_nVidMemory
m_nWidth
m_nWidth == 0
m_nWidth > 0
m_name
m_pBase
m_pBits
m_pContext != NULL
m_pCurrentWindow != NULL
m_pD3DSemanticName
m_pGLQueryObject != NULL
m_pGLQueryObject == NULL
m_pImmutablePersistentBuf != NULL
m_pName
m_pOuterTypeScope != NULL
m_pOwner && m_CompletionFunc
m_pOwner && m_Func
m_pParent
m_pParent == this
m_pParent->m_fnCompletionCallback
m_pPrimaryContext == nullptr
m_pRenderTarget != NULL
m_pRenderThread != NULL
m_pSchemaType != NULL
m_pSemantic
m_pSemanticName
m_pShaderCache != NULL
m_pShaderPipeline != NULL
m_pSheet
m_pSwapChain != NULL
m_pTextureInfoChunks[ m_nTextureInfoChunkCount ]
m_pTextureManager->m_nTextureLoadsInFlight >= 0
m_pTypeOf != NULL
m_packed.m_addressU < sizeof( rstogl_addressMode ) / sizeof( GLenum )
m_packed.m_addressV < sizeof( rstogl_addressMode ) / sizeof( GLenum )
m_packed.m_addressW < sizeof( rstogl_addressMode ) / sizeof( GLenum )
m_status.Load() < JOB_OK
m_texGLTarget == GL_TEXTURE_2D
m_texName != 0
m_textureInfoDeletionQueue.IsEmpty()
m_value
main(
makemelast
malformed sPLT chunk
mapPtr
max megabytes
max megatexels
max_processor_count
memstats.txt
method( %s )
mffff.
min megabytes
min megatexels
min_processor_count
model
n * nBlockSize >= num
n < m_Vector.Count()
n4;fA
nActualSize <= ( int )( m_dirtyMaxOffset - m_dirtyMinOffset )
nAdapter < GetAdapterCount()
nAddCapacity < 0x40000000
nAdjustedHeight > 0
nAlignment >= 0 && nAlignment <= UINT16_MAX
nArrayCount == 1
nAttrIdx < MAX_SOA_FIELDS
nBucket < ARRAYSIZE( m_DynamicConstantBufferPools[0] )
nBytesLeft == nSizeToWrite
nBytesWritten <= nDstBufSize
nChars <= MIN( V_strnlen(pValue, nChars) + 1, nChars )
nChars == V_strlen(m_pString)
nColorModeSize % 3 == 0
nCount == 1
nCount == 1 || nCount == 0
nCount >= 0 && nCount < ARRAYSIZE(m_pViewports)
nCount >= INT16_MIN && nCount <= INT16_MAX
nDXLevel != 0
nDataLeft == 0
nDataSize <= static_cast<uint>( m_nBufferSize )
nDepthFormat != IMAGE_FORMAT_UNKNOWN
nDetail == RENDER_TEXTURE_DETAIL_DEFAULT || nDetail == RENDER_TEXTURE_DETAIL_HIGH
nDim >= 0 && nDim < RENDER_TEXTURE_DIMENSION_COUNT
nDstArraySlice == 0
nDstMipSlice == 0
nFieldCount <= RENDER_SYSTEM_MAX_INPUT_LAYOUT_ELEMENTS
nFlags >= 0 && nFlags <= UINT8_MAX
nGLBufferType == GLM_VERTEX_BUFFER || nGLBufferType == GLM_INDEX_BUFFER
nGLProfile == SDL_GL_CONTEXT_PROFILE_ES
nHeight > 0
nIndex != -1
nIndex != pDisabledBlob->m_DisabledModeAllocations.InvalidIndex()
nInstanceCount > 0
nMatchCode <= UINT16_MAX
nMaxChars > 0
nMinCapacity <= k_nMaxStringSize
nMinCapacity > Capacity()
nMinCapacity >= nChars
nMipLevelToBind < m_layout->m_key.m_nNumMipLevels
nMipLevelToBind >= 0
nMode < GetModeCount( nAdapter )
nNumBytes < (int)( CCommandStream::ChunkSize() - sizeof( CommandJump_t ) )
nNumMipLevelsLoaded != 0
nNumMipLevelsLoaded == textureObject.m_spec.m_nNumMipLevels
nNumVertices >= 1
nNumViewBytes <= 4096 * ( sizeof( float )* 4 )
nOffset >= 0
nOffset >= 0 && nOffset <= UINT32_MAX
nQueryIndex < NUM_FRAME_SYNC_QUERIES
nRefCount >= 0
nRenderTargetIndex < RENDER_TARGET_MAX_COUNT
nRequiredStreamableTextureMemoryWithoutEvictions >= nRequiredStreamableTextureMemory
nResourceType != RESOURCE_TYPE_NONE
nResourceType == DeduceResourceTypeFromResourceName( pReferencedResourceName )
nRowBytes == pBitmap->Stride()
nSampleIndex < curFrame.m_pQueries->Count()
nSamplerCount <= RENDERSYSTEM_MAX_SAMPLERS
nSamplerIndex < ( ( pGLContext->Caps().m_bHasGeometryShader ) ? GLM_FIRST_GEOMETRY_SAMPLER_INDEX : GLM_TOTAL_SAMPLER_COUNT_SM30 )
nSamplerIndex < ARRAYSIZE( pState->m_pSamplerState )
nSamplerIndex < GLM_FIRST_DOMAIN_SAMPLER_INDEX
nSamplerIndex < GLM_FIRST_HULL_SAMPLER_INDEX
nSamplerIndex < GLM_TOTAL_SAMPLER_COUNT
nSamplerIndex >= 0 && nSamplerIndex < ARRAYSIZE( m_SamplerStates[0] )
nSamplerIndex >= 0 && nSamplerIndex < ARRAYSIZE(m_SamplerStates[0])
nSignature == 0x4d494238
nSize != 0
nSize <= m_nMemoryUsed
nSize == sizeof(uint)
nSize == sizeof(uint64)
nSliceSize * nSlices == nDataSize
nSlot >= 0 && nSlot < GLM_MAX_STREAMS
nSlot >= 0 && nSlot < INT16_MAX
nSrcArraySlice == 0
nSrcMip == 0
nSrcMipSlice == 0
nSrcSlice == 0
nStartTextureIndex + nTexCount <= GLContext()->Caps().m_nMaxFragmentTextureImageUnits
nStartTextureIndex + nTexCount <= GLContext()->Caps().m_nMaxGeometryTextureImageUnits
nStartTextureIndex + nTexCount <= GLContext()->Caps().m_nMaxTessControlTextureImageUnits
nStartTextureIndex + nTexCount <= GLContext()->Caps().m_nMaxTessEvaluationTextureImageUnits
nStartTextureIndex + nTexCount <= GLContext()->Caps().m_nMaxVertexTextureImageUnits
nStartView < pBuf->GetNumViews() && nNumViews <= pBuf->GetNumViews() && nStartView + nNumViews <= pBuf->GetNumViews()
nStride > 0
nTextureIndex < GLContext()->Caps().m_nMaxFragmentTextureImageUnits
nTextureIndex < GLContext()->Caps().m_nMaxGeometryTextureImageUnits
nTextureIndex < GLContext()->Caps().m_nMaxTessControlTextureImageUnits
nTextureIndex < GLContext()->Caps().m_nMaxTessEvaluationTextureImageUnits
nTextureIndex < GLContext()->Caps().m_nMaxVertexTextureImageUnits
nTotalFieldCount <= RENDER_SYSTEM_MAX_INPUT_LAYOUT_ELEMENTS - 3
nTotalFieldCount == nStaticFieldsUsed
nTransparencyChannelIndex <= 3
nTraversalOffset == 0
nTries < 10000000
nView < INT16_MAX
nViewDataSize <= pBuf->GetViewRequestedSize()
nViewDataSize == pBuf->GetViewRequestedSize()
nViewport >= 0 && nViewport < g_pRenderHardwareConfigImp->MaxViewports( )
nWidth > 0
nWrittenByteCount <= m_nCurLockMaxSizeInBytes
nWrittenByteCount <= static_cast< uint >( m_nBufferSize )
nfffff.
normal
nullFragmentProgram
nvidia
objectForKey:
oldState == RENDER_QUERY_STATE_ISSUED
operator delete(void*)
operator delete[](void*)
operator new(unsigned long)
operator new[](unsigned long)
ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
other.NumCols() == NumCols()
other.NumRows() == NumRows()
other.NumSlices() == NumSlices()
out float gl_ClipDistance[1]
out float4 gl_Position
out gl_PerVertex { vec4 gl_Position; out float gl_ClipDistance[1]; }
out vec4 gl_Position;
outColor = texture( sampler15, texCoords );  
outColor = texture( sampler15, texCoords.xy );  
outColor = texture( sampler15, texCoords.xyz );  
outColor = vec4( 0.0, 0.0, 0.0, 1.0 );
outputBuffer
p SBWKp
p [A\A]A^A_]
p(ff.
p.m_nPrimMul > 0
p.m_nType != GL_INVALID_INDEX
p8p8p
pA10CTextureGL
pAtomicType
pBits != NULL
pBlob
pBuffer->CalculateAllocationBucket() == (uint32)nBucket
pBuffer->GetFlagGroup() == nFlagGroup && pBuffer->GetFlagGroupFlags() == nFlagGroupFlags
pBuffer->GetNumViews() == 1 && nWrittenSizeInBytes == pBuffer->GetViewRequestedSize()
pBuffer->GetNumViews() >= nNumViews
pBuffer->m_nAllocatedSize >= nNumViews * nViewAlignedSize
pBuffer->m_nViewAlignedSize == nViewAlignedSize
pCB->GetGLMBuffer() != NULL
pCallback == NULL
pCommands->m_pPrimaryContext == nullptr
pCommands->m_pPrimaryContext == this
pCurPerFrameListIndex
pCurrentKey
pData == m_pData
pDataBlock != NULL
pDataSpec->m_nDepth == pActualSpec->GetDepth()
pDataSpec->m_nWidth == pActualSpec->m_nWidth && pDataSpec->m_nHeight == pActualSpec->m_nHeight && pDataSpec->m_nDepth == pActualSpec->m_nDepth
pDep->m_nIndexInDevice == i
pDesc->GetDestBlend() < 12
pDesc->GetSrcBlend() < 12
pDesc->GetSrcBlendAlpha() < 12
pDesc->m_nDecodeFlags & TEXTURE_DECODE_CONVERT_TO_YCOCG_DXT5
pDesc->m_nImageFormat == IMAGE_FORMAT_DXT5
pDesc->m_pMemory != nullptr
pDeviceFence
pDiskDataClassBinding != NULL
pDisplayDB != NULL
pDisplayDB->m_renderers != NULL
pDisplayParams != NULL
pDisplayParams->m_bEnableAutoDepthStencil
pDomainShaderGL->m_pBits && pDomainShaderGL->m_nSize
pDst <= ( pDstBuf + nDstBufSize )
pDst == pBitBufDst
pDst == pLast
pDstBits != NULL
pDstTex->m_texName != 0
pDynamicBufferMgrGL != NULL
pFallbackTexture
pFileSystem
pFoundLayout->m_refCount >= 0
pGLContext->Caps().m_bHasGeometryShader
pGLContext->Caps().m_bHasTesselation
pGeometryShaderGL->m_pBits && pGeometryShaderGL->m_nSize
pHeader->m_nHeaderVersion == RESOURCE_FILE_HEADER_VERSION
pHullShaderGL->m_pBits && pHullShaderGL->m_nSize
pIB->GetBufferType() == RENDER_BUFFER_TYPE_DYNAMIC
pIB->m_pGLIndexBuffer != NULL
pInfo->m_nVersion == RENDER_DISPLAY_MODE_VERSION
pInfo->m_spec.m_nNumMipLevels == texSpec.m_nNumMipLevels
pLastChild == NULL || pLastChild->m_pPeer == dat
pLastChild->m_pPeer == NULL
pLastChild->m_pPeer == dat
pLayout
pLockPtr != NULL
pMemory[i] == 0
pMovedTexture
pMovedTexture->m_nInternalHandle.m_nData == lastHandle.m_nData
pName
pNewWindow != NULL
pObject && m_DeviceEventListeners.Find( pObject ) == m_DeviceEventListeners.InvalidIndex()
pParamClass && pParamClass->GetClass()
pParams->m_nAdapter < pDisplayDB->m_renderers->Count()
pParams->m_nSize
pPerFrameDynamicBufferList
pPixelShaderGL->m_pBits && pPixelShaderGL->m_nSize
pPool->m_SpaceUsed < 0xFFFF
pPrimary == nullptr || bSupportByDefault || ForceSecondaryContextSupport()
pQuery->m_QueryState == RENDER_QUERY_STATE_ISSUED
pRemoveMipLevelsCallbackFunc != NULL
pRenderContext.GetContext()
pResourceName == NULL || V_stristr( pResourceName, ":" ) == NULL
pResult->State() == VISIT_INFO_STATE_COMPLETE
pRsDesc->m_nCullMode < sizeof( s_cullModeTranslateGL ) / sizeof( GLenum )
pRsDesc->m_nFillMode < sizeof( s_fillModeTranslateGL ) / sizeof( GLenum )
pSchemaSystem != NULL
pSpec
pSrcBits != NULL
pSrcChunk->m_nCount > 0
pSrcChunk->m_pTexture[ lastHandle.id.m_nInChunkIdx ] != NULL
pSrcTex != NULL
pStream
pSubRectToUpdate && cmd.m_Rect.depth == 1 && ((uint32)cmd.m_Rect.z) <= 5
pSubkey != NULL
pSubkey->m_pPeer == NULL
pTex->GetLayout()
pTex->GetTexHandle() != 0
pTexLockDesc->m_req.m_bReadOnlyLock
pTexture
pTexture->m_nInternalHandle.GetDiskSpec()->m_nImageFormat == IMAGE_FORMAT_DXT5
pTexture->m_nInternalHandle.GetPendingStreamingRequestId() == 0
pTexture->m_nInternalHandle.HasAnyFlags( TEXTURE_PENDING_ASYNC_REQUEST )
pTextureGL
pTmpCmdIn + command.m_nCmdSizeInBytes == pCmdIn
pVB->GetBufferType() != RENDER_BUFFER_TYPE_DYNAMIC
pVB->GetBufferType() == RENDER_BUFFER_TYPE_DYNAMIC
pVB->m_pGLVertexBuffer != NULL
pVTEXHeader != NULL
pVertexBufferGL->GetBufferType() == RENDER_BUFFER_TYPE_DYNAMIC
pVertexShaderGL->m_pBits && pVertexShaderGL->m_nSize
pWindow != NULL
pXRERA
pXRERAp
pXRERBp
pXRESF
pXp8p
pXu*H
pXulH
p[A\A^A_]
pixelAspectRatio
png_do_encode_alpha: unexpected call
png_do_quantize returned rowbytes=0
png_do_rgb_to_gray found nongray pixel
png_inflate logic error
position
positiont
potentiallyEvictableTextures.Count() <= m_nTextureCount
ppp0P 
ppppP
preload2DTex
preload3DTex
preloadCube
preloading %s, %s
programBinary.nProgramBinaryOffset + programBinary.nProgramBinarySize <= m_nProgramBinaryDataSize
ps_3_0
psize
query.m_pStartQuery
r'ffffff.
r)ffff.
r>ff.
rBff.
rDffff.
rFffffff.
rHffff.
rIfffff.
r_frame_sync_enable
r_fullscreen_gamma
r_gpu_mem_stats
r_max_texture_pool_size
r_texture_eager_eviction
r_texture_pool_size
r_texture_stream_debug_spew
r_texture_stream_mip_bias
r_texture_stream_throttle_amount
r_texture_stream_throttle_count
r_texturefilteringquality
r_textures_evict_all
r_wait_on_present
radr://5614542
rcCropUnion.m_fBottom_V >= 0.0f && rcCropUnion.m_fBottom_V <= 1.0f
rcCropUnion.m_fLeft_U >= 0.0f && rcCropUnion.m_fLeft_U <= 1.0f
rcCropUnion.m_fRight_U >= 0.0f && rcCropUnion.m_fRight_U <= 1.0f
rcCropUnion.m_fTop_V >= 0.0f && rcCropUnion.m_fTop_V <= 1.0f
record.m_hConstantBuffer != CONSTANT_BUFFER_HANDLE_INVALID
renderdoc
rendersystemgl
rendersystemgl: FIXME: Can't set texture bits of a D3D surface
resolveTex
resourceName
resourcesystem
s([A^]
s,fff.
s2HcC
sAmTb
sCAL chunk too short
sPLT chunk has bad length
sPLT chunk requires too much memory
s_nConnectionCount > 0
s_nDLLIdentifier < 0
s_nDLLIdentifier >= 0
s_nRegistrationCount < ARRAYSIZE(s_pConnectionRegistration)
s_nResourceFCRegisteredCount > 0
s_pPerfMarkerProvider != NULL
sample.m_nType & RENDER_PIPELINE_SAMPLE_TYPE_INCOMPLETED_FLAG
sample.m_nType == RENDER_PIPELINE_SAMPLE_TYPE_PRESENT
sampler15
screenWindowCenter
screenWindowWidth
sequence number %d too low in sheet file!!!
sequential row overflow
setting.
setting.CentroidHack
setting.DXLevel
setting.DisableShaderOptimizations
setting.HasBrokenPipelineStats
setting.MaxDXLevel
setting.MinDXLevel
setting.PreferHardwareSync
setting.PreferTexturesInHWMemory
setting.PreferZPrepass
setting.SuppressPixelShaderCentroidHackFixup
setting.Unsupported
setting.coop_fullscreen
setting.defaultres
setting.defaultresheight
setting.fullscreen
setting.fullscreen_min_on_focus_loss
setting.knowndevice
setting.mat_vsync
setting.maxdxlevel
setting.nowindowborder
setting.recommendedheight
setting.recommendedwidth
setting.refreshrate_denominator
setting.refreshrate_numerator
setting.resettodefaults
setting.shaderquality
sffffff.
shaderType < RENDER_SHADER_TYPE_COUNT
shaderType >= 0
shadercache/gl
shaderdump.txt
shaders.cache
shaders.toc
sheetcachetexture_.vtex
size < 1024 * 1024
size >= 0
size_t CTextureBase::ComputeSize(RenderTextureDetail_t) const
size_t CUtlStringBuilder::VAppendFormat(const char *, __va_list_tag *)
slice->m_zSize > 0
sliceCount == 1
spec.m_nImageFormat != IMAGE_FORMAT_UNKNOWN
specular
src->height == ( int )( src->widthheight >> 16 )
src->width == ( int )( src->widthheight & 0xFFFF )
src2_tmp_window
srcStride == 0
srcStride == 0 && dstStride == 0
stackLevel >= 0 && stackLevel < m_errorIndex
standardTex
static CSchemaEnumBindingBase *CSchemaEnumBinding<CubeMapFace_t>::Get() [T = CubeMapFace_t]
static CSchemaEnumBindingBase *CSchemaEnumBinding<InputLayoutVariation_t>::Get() [T = InputLayoutVariation_t]
static CSchemaEnumBindingBase *CSchemaEnumBinding<RenderBufferFlags_t>::Get() [T = RenderBufferFlags_t]
static CSchemaEnumBindingBase *CSchemaEnumBinding<RenderMultisampleType_t>::Get() [T = RenderMultisampleType_t]
static CSchemaEnumBindingBase *CSchemaEnumBinding<RenderPrimitiveType_t>::Get() [T = RenderPrimitiveType_t]
static CSchemaEnumBindingBase *CSchemaEnumBinding<RenderSlotType_t>::Get() [T = RenderSlotType_t]
static CSchemaEnumBindingBase *CSchemaEnumBinding<TextureSpecificationFlags_t>::Get() [T = TextureSpecificationFlags_t]
static GLbitfield CGLMShaderPipeline::GetGLShaderBitfield(RenderShaderType_t)
static GLenum CGLMProgramBase::GetGLShaderType(RenderShaderType_t)
static SDL_GLContext COpenGLDriverEntryPoints::CreateContext(SDL_Window *, const CUtlVector<GLContextVersion_t> &, GLContextVersion_t *)
static bool COpenGLDriverEntryPoints::SetSDLVisualAttributes()
static uint32 CBlockCompress::FastCompress(const uint8 *, uint32, uint8 *, uint32)
static void CGlobalConfigValueRegistry::HookUpConfigValue(const char *, ConfigType_t, ConfigValueType_t, CConfigValueOptions &&, const void **)
static void CTextureManagerGLNew::RemoveMipLevelsForTextures(const CUtlVector<TextureStreamingPriorityInfo_t> &, uint64, int, uint64, int &, int &, uint64 &)
static void ConVarRef::InitDeferredConVarRefs()
static void RenderInputLayoutField_t::Schema_VerifyBindingIsRegistered()
static void SequenceFloatParam_t::Schema_VerifyBindingIsRegistered()
static void SheetFrameImage_t::Schema_VerifyBindingIsRegistered()
static void SheetSequenceFrame_t::Schema_VerifyBindingIsRegistered()
static void SheetSequence_t::Schema_VerifyBindingIsRegistered()
static void Sheet_t::Schema_VerifyBindingIsRegistered()
static void TextureDesc_t::Schema_VerifyBindingIsRegistered()
static void TextureHeader_t::Schema_VerifyBindingIsRegistered()
static void VsInputSignatureElement_t::Schema_VerifyBindingIsRegistered()
static void VsInputSignature_t::Schema_VerifyBindingIsRegistered()
stats.m_pSamples
std::__1::__basic_string_common<true>::__throw_length_error() const
std::__1::__get_classname(char const*, bool)
std::__1::__get_collation_name(char const*)
std::__1::__match_any_but_newline<char>::__exec(std::__1::__state<char>&) const
std::__1::__shared_weak_count::__add_shared()
std::__1::__shared_weak_count::__release_shared()
std::__1::__shared_weak_count::~__shared_weak_count()
std::__1::__vector_base_common<true>::__throw_length_error() const
std::__1::__vector_base_common<true>::__throw_out_of_range() const
std::__1::basic_ios<char, std::__1::char_traits<char> >::~basic_ios()
std::__1::basic_istream<char, std::__1::char_traits<char> >::sentry::sentry(std::__1::basic_istream<char, std::__1::char_traits<char> >&, bool)
std::__1::basic_istream<char, std::__1::char_traits<char> >::~basic_istream()
std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry::sentry(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry::~sentry()
std::__1::basic_ostream<char, std::__1::char_traits<char> >::~basic_ostream()
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::basic_streambuf()
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::imbue(std::__1::locale const&)
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setbuf(char*, long)
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::showmanyc()
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sync()
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::uflow()
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsgetn(char*, long)
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsputn(char const*, long)
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::~basic_streambuf()
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init(char const*, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init(unsigned long, char)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(char const*, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::assign(char const*)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, unsigned long, std::__1::allocator<char> const&)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::compare(char const*) const
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(char)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::push_back(char)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::reserve(unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::resize(unsigned long, char)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_string()
std::__1::collate<char>::id
std::__1::ctype<char>::id
std::__1::ios_base::__set_badbit_and_consider_rethrow()
std::__1::ios_base::clear(unsigned int)
std::__1::ios_base::getloc() const
std::__1::ios_base::init(void*)
std::__1::locale::locale()
std::__1::locale::locale(std::__1::locale const&)
std::__1::locale::name() const
std::__1::locale::use_facet(std::__1::locale::id&) const
std::__1::locale::~locale()
std::__1::regex_error::regex_error(std::__1::regex_constants::error_type)
std::__1::regex_error::~regex_error()
std::exception::what() const
std::exception::~exception()
std::terminate()
stringWithFormat:
strnlen
success.
t	[A^]
t ffffff.
t!D9{hs5H
t#HcS
t#fff.
t$ w)H
t$8[A\A^A_]
t$A;T$ t
t$A;T$(t
t$PIc
t$PIcT$$1
t%A;L$
t%ffffff.
t&H9XHtpH
t&H9[8tUH
t&fffff.
t'fff.
t'ffff.
t(L;}
t(ff.
t*ffffff.
t+ff.
t,Lcq
t-L9`
t.fff.
t/ff.
t/ffffff.
t0D9c
t0fffff.
t2dD9
t7fff.
t8L90t3A
t9fffff.
t:L9 t5A
t:fffff.
t<D9c w6H
t<L98t7A
t<fff.
tBfff.
tBfffff.
tCL9}
tEIcD$
tEIcG
tFpLi
tHfff.
tLMc~
tMff.
tPfff.
tRNS chunk has out-of-range samples for bit_depth
tRNS chunk not allowed with alpha channel
tSH9XPt*H
tSMct$
tXEtuPL
tXEtu\L
t[A;^
t[fff.
t^D9+uCD9s
tangent
tangents
tangentt
tessfactor
texCoords = vec4( inTexCoords, 0.0, 0.0 );  
texId.GetPendingStreamingRequestId() == nStreamingRequestId
texId.HasAnyFlags( TEXTURE_PENDING_ASYNC_REQUEST )
texSpec.m_nDisplayRectHeight == uncompressedTempBitmap.Height()
texSpec.m_nDisplayRectWidth == uncompressedTempBitmap.Width()
texSpec.m_nHeight == pTexture->m_nInternalHandle.GetDiskSpec()->m_nHeight
texSpec.m_nImageFormat == IMAGE_FORMAT_DXT5
texSpec.m_nWidth == pTexture->m_nInternalHandle.GetDiskSpec()->m_nWidth
texcoord
text compression mode is out of range
textureObject.m_spec.m_nNumMipLevels == texSpec.m_nNumMipLevels
tfff.
too many length or distance symbols
tqLc{
transparency
typeinfo for IStack_Annotation
typeinfo for std::__1::__shared_weak_count
typeinfo for std::__1::bad_function_call
typeinfo for std::__1::basic_istream<char, std::__1::char_traits<char> >
typeinfo for std::__1::basic_istringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
typeinfo for std::__1::basic_ostream<char, std::__1::char_traits<char> >
typeinfo for std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
typeinfo for std::__1::basic_streambuf<char, std::__1::char_traits<char> >
typeinfo for std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >
typeinfo for std::__1::regex_error
typeinfo for std::bad_alloc
typeinfo for std::exception
typeinfo name for std::__1::bad_function_call
typeinfo name for std::__1::basic_istringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
typeinfo name for std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
typeinfo name for std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >
u	D9 
u	[A\A^A_]
u$97u$H
u&HcQ
u(J9\
u)H;]
u*J9\)0u
u0H9[
u0H9[ t*H
u9H9[8t8H
u=D;{
u=H9[8t<H
u?M9d$8t=H
uFD"e
uFfffff.
uJzHf
uPfAi
u\fff.
uaLck
uiKey != UnusedElementKey()
uiOffset + rc.m_fBottom_V * uiRange >= 0 && uiOffset + rc.m_fBottom_V * uiRange <= 0xFFFF
uiOffset + rc.m_fLeft_U * uiRange >= 0 && uiOffset + rc.m_fLeft_U * uiRange <= 0xFFFF
uiOffset + rc.m_fRight_U * uiRange >= 0 && uiOffset + rc.m_fRight_U * uiRange <= 0xFFFF
uiOffset + rc.m_fTop_V * uiRange >= 0 && uiOffset + rc.m_fTop_V * uiRange <= 0xFFFF
uint32 CSchemaFieldIterator::GetFieldMemoryOffset() const
uint64 CKeyValues_Data::Internal_GetUint64()
uint64 CTextureManagerBase::MN_BuildRequestedResourcesList(CUtlVector<CTextureManagerBase::ToCacheHandle_t> &)
uint64 CTextureStreamingHelper::LoadExplicitlyRequestedTextures()
uint8 *PadAndCompressImageDataForPanorama(Bitmap_t &, const TextureSpecification_t *, bool *)
undefined
uniform
uniform sampler2D sampler15;  
uniform sampler3D sampler15;  
uniform samplerCube sampler15;  
uniform vec4 vTexCoordScaleOffset;
uniformBinding.m_pName
unknown
unknown compression method
unknown critical chunk
unknown header flags set
uvCropped
uvUncropped
v0ff.
vTexCoordScaleOffset
v`[A\A^A_]
vec2 texCoords = texCoords.xy * vTexCoordScaleOffset.xy + vTexCoordScaleOffset.zw;
vendor id: 0x%x
vendor-id
video.cfg
virtual CDeviceFence::~CDeviceFence()
virtual CDisplayList *CRenderContextGL::DetachCommandList()
virtual CRenderAttributes &CRenderContextBase::GetAttributesForModify()
virtual CRenderContextBase::~CRenderContextBase()
virtual CTextureManagerBase::~CTextureManagerBase()
virtual ConstantBufferHandle_t CRenderDeviceBase::CreateConstantBuffer(ConstantBufferType_t, uint32, void *)
virtual ConstantBufferHandle_t CRenderDeviceBase::CreateConstantBufferInternal(ConstantBufferType_t, uint32, uint32, uint32, uint)
virtual ConstantBufferHandle_t CRenderDeviceGL::CreateConstantBufferInternal(ConstantBufferType_t, uint32, uint32, uint32, uint)
virtual CreateInterfaceFn CRenderDeviceMgrGL::CreateDevice(int, int, int)
virtual DynamicIndexBufferHandle_t CRenderContextGL::LockDynamicIndexBuffer(const BufferDesc_t &, DynamicLockDesc_t *)
virtual DynamicVertexBufferHandle_t CRenderContextGL::LockDynamicVertexBuffer(const BufferDesc_t &, DynamicLockDesc_t *)
virtual GraphicsAPISpecificTextureHandle_t CRenderDeviceGL::GetGraphicsAPISpecificTextureHandle(HRenderTexture)
virtual HRenderTexture CRenderDeviceBase::FindOrCreateTexture(const char *, bool, const CTextureCreationDesc *, const CTextureDesc *, const void *, int, bool)
virtual HRenderTexture CTextureManagerGL::FindOrCreateProceduralTexture(const char *, bool, const CTextureCreationDesc *)
virtual RenderBufferHandle_t CRenderDeviceGL::CreateGPUBuffer(RenderBufferType_t, const BufferDesc_t &, RenderBufferFlags_t, void *)
virtual RenderBufferHandle_t CRenderDeviceGL::CreateGPUBufferFormatted(RenderBufferType_t, const BufferDesc_t &, RenderBufferFlags_t, ImageFormat, void *)
virtual RenderSemaphoreHandle_t CRenderContextBase::SemaphoreSignalAtEnd()
virtual RenderShaderHandle_t CRenderDeviceGL::CreateDomainShader(IRenderShaderBuffer *, const char *)
virtual RenderShaderHandle_t CRenderDeviceGL::CreateGeometryShader(IRenderShaderBuffer *, const char *)
virtual RenderShaderHandle_t CRenderDeviceGL::CreateHullShader(IRenderShaderBuffer *, const char *)
virtual RenderShaderHandle_t CRenderDeviceGL::CreatePixelShader(IRenderShaderBuffer *, const char *)
virtual RenderShaderHandle_t CRenderDeviceGL::CreateVertexShader(IRenderShaderBuffer *, const char *)
virtual SwapChainHandle_t CRenderDeviceGL::CreateSwapChain(PlatWindow_t, OsSpecificWindowHandle_t, const RenderDeviceInfo_t &, const char *)
virtual bool CBaseIntrospectedTypeManager::Init(IResourceSystemUtils *)
virtual bool CDefaultIntrospectedTypeManager<2019914870, TextureHeader_t>::Init(IResourceSystemUtils *) [nResourceType = 2019914870, TIntrospectedDiskData = TextureHeader_t]
virtual bool CRenderContextGL::BindVertexBuffer(int, VertexBufferHandle_t, int, int, int)
virtual bool CRenderDeviceBase::GetSwapChainFromTexture(HRenderTexture, SwapChainHandle_t *, SwapChainBuffer_t *)
virtual bool CRenderDeviceGL::InitDevice(int, int, int)
virtual bool CRenderDeviceGL::ReadTexturePixels(HRenderTexture, Rect_t *, int, int, Rect_t *, void *, ImageFormat, int)
virtual bool CRenderHardwareConfig::SupportsHDR() const
virtual bool CTextureManagerGL::GenerateTextureObject(TextureObjectInfo_t *, CTextureBase *, const TextureSpecification_t &, const void *, int, TextureBitsMemoryType_t)
virtual bool CTextureManagerGL::IsStreamingDataAlreadyLoaded(ResourceHandle_t)
virtual bool CVfxShaderFile::Unserialize(CUtlBuffer &)
virtual bool IResourceTypeManager::IsStreamingDataAlreadyLoaded(ResourceHandle_t)
virtual int CConCommandMemberAccessor<CRenderDeviceBase>::CommandCompletionCallback(const char *, CUtlVector<CUtlString> &) [T = CRenderDeviceBase]
virtual int CConCommandMemberAccessor<CTextureManagerBase>::CommandCompletionCallback(const char *, CUtlVector<CUtlString> &) [T = CTextureManagerBase]
virtual int CRenderDeviceMgrGL::GetModeCount(int) const
virtual int ConCommand::AutoCompleteSuggest(const char *, CUtlVector<CUtlString> &)
virtual int IResourceTypeManager::GetNonStreamingDataLoadSize() const
virtual int PerfMarkers::CARBDebugOutputPerfMarkerProvider::BeginEvent(Color, const char *)
virtual int PerfMarkers::CARBDebugOutputPerfMarkerProvider::EndEvent()
virtual int PerfMarkers::CGREMDYStringPerfMarkerProvider::BeginEvent(Color, const char *)
virtual int PerfMarkers::CGREMDYStringPerfMarkerProvider::EndEvent()
virtual int PerfMarkers::CKHRDebugPerfMarkerProvider::BeginEvent(Color, const char *)
virtual int PerfMarkers::CKHRDebugPerfMarkerProvider::EndEvent()
virtual thunk to std::__1::basic_istream<char, std::__1::char_traits<char> >::~basic_istream()
virtual thunk to std::__1::basic_ostream<char, std::__1::char_traits<char> >::~basic_ostream()
virtual void *CAtomicManipulator<CResourceArray<SequenceFloatParam_t> >::Allocate() [T = CResourceArray<SequenceFloatParam_t>]
virtual void *CAtomicManipulator<CResourceArray<SequenceFloatParam_t> >::AllocateAndCopy(const void *) [T = CResourceArray<SequenceFloatParam_t>]
virtual void *CAtomicManipulator<CResourceArray<SheetFrameImage_t> >::Allocate() [T = CResourceArray<SheetFrameImage_t>]
virtual void *CAtomicManipulator<CResourceArray<SheetFrameImage_t> >::AllocateAndCopy(const void *) [T = CResourceArray<SheetFrameImage_t>]
virtual void *CAtomicManipulator<CResourceArray<SheetSequenceFrame_t> >::Allocate() [T = CResourceArray<SheetSequenceFrame_t>]
virtual void *CAtomicManipulator<CResourceArray<SheetSequenceFrame_t> >::AllocateAndCopy(const void *) [T = CResourceArray<SheetSequenceFrame_t>]
virtual void *CAtomicManipulator<CResourceArray<SheetSequence_t> >::Allocate() [T = CResourceArray<SheetSequence_t>]
virtual void *CAtomicManipulator<CResourceArray<SheetSequence_t> >::AllocateAndCopy(const void *) [T = CResourceArray<SheetSequence_t>]
virtual void *CIndexBufferBase::AllocateBackingStore(int)
virtual void *CRenderDeviceBase::GetDeviceSpecificTexture(HRenderTexture, RenderTextureDimension_t)
virtual void *CRenderDeviceGL::CreateBlendStateFromDesc(const RsBlendStateDesc_t *)
virtual void *CRenderDeviceGL::CreateRasterizerStateFromDesc(const RsRasterizerStateDesc_t *)
virtual void *CRenderDeviceGL::GetDeviceSpecificTexture(HRenderTexture, RenderTextureDimension_t)
virtual void *CResourceAllocatorUtils::AssumeControl(const void *)
virtual void *CVertexBufferBase::AllocateBackingStore(int)
virtual void CAtomicManipulator<CResourceArray<SequenceFloatParam_t> >::Copy(void *, const void *) [T = CResourceArray<SequenceFloatParam_t>]
virtual void CAtomicManipulator<CResourceArray<SequenceFloatParam_t> >::Deallocate(void *) [T = CResourceArray<SequenceFloatParam_t>]
virtual void CAtomicManipulator<CResourceArray<SheetFrameImage_t> >::Copy(void *, const void *) [T = CResourceArray<SheetFrameImage_t>]
virtual void CAtomicManipulator<CResourceArray<SheetFrameImage_t> >::Deallocate(void *) [T = CResourceArray<SheetFrameImage_t>]
virtual void CAtomicManipulator<CResourceArray<SheetSequenceFrame_t> >::Copy(void *, const void *) [T = CResourceArray<SheetSequenceFrame_t>]
virtual void CAtomicManipulator<CResourceArray<SheetSequenceFrame_t> >::Deallocate(void *) [T = CResourceArray<SheetSequenceFrame_t>]
virtual void CAtomicManipulator<CResourceArray<SheetSequence_t> >::Copy(void *, const void *) [T = CResourceArray<SheetSequence_t>]
virtual void CAtomicManipulator<CResourceArray<SheetSequence_t> >::Deallocate(void *) [T = CResourceArray<SheetSequence_t>]
virtual void CBaseIntrospectedTypeManager::AllocateResource(ResourceHandle_t, ResourceId_t, const ResourceFileHeader_t *, IRD_RegisterResourceDataUtils *)
virtual void CConCommandMemberAccessor<CRenderDeviceBase>::CommandCallback(const CCommandContext &, const CCommand &) [T = CRenderDeviceBase]
virtual void CConCommandMemberAccessor<CTextureManagerBase>::CommandCallback(const CCommandContext &, const CCommand &) [T = CTextureManagerBase]
virtual void CExtrefTraversal::VisitRelevantField(void *, CSchemaType *, FieldIntrospectionHandle_t)
virtual void CRenderContextBase::BindRenderTargets(const RenderTargetDesc_t &)
virtual void CRenderContextBase::GetViewport(RenderViewport_t *, int)
virtual void CRenderContextBase::SemaphoreWaitAtBegin(RenderSemaphoreHandle_t)
virtual void CRenderContextBase::SetAssociatedThreadIndex(int)
virtual void CRenderContextBase::SetPrimaryContext(IRenderContext *, bool)
virtual void CRenderContextBase::SetSamplerStatePS(int, RsFilter_t, RsTextureAddressMode_t, RsTextureAddressMode_t, RsTextureAddressMode_t, RsComparison_t)
virtual void CRenderContextBase::SetSamplerStateVS(int, RsFilter_t, RsTextureAddressMode_t, RsTextureAddressMode_t, RsTextureAddressMode_t, RsComparison_t)
virtual void CRenderContextBase::SetViewports(int, const RenderViewport_t *)
virtual void CRenderContextBase::SubmitSecondaryDisplayList(CDisplayList *, bool)
virtual void CRenderContextBase::UnlockDynamicConstantBuffer(ConstantBufferHandle_t, uint32)
virtual void CRenderContextGL::BindConstantBufferView(RenderShaderType_t, ConstantBufferHandle_t, uint32, int, int)
virtual void CRenderContextGL::BindMipLevelOfTexture(int, HRenderTexture, int, RenderTextureDimension_t, RenderShaderType_t, RenderColorSpace_t, int)
virtual void CRenderContextGL::BindMipLevelOfTextures(int, int, bind_resource_list_t *, RenderShaderType_t)
virtual void CRenderContextGL::BindShader(RenderShaderType_t, RenderShaderHandle_t)
virtual void CRenderContextGL::BindUnordedAccessViews(int, int, bind_resource_list_t *, RenderShaderType_t)
virtual void CRenderContextGL::Clear(const RenderClearInfo_t &)
virtual void CRenderContextGL::CopyGPUBufferHiddenStructureCount(RenderBufferHandle_t, RenderBufferHandle_t, uint32)
virtual void CRenderContextGL::CopyTexture(HRenderTexture, HRenderTexture, Rect_t *, int, int, uint, uint, uint, uint, uint, uint, CopyTextureFlags_t)
virtual void CRenderContextGL::DispatchComputeShader(uint32, uint32, uint32)
virtual void CRenderContextGL::DispatchComputeShaderIndirect(RenderBufferHandle_t, uint32)
virtual void CRenderContextGL::OnReleaseRenderContext()
virtual void CRenderContextGL::ReadTexturePixels(HRenderTexture, IReadTexturePixelsCallback *, bool, Rect_t *)
virtual void CRenderContextGL::SetConstantBufferViewsData(ConstantBufferHandle_t, uint32, uint32, const void *const *, uint32)
virtual void CRenderContextGL::SetScissorRects(int, const Rect_t *)
virtual void CRenderContextGL::SetViewports(int, const RenderViewport_t *)
virtual void CRenderContextGL::UnlockDynamicIndexBuffer(DynamicIndexBufferHandle_t, int)
virtual void CRenderContextGL::UnlockDynamicVertexBuffer(DynamicVertexBufferHandle_t, int)
virtual void CRenderDeviceBase::DestroyConstantBuffer(ConstantBufferHandle_t)
virtual void CRenderDeviceBase::ResizeEngineWindow(SwapChainHandle_t, PlatWindow_t, RenderDeviceInfo_t)
virtual void CRenderDeviceGL::DestroyComputeShader(RenderShaderHandle_t)
virtual void CRenderDeviceGL::SetHardwareGammaRamp(SwapChainHandle_t, float, float, float, float, bool)
virtual void CRenderDeviceGL::SubmitDisplayLists(const DisplayListToSubmit_t *, int)
virtual void CRenderDeviceMgrBase::AddDeviceEventListener(IRenderDeviceEventListener *)
virtual void CRenderDeviceMgrBase::AddModeChangeCallback(RenderModeChangeCallbackFunc_t)
virtual void CRenderDeviceMgrBase::ResetVideoConfig()
virtual void CRenderDeviceMgrGL::GetAdapterInfo(int, RenderAdapterInfo_t &) const
virtual void CRenderDeviceMgrGL::GetCurrentModeInfo(RenderDisplayMode_t *, int) const
virtual void CRenderDeviceMgrGL::GetModeInfo(RenderDisplayMode_t *, int, int) const
virtual void CRenderDeviceMgrGL::GetMonitorResolution(int *, int *, int) const
virtual void CRenderDeviceMgrGL::InitSheetCacheIfNecessary()
virtual void CRenderQueryGL::Reacquire()
virtual void CResourceReferenceFixupTraversal::HandleExtref(ResourceType_t, CResourceExtReferenceBase *, FieldIntrospectionHandle_t)
virtual void CResourceStreamFixed::Commit(uint)
virtual void CTextureBase::SetTextureHandle(HRenderTexture, const CTextureCreationDesc *)
virtual void CTextureBase::SpinWaitForFallbackTextureHookup(RenderColorSpace_t)
virtual void CTextureManagerBase::AllocateResource(ResourceHandle_t, ResourceId_t, const ResourceFileHeader_t *, IRD_RegisterResourceDataUtils *)
virtual void CTextureManagerBase::HookupFallbackTextureAndQueueTextureBitsCopy(CTextureBase *, void *)
virtual void CTextureManagerGL::LoadStreamingData(ResourceHandle_t, IResourceSystemUtils *)
virtual void CTextureManagerGLNew::LoadStreamingData(ResourceHandle_t, IResourceSystemUtils *)
virtual void ConCommand::Dispatch(const CCommandContext &, const CCommand &)
virtual void ConCommandBase::Create(const char *, const char *, int64)
virtual void ConVar::ChangeStringValue(const char *, float)
virtual void ConVar::Create(const char *, const char *, int64, const char *, bool, float, bool, float, FnChangeCallback_t)
virtual void ConVar::InternalSetFloatValue(float)
virtual void ConVar::InternalSetIntValue(int)
virtual void ConVar::InternalSetValue(const char *)
virtual void GLMDisplayDB::PopulateFakeAdapters(uint)
virtual void GLMDisplayDB::PopulateRenderers()
virtual void IResourceTypeManager::LoadStreamingData(ResourceHandle_t, IResourceSystemUtils *)
virtual void PerfMarkers::CARBDebugOutputPerfMarkerProvider::SetMarker(Color, const char *)
virtual void PerfMarkers::CGREMDYStringPerfMarkerProvider::SetMarker(Color, const char *)
virtual void PerfMarkers::CKHRDebugPerfMarkerProvider::SetMarker(Color, const char *)
void *CMemoryStack::Alloc(unsigned int, bool)
void *CRenderDeviceBase::AllocatePooledBackingStore(PooledBackingStoreType_t, int)
void *CRenderDeviceGL::AllocatePerFrameDynamicBuffer(GLMBufferType_t, RenderBufferType_t, const BufferDesc_t &, CUtlVector<CRenderDeviceGL::PerFrameDynamicBuffer_t *> *, CThreadFastMutex &, uint *, int)
void *CUtlMemoryPoolBase::Alloc()
void AttachTexToFBO(CGLMFBO *, GLenum, GLenum, GLMBlitFormatClass_t, uint, uint, uint)
void Bitmap_t::Init(int, int, ImageFormat, int)
void Bitmap_t::SetBuffer(int, int, ImageFormat, unsigned char *, bool, int)
void Bitmap_t::SetColor(int, int, Color)
void CBaseIntrospectedTypeManager::SetDiskDataBinding(const CSchemaClassBindingBase *)
void CByteswap::SwapBufferToTargetEndian(T *, T *, int) [T = int]
void CByteswap::SwapBufferToTargetEndian(T *, T *, int) [T = unsigned int]
void CCommandStreamBuilder::EnsureCapacity(int)
void CCommandStreamBuilder::WriteData(const void *, int)
void CDependencyDescriptor::Satisfy()
void CDynamicBufferMgrGL::InsertNewDynamicBuffer(GLMBufferType_t, uint)
void CFmtStrN<1024, true>::AppendFormat(const char *, ...) [SIZE_BUF = 1024, QUIET_TRUNCATION = true]
void CFrameSyncBase::UpdateFrameSyncQuery(CRenderThreadBase *, int, bool, float)
void CGLMBuffer::Lock(GLMBuffLockParams *, char **)
void CGLMBuffer::Unlock(int, const void *)
void CGLMFBO::TexAttach(GLMFBOTexAttachParams *, GLMFBOAttachment_t, GLenum)
void CGLMProgramSeparable::CompileAndLink()
void CGLMQuery::Complete(void *, int)
void CGLMQuery::Release()
void CGLMQuery::ReleaseGLResources()
void CGLMQuery::Start()
void CGLMQuery::Stop()
void CGLMSwapChain::Present(const Rect_t *)
void CGLMTex::GenerateMipMaps()
void CGLMTex::Lock(GLMTexLockDesc *, char **, int *, int *)
void CGLMTex::SetMipLevelToBind(int, int)
void CGLMTex::Unlock(GLMTexLockDesc *)
void CGLMTex::WriteTexels(GLMTexLockDesc *, bool, bool)
void CGLMTexLayoutTable::DelLayoutRef(GLMTexLayout *)
void CIndexBufferGL::Reset(const BufferDesc_t)
void CIndexBufferGL::SetIndexData(const void *, uint, uint, CRenderContextGL *)
void CIndexBufferGL::Unlock(uint, CRenderContextGL *)
void CIndexBufferGL::UnlockRegion(int32, int32, LockDesc_t *, CRenderContextGL *)
void CInputLayoutDict<CInputLayoutGL>::ConcatentateInputLayouts(int, RenderInputLayout_t *, int, const RenderInputLayout_t *, bool) [T = CInputLayoutGL]
void CInputLayoutDict<CInputLayoutGL>::DestroyInputLayout(RenderInputLayout_t) [T = CInputLayoutGL]
void CInputLayoutDict<CInputLayoutGL>::MarkInputLayoutInvalid(int) [T = CInputLayoutGL]
void CKeyValuesErrorStack::Pop()
void CKeyValuesErrorStack::Reset(int, HKeySymbol)
void CKeyValuesTokenReader::SeekBackOneToken()
void CKeyValues_Data::Internal_ClearData()
void CKeyValues_Data::Internal_CopyData(const CKeyValues_Data &)
void CMemberFuncProxyBase<CParallelProcessorAbstract<CParallelProcessor<int, CMemberFuncJobItemProcessor<int, CCallQueueT<CTSQueue<CFunctor *, false> >, CCallQueueT<CTSQueue<CFunctor *, false> > >, 1> > *, void (CParallelProcessorAbstract<CParallelProcessor<int, CMemberFuncJobItemProcessor<int, CCallQueueT<CTSQueue<CFunctor *, false> >, CCallQueueT<CTSQueue<CFunctor *, false> > >, 1> >::*)(int), CFuncMemPolicyNone>::OnCall() [OBJECT_TYPE_PTR = CParallelProcessorAbstract<CParallelProcessor<int, CMemberFuncJobItemProcessor<int, CCallQueueT<CTSQueue<CFunctor *, false> >, CCallQueueT<CTSQueue<CFunctor *, false> > >, 1> > *, FUNCTION_TYPE = void (CParallelProcessorAbstract<CParallelProcessor<int, CMemberFuncJobItemProcessor<int, CCallQueueT<CTSQueue<CFunctor *, false> >, CCallQueueT<CTSQueue<CFunctor *, false> > >, 1> >::*)(int), MEM_POLICY = CFuncMemPolicyNone]
void CMemberFuncProxyBase<CRenderDeviceGL *, void (CRenderDeviceGL::*)(GLMContext *const &), CFuncMemPolicyNone>::OnCall() [OBJECT_TYPE_PTR = CRenderDeviceGL *, FUNCTION_TYPE = void (CRenderDeviceGL::*)(GLMContext *const &), MEM_POLICY = CFuncMemPolicyNone]
void CMemberFuncProxyBase<CSOAContainer *, void (CSOAContainer::*)(int, int, int, int, const CSOAContainer *, int, int), CFuncMemPolicyNone>::OnCall() [OBJECT_TYPE_PTR = CSOAContainer *, FUNCTION_TYPE = void (CSOAContainer::*)(int, int, int, int, const CSOAContainer *, int, int), MEM_POLICY = CFuncMemPolicyNone]
void CMemberFuncProxyBase<CSOAContainer *, void (CSOAContainer::*)(int, int, int, int, int, __attribute__((__vector_size__(4 * sizeof(float)))) float), CFuncMemPolicyNone>::OnCall() [OBJECT_TYPE_PTR = CSOAContainer *, FUNCTION_TYPE = void (CSOAContainer::*)(int, int, int, int, int, __attribute__((__vector_size__(4 * sizeof(float)))) float), MEM_POLICY = CFuncMemPolicyNone]
void CMemberFuncProxyBase<CTextureManagerBase *, void (CTextureManagerBase::*)(CWeakHandle<InfoForResourceTypeCTextureBase>, void *, int, TextureSpecification_t, int, TextureOnDiskCompressionType_t), CFuncMemPolicyNone>::OnCall() [OBJECT_TYPE_PTR = CTextureManagerBase *, FUNCTION_TYPE = void (CTextureManagerBase::*)(CWeakHandle<InfoForResourceTypeCTextureBase>, void *, int, TextureSpecification_t, int, TextureOnDiskCompressionType_t), MEM_POLICY = CFuncMemPolicyNone]
void CMemberFuncProxyBase<CTextureManagerBase *, void (CTextureManagerBase::*)(IAsyncResourceDataRequest *, CWeakHandle<InfoForResourceTypeCTextureBase>, TextureSpecification_t, int), CFuncMemPolicyNone>::OnCall() [OBJECT_TYPE_PTR = CTextureManagerBase *, FUNCTION_TYPE = void (CTextureManagerBase::*)(IAsyncResourceDataRequest *, CWeakHandle<InfoForResourceTypeCTextureBase>, TextureSpecification_t, int), MEM_POLICY = CFuncMemPolicyNone]
void CMemoryStack::RegisterAllocation(uint32)
void COcclusionQueryMgr::DestroyOcclusionQueryObject(OcclusionQueryObjectHandle_t)
void COcclusionQueryMgr::EndOcclusionQueryDrawing(OcclusionQueryObjectHandle_t, IRenderContext *)
void COcclusionQueryMgr::OcclusionQuery_IssueNumPixelsRenderedQuery(OcclusionQueryObjectHandle_t)
void COcclusionQueryMgr::ResetOcclusionQueryObject(OcclusionQueryObjectHandle_t)
void COpenGLDriverEntryPoints::DumpContextInfo()
void COpenGLDriverEntryPoints::MakeCurrent(SDL_Window *)
void COpenGLDriverEntryPoints::SwapBuffersCurrentWindow(bool)
void COrderedConstructor_Create<COrderedInitShutdownRefWrapper<&EarlyInit_Common>, CResolveOrderedFunc<COrderedInitShutdownRefWrapper<&EarlyInit_Common>, &_ORDERED_INIT_SHUTDOWN_WRAPPER_RESOLVEFUNC>, false>::AddRef(bool) [T = COrderedInitShutdownRefWrapper<&EarlyInit_Common>, RESOLVECLASS = CResolveOrderedFunc<COrderedInitShutdownRefWrapper<&EarlyInit_Common>, &_ORDERED_INIT_SHUTDOWN_WRAPPER_RESOLVEFUNC>, bCONSTRUCT_ON_FIRST_USE = false]
void COrderedConstructor_DependencyManagement<COrderedInitShutdownRefWrapper<&EarlyInit_Common> >::InternalLock(bool) [T = COrderedInitShutdownRefWrapper<&EarlyInit_Common>]
void COrderedConstructor_DependencyManagement<COrderedInitShutdownRefWrapper<&EarlyInit_Common> >::Release() [T = COrderedInitShutdownRefWrapper<&EarlyInit_Common>]
void CPinnedMemoryBuffer::Append(uint)
void CRenderContextGL::ApplyDelayedChanges()
void CRenderContextGL::BindConstantBufferInternal(RenderShaderType_t, ConstantBufferHandle_t, uint32, int, int)
void CRenderContextGL::DestroyAllDynamicIndexBuffers()
void CRenderContextGL::DestroyAllDynamicVertexBuffers()
void CRenderContextGL::SetConstantBufferDataInternal(ConstantBufferHandle_t, uint32, uint32, const void *const *, uint32)
void CRenderContextGL::SetTextureData(CGLMTex *, const TextureSpecification_t *, const CTextureDesc *, const void *, int, int, const Rect3D_t *, uint, const DataRecycleDelegate_t *)
void CRenderDeviceGL::DiscardCommandBuffers(CCommandStream *)
void CRenderDeviceGL::SetDisplayParameters(PlatWindow_t, int, const RenderDeviceInfo_t &, GLMDisplayParams *)
void CRenderHardwareConfig::ForceCapsToDXLevel(HardwareCaps_t *, int, const HardwareCaps_t &)
void CRenderHardwareConfig::SetupHardwareCaps(int, const HardwareCaps_t &)
void CRenderPipelineStatsGL::EndCommandListSubmission(int)
void CRenderPipelineStatsGL::EndPresent()
void CRenderPipelineStatsGL::ServiceOutstandingQueries()
void CRenderResourceMgr::Free(RenderResourceHandle_t)
void CRenderResourceMgr::PerformQueuedDeletions(uint)
void CRenderThreadBase::CleanupOnPresent()
void CRenderThreadGL::CopyBitsFromHostSurface(CGLMTex *, const Rect_t &, unsigned char *, ImageFormat, ImageFormat, int)
void CRenderThreadGL::Execute(CCommandStream *, bool)
void CRenderThreadGL::ManageQueries(bool)
void CRenderThreadGL::OnBlockForQuery(const CommandBlockForQueryGL_t &)
void CRenderThreadGL::OnCopyTextureData(const CommandCopyTextureData_t &)
void CRenderThreadGL::OnCreateDomainShader(const CommandCreateDomainShader_t &)
void CRenderThreadGL::OnCreateGeometryShader(const CommandCreateGeometryShader_t &)
void CRenderThreadGL::OnCreateHullShader(const CommandCreateHullShader_t &)
void CRenderThreadGL::OnCreatePixelShader(const CommandCreatePixelShader_t &)
void CRenderThreadGL::OnCreateVertexShader(const CommandCreateVertexShader_t &)
void CRenderThreadGL::OnDestroyContext(const CommandDestroyContext_t &)
void CRenderThreadGL::OnEndQuery(const CommandEndQueryGL_t &)
void CRenderThreadGL::OnFinishDeferredResourceCreation(const CommandFinishDeferredResourceCreation_t &)
void CRenderThreadGL::OnReleaseConstantBuffer(const CommandReleaseConstantBuffer_t &)
void CRenderThreadGL::OnReleaseIndexBuffer(const CommandReleaseIndexBuffer_t &)
void CRenderThreadGL::OnReleaseVertexBuffer(const CommandReleaseVertexBuffer_t &)
void CRenderThreadGL::OnSetTexturePixelsFromResource(const CommandSetTexturePixelsFromResource_t &, bool)
void CRenderThreadGL::OnUpdateIndexBuffer(const CommandUpdateIndexBuffer_t &, bool)
void CRenderThreadGL::OnUpdateVertexBuffer(const CommandUpdateVertexBuffer_t &, bool)
void CRenderThreadGL::RunCallbackOnBitsFromHostSurface(CGLMTex *, const Rect_t &, ImageFormat, IReadTexturePixelsCallback *)
void CRenderThreadGL::UpdateConstantBuffer(ConstantBuffer_t *, void *, uint32, uint32)
void CResourceStream::Align(uint, int)
void CResourceStream::EnsureAvailable(uint)
void CSOAContainer::AllocateConstantMemory()
void CSOAContainer::AllocateDataMemory()
void CSOAContainer::CopyAttrFrom(const CSOAContainer &, int, int)
void CSOAContainer::SetAttributeType(int, EAttributeDataType, bool)
void CSchemaClassBindingBase::RegBase(ISchemaSystem *, const char *, const char *, CSchemaClassInfo *, const char *) [I = int]
void CSchemaClassInfo::CompleteInitialization(const CSchemaClassBindingBase *)
void CSchemaClassInfo::CompleteInitializationInternal(CSchemaType *, const CSchemaClassBindingBase *)
void CSchemaFieldIterator::Advance()
void CSchemaFieldIterator::Reset()
void CSheetDataTextureCache::AllocateAndUploadSequenceData(const Sheet_t *, Vector2D *, int *)
void CStrongHandle<InfoForResourceTypeCTextureBase>::Shutdown() [TResourceInfoData = InfoForResourceTypeCTextureBase]
void CStrongHandle<ResourceBindingVoid_t>::Shutdown() [TResourceInfoData = ResourceBindingVoid_t]
void CTSFastPushQueue_Base<CRenderDeviceBase::FencedWaitingList_t<CDeviceFence, ConstantBuffer_t>, CRenderDeviceBase::FencedWaitingList_t<CDeviceFence, ConstantBuffer_t>, CRenderDeviceBase::FencedWaitingList_t<CDeviceFence, ConstantBuffer_t>, &CRenderDeviceBase::FencedWaitingList_t<CDeviceFence, ConstantBuffer_t>::m_pNext>::Push(T *) [T = CRenderDeviceBase::FencedWaitingList_t<CDeviceFence, ConstantBuffer_t>, POINTER_TYPE = CRenderDeviceBase::FencedWaitingList_t<CDeviceFence, ConstantBuffer_t>, CONTAINER_TYPE = CRenderDeviceBase::FencedWaitingList_t<CDeviceFence, ConstantBuffer_t>, LINKED_LIST_PTR = &CRenderDeviceBase::FencedWaitingList_t<CDeviceFence, ConstantBuffer_t>::m_pNext]
void CTSFastPushQueue_Base<CRenderDeviceBase::FencedWaitingList_t<CPipelineFence, ConstantBuffer_t>, CRenderDeviceBase::FencedWaitingList_t<CPipelineFence, ConstantBuffer_t>, CRenderDeviceBase::FencedWaitingList_t<CPipelineFence, ConstantBuffer_t>, &CRenderDeviceBase::FencedWaitingList_t<CPipelineFence, ConstantBuffer_t>::m_pNext>::Push(T *) [T = CRenderDeviceBase::FencedWaitingList_t<CPipelineFence, ConstantBuffer_t>, POINTER_TYPE = CRenderDeviceBase::FencedWaitingList_t<CPipelineFence, ConstantBuffer_t>, CONTAINER_TYPE = CRenderDeviceBase::FencedWaitingList_t<CPipelineFence, ConstantBuffer_t>, LINKED_LIST_PTR = &CRenderDeviceBase::FencedWaitingList_t<CPipelineFence, ConstantBuffer_t>::m_pNext]
void CTSFastPushQueue_Base<CUtlMemoryPoolBase::CBlob, CUtlMemoryPoolBase::CBlob, CUtlMemoryPoolBase::CBlob, &CUtlMemoryPoolBase::CBlob::m_pNext>::Push(T *) [T = CUtlMemoryPoolBase::CBlob, POINTER_TYPE = CUtlMemoryPoolBase::CBlob, CONTAINER_TYPE = CUtlMemoryPoolBase::CBlob, LINKED_LIST_PTR = &CUtlMemoryPoolBase::CBlob::m_pNext]
void CTSFastPushQueue_Base<CUtlMemoryPoolBase::FreeList_t, CUtlMemoryPoolBase::FreeList_t, CUtlMemoryPoolBase::FreeList_t, &CUtlMemoryPoolBase::FreeList_t::pNext>::Push(T *) [T = CUtlMemoryPoolBase::FreeList_t, POINTER_TYPE = CUtlMemoryPoolBase::FreeList_t, CONTAINER_TYPE = CUtlMemoryPoolBase::FreeList_t, LINKED_LIST_PTR = &CUtlMemoryPoolBase::FreeList_t::pNext]
void CTSFastPushQueue_Base<ConstantBuffer_t, ConstantBuffer_t, ConstantBuffer_t, &ConstantBuffer_t::m_pNext>::Push(T *) [T = ConstantBuffer_t, POINTER_TYPE = ConstantBuffer_t, CONTAINER_TYPE = ConstantBuffer_t, LINKED_LIST_PTR = &ConstantBuffer_t::m_pNext]
void CTSPointerList<IRenderContext>::Purge() [T = IRenderContext]
void CTSPointerList<void>::Purge() [T = void]
void CTSQueue<CFunctor *, false>::Purge() [T = CFunctor *, bTestOptimizer = false]
void CTSQueue<CTextureManagerBase::CacheRequest_t, false>::Purge() [T = CTextureManagerBase::CacheRequest_t, bTestOptimizer = false]
void CTSQueue<CWeakHandle<InfoForResourceTypeCTextureBase>, false>::Purge() [T = CWeakHandle<InfoForResourceTypeCTextureBase>, bTestOptimizer = false]
void CTSQueue<DynamicIndexBufferHandle_t__ *, false>::Purge() [T = DynamicIndexBufferHandle_t__ *, bTestOptimizer = false]
void CTSQueue<DynamicVertexBufferHandle_t__ *, false>::Purge() [T = DynamicVertexBufferHandle_t__ *, bTestOptimizer = false]
void CTSQueue<QueuedDisplayListItem_t, false>::Purge() [T = QueuedDisplayListItem_t, bTestOptimizer = false]
void CTextureBase::Init(const CTextureCreationDesc *, size_t, HRenderTexture)
void CTextureGL::AssignFallbackTexture()
void CTextureInfoId::SetPinCount(int32)
void CTextureInfoId::SetStreamingBitsOffset(int64)
void CTextureInfoId::SetTextureScope(TextureScope_t)
void CTextureInfoId::SetTextureUsage(TextureUsage_t)
void CTextureManagerBase::AbandonOutstandingStreamingRequest(CTextureBase *)
void CTextureManagerBase::BuildTextureListAndSendToGPUProfiler() const
void CTextureManagerBase::DeleteQueuedTextureInfosAndCompactArrays()
void CTextureManagerBase::HookUpTextureBits(HRenderTexture, void *, int, TextureSpecification_t, int32, TextureOnDiskCompressionType_t)
void CTextureManagerBase::IO_OnResourceFileLoaded(IAsyncResourceDataRequest *, HRenderTexture, TextureSpecification_t, int32)
void CTextureManagerBase::MN_CacheRequestedResources(CUtlVector<CTextureManagerBase::ToCacheHandle_t> &)
void CTextureManagerBase::MN_EvictResources(CUtlVector<CTextureManagerBase::ToCacheHandle_t> &, uint64)
void CTextureManagerBase::MN_OnResourceLoadCompleted(const HRenderTexture &, TextureObjectInfo_t &, int32, const int &)
void CTextureManagerBase::MN_OnResourceLoadFailed(const HRenderTexture &, int32)
void CTextureManagerBase::RegisterTextureDeallocation(CTextureBase *)
void CTextureManagerBase::UnregisterTexture(CTextureBase *)
void CTextureManagerGL::ComputeTextureObject(TextureObjectInfo_t *, const TextureSpecification_t *, const void *, int, bool)
void CTextureManagerGL::FinishDeferredResourceCreation(CGLMTex *)
void CTextureManagerGLNew::QueueReleaseFallbackTexture(CFallbackTextureGL *)
void CTextureManagerGLNew::ReleaseFallbackTexture(CFallbackTextureGL *)
void CTextureStreamingHelper::BalanceStreamableTextureMemory(RemoveMipLevelsCallbackFunc_t)
void CTextureStreamingHelper::BuildStreamableTextureList(CUtlVector<TextureStreamingPriorityInfo_t> &, uint64 *, uint64 *, uint64 *, int *, int *, int *)
void CTextureStreamingHelper::IssueTextureLoadRequest(CTextureBase *, const TextureSpecification_t &)
void CUtlBuffer::AddNullTermination()
void CUtlBuffer::AssumeMemory(void *, int, int, int)
void CUtlBuffer::GetString(char *, int)
void CUtlBuffer::Put(const void *, int)
void CUtlBuffer::SetExternalBuffer(void *, int, int, int)
void CUtlBuffer::VaPrintf(const char *, __va_list_tag *)
void CUtlFixedMemory<UtlLinkedListElem_t<BlendStateGL_t, long long> >::Grow(int) [T = UtlLinkedListElem_t<BlendStateGL_t, long long>]
void CUtlFixedMemory<UtlLinkedListElem_t<COcclusionQueryMgr::OcclusionQueryObject_t, long long> >::Grow(int) [T = UtlLinkedListElem_t<COcclusionQueryMgr::OcclusionQueryObject_t, long long>]
void CUtlFixedMemory<UtlLinkedListElem_t<CSwapChainBase *, long long> >::Grow(int) [T = UtlLinkedListElem_t<CSwapChainBase *, long long>]
void CUtlFixedMemory<UtlLinkedListElem_t<DepthStencilStateGL_t, long long> >::Grow(int) [T = UtlLinkedListElem_t<DepthStencilStateGL_t, long long>]
void CUtlFixedMemory<UtlLinkedListElem_t<RasterizerStateGL_t, long long> >::Grow(int) [T = UtlLinkedListElem_t<RasterizerStateGL_t, long long>]
void CUtlLinkedList<BlendStateGL_t, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<BlendStateGL_t, long long> > >::LinkBefore(I, I) [T = BlendStateGL_t, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<BlendStateGL_t, long long> >]
void CUtlLinkedList<BlendStateGL_t, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<BlendStateGL_t, long long> > >::RemoveAll() [T = BlendStateGL_t, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<BlendStateGL_t, long long> >]
void CUtlLinkedList<BlendStateGL_t, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<BlendStateGL_t, long long> > >::Unlink(I) [T = BlendStateGL_t, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<BlendStateGL_t, long long> >]
void CUtlLinkedList<CGLMProgramSeparable::UniformBinding_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CGLMProgramSeparable::UniformBinding_t, unsigned short>, unsigned short> >::LinkAfter(I, I) [T = CGLMProgramSeparable::UniformBinding_t, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<CGLMProgramSeparable::UniformBinding_t, unsigned short>, unsigned short>]
void CUtlLinkedList<CGLMProgramSeparable::UniformBinding_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CGLMProgramSeparable::UniformBinding_t, unsigned short>, unsigned short> >::RemoveAll() [T = CGLMProgramSeparable::UniformBinding_t, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<CGLMProgramSeparable::UniformBinding_t, unsigned short>, unsigned short>]
void CUtlLinkedList<CGLMProgramSeparable::UniformBinding_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CGLMProgramSeparable::UniformBinding_t, unsigned short>, unsigned short> >::Unlink(I) [T = CGLMProgramSeparable::UniformBinding_t, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<CGLMProgramSeparable::UniformBinding_t, unsigned short>, unsigned short>]
void CUtlLinkedList<COcclusionQueryMgr::OcclusionQueryObject_t, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<COcclusionQueryMgr::OcclusionQueryObject_t, long long> > >::Free(I) [T = COcclusionQueryMgr::OcclusionQueryObject_t, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<COcclusionQueryMgr::OcclusionQueryObject_t, long long> >]
void CUtlLinkedList<COcclusionQueryMgr::OcclusionQueryObject_t, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<COcclusionQueryMgr::OcclusionQueryObject_t, long long> > >::LinkBefore(I, I) [T = COcclusionQueryMgr::OcclusionQueryObject_t, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<COcclusionQueryMgr::OcclusionQueryObject_t, long long> >]
void CUtlLinkedList<COcclusionQueryMgr::OcclusionQueryObject_t, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<COcclusionQueryMgr::OcclusionQueryObject_t, long long> > >::RemoveAll() [T = COcclusionQueryMgr::OcclusionQueryObject_t, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<COcclusionQueryMgr::OcclusionQueryObject_t, long long> >]
void CUtlLinkedList<COcclusionQueryMgr::OcclusionQueryObject_t, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<COcclusionQueryMgr::OcclusionQueryObject_t, long long> > >::Unlink(I) [T = COcclusionQueryMgr::OcclusionQueryObject_t, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<COcclusionQueryMgr::OcclusionQueryObject_t, long long> >]
void CUtlLinkedList<CSwapChainBase *, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<CSwapChainBase *, long long> > >::Free(I) [T = CSwapChainBase *, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<CSwapChainBase *, long long> >]
void CUtlLinkedList<CSwapChainBase *, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<CSwapChainBase *, long long> > >::LinkBefore(I, I) [T = CSwapChainBase *, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<CSwapChainBase *, long long> >]
void CUtlLinkedList<CSwapChainBase *, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<CSwapChainBase *, long long> > >::RemoveAll() [T = CSwapChainBase *, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<CSwapChainBase *, long long> >]
void CUtlLinkedList<CSwapChainBase *, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<CSwapChainBase *, long long> > >::Unlink(I) [T = CSwapChainBase *, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<CSwapChainBase *, long long> >]
void CUtlLinkedList<DepthStencilStateGL_t, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<DepthStencilStateGL_t, long long> > >::LinkBefore(I, I) [T = DepthStencilStateGL_t, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<DepthStencilStateGL_t, long long> >]
void CUtlLinkedList<DepthStencilStateGL_t, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<DepthStencilStateGL_t, long long> > >::RemoveAll() [T = DepthStencilStateGL_t, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<DepthStencilStateGL_t, long long> >]
void CUtlLinkedList<DepthStencilStateGL_t, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<DepthStencilStateGL_t, long long> > >::Unlink(I) [T = DepthStencilStateGL_t, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<DepthStencilStateGL_t, long long> >]
void CUtlLinkedList<RasterizerStateGL_t, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<RasterizerStateGL_t, long long> > >::LinkBefore(I, I) [T = RasterizerStateGL_t, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<RasterizerStateGL_t, long long> >]
void CUtlLinkedList<RasterizerStateGL_t, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<RasterizerStateGL_t, long long> > >::RemoveAll() [T = RasterizerStateGL_t, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<RasterizerStateGL_t, long long> >]
void CUtlLinkedList<RasterizerStateGL_t, long long, true, long long, CUtlFixedMemory<UtlLinkedListElem_t<RasterizerStateGL_t, long long> > >::Unlink(I) [T = RasterizerStateGL_t, S = long long, ML = true, I = long long, M = CUtlFixedMemory<UtlLinkedListElem_t<RasterizerStateGL_t, long long> >]
void CUtlLinkedList<__GLsync *, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<__GLsync *, unsigned short>, unsigned short> >::Free(I) [T = __GLsync *, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<__GLsync *, unsigned short>, unsigned short>]
void CUtlLinkedList<__GLsync *, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<__GLsync *, unsigned short>, unsigned short> >::LinkAfter(I, I) [T = __GLsync *, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<__GLsync *, unsigned short>, unsigned short>]
void CUtlLinkedList<__GLsync *, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<__GLsync *, unsigned short>, unsigned short> >::RemoveAll() [T = __GLsync *, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<__GLsync *, unsigned short>, unsigned short>]
void CUtlLinkedList<__GLsync *, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<__GLsync *, unsigned short>, unsigned short> >::Unlink(I) [T = __GLsync *, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<__GLsync *, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<CGLShaderHashValue, ProgramBinaryGL_t, unsigned int, bool (*)(const CGLShaderHashValue &, const CGLShaderHashValue &)>::Node_t, unsigned int, CUtlMap<CGLShaderHashValue, ProgramBinaryGL_t, unsigned int, bool (*)(const CGLShaderHashValue &, const CGLShaderHashValue &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CGLShaderHashValue, ProgramBinaryGL_t, unsigned int, bool (*)(const CGLShaderHashValue &, const CGLShaderHashValue &)>::Node_t, unsigned int>, unsigned int> >::RemoveAll() [T = CUtlMap<CGLShaderHashValue, ProgramBinaryGL_t, unsigned int, bool (*)(const CGLShaderHashValue &, const CGLShaderHashValue &)>::Node_t, I = unsigned int, L = CUtlMap<CGLShaderHashValue, ProgramBinaryGL_t, unsigned int, bool (*)(const CGLShaderHashValue &, const CGLShaderHashValue &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<CGLShaderHashValue, ProgramBinaryGL_t, unsigned int, bool (*)(const CGLShaderHashValue &, const CGLShaderHashValue &)>::Node_t, unsigned int>, unsigned int>]
void CUtlRBTree<CUtlMap<OsSpecificWindowHandle_t__ *, SDL_Window *, unsigned short, bool (*)(OsSpecificWindowHandle_t__ *const &, OsSpecificWindowHandle_t__ *const &)>::Node_t, unsigned short, CUtlMap<OsSpecificWindowHandle_t__ *, SDL_Window *, unsigned short, bool (*)(OsSpecificWindowHandle_t__ *const &, OsSpecificWindowHandle_t__ *const &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<OsSpecificWindowHandle_t__ *, SDL_Window *, unsigned short, bool (*)(OsSpecificWindowHandle_t__ *const &, OsSpecificWindowHandle_t__ *const &)>::Node_t, unsigned short>, unsigned short> >::RemoveAll() [T = CUtlMap<OsSpecificWindowHandle_t__ *, SDL_Window *, unsigned short, bool (*)(OsSpecificWindowHandle_t__ *const &, OsSpecificWindowHandle_t__ *const &)>::Node_t, I = unsigned short, L = CUtlMap<OsSpecificWindowHandle_t__ *, SDL_Window *, unsigned short, bool (*)(OsSpecificWindowHandle_t__ *const &, OsSpecificWindowHandle_t__ *const &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<OsSpecificWindowHandle_t__ *, SDL_Window *, unsigned short, bool (*)(OsSpecificWindowHandle_t__ *const &, OsSpecificWindowHandle_t__ *const &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<RenderTargetState_t, CGLMFBO *, unsigned short, bool (*)(const RenderTargetState_t &, const RenderTargetState_t &)>::Node_t, unsigned short, CUtlMap<RenderTargetState_t, CGLMFBO *, unsigned short, bool (*)(const RenderTargetState_t &, const RenderTargetState_t &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<RenderTargetState_t, CGLMFBO *, unsigned short, bool (*)(const RenderTargetState_t &, const RenderTargetState_t &)>::Node_t, unsigned short>, unsigned short> >::FreeNode(I) [T = CUtlMap<RenderTargetState_t, CGLMFBO *, unsigned short, bool (*)(const RenderTargetState_t &, const RenderTargetState_t &)>::Node_t, I = unsigned short, L = CUtlMap<RenderTargetState_t, CGLMFBO *, unsigned short, bool (*)(const RenderTargetState_t &, const RenderTargetState_t &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<RenderTargetState_t, CGLMFBO *, unsigned short, bool (*)(const RenderTargetState_t &, const RenderTargetState_t &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<RenderTargetState_t, CGLMFBO *, unsigned short, bool (*)(const RenderTargetState_t &, const RenderTargetState_t &)>::Node_t, unsigned short, CUtlMap<RenderTargetState_t, CGLMFBO *, unsigned short, bool (*)(const RenderTargetState_t &, const RenderTargetState_t &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<RenderTargetState_t, CGLMFBO *, unsigned short, bool (*)(const RenderTargetState_t &, const RenderTargetState_t &)>::Node_t, unsigned short>, unsigned short> >::RemoveAll() [T = CUtlMap<RenderTargetState_t, CGLMFBO *, unsigned short, bool (*)(const RenderTargetState_t &, const RenderTargetState_t &)>::Node_t, I = unsigned short, L = CUtlMap<RenderTargetState_t, CGLMFBO *, unsigned short, bool (*)(const RenderTargetState_t &, const RenderTargetState_t &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<RenderTargetState_t, CGLMFBO *, unsigned short, bool (*)(const RenderTargetState_t &, const RenderTargetState_t &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<RenderTargetState_t, CGLMFBO *, unsigned short, bool (*)(const RenderTargetState_t &, const RenderTargetState_t &)>::Node_t, unsigned short, CUtlMap<RenderTargetState_t, CGLMFBO *, unsigned short, bool (*)(const RenderTargetState_t &, const RenderTargetState_t &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<RenderTargetState_t, CGLMFBO *, unsigned short, bool (*)(const RenderTargetState_t &, const RenderTargetState_t &)>::Node_t, unsigned short>, unsigned short> >::RemoveAt(I) [T = CUtlMap<RenderTargetState_t, CGLMFBO *, unsigned short, bool (*)(const RenderTargetState_t &, const RenderTargetState_t &)>::Node_t, I = unsigned short, L = CUtlMap<RenderTargetState_t, CGLMFBO *, unsigned short, bool (*)(const RenderTargetState_t &, const RenderTargetState_t &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<RenderTargetState_t, CGLMFBO *, unsigned short, bool (*)(const RenderTargetState_t &, const RenderTargetState_t &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RemoveAll() [T = CUtlSymbolTable::CStringPoolIndex, I = unsigned short, L = CUtlSymbolTable::CLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>]
void CUtlRBTree<void *, int, bool (*)(void *const &, void *const &), CUtlMemory<UtlRBTreeNode_t<void *, int>, int> >::FreeNode(I) [T = void *, I = int, L = bool (*)(void *const &, void *const &), M = CUtlMemory<UtlRBTreeNode_t<void *, int>, int>]
void CUtlRBTree<void *, int, bool (*)(void *const &, void *const &), CUtlMemory<UtlRBTreeNode_t<void *, int>, int> >::RemoveAll() [T = void *, I = int, L = bool (*)(void *const &, void *const &), M = CUtlMemory<UtlRBTreeNode_t<void *, int>, int>]
void CUtlRBTree<void *, int, bool (*)(void *const &, void *const &), CUtlMemory<UtlRBTreeNode_t<void *, int>, int> >::RemoveAt(I) [T = void *, I = int, L = bool (*)(void *const &, void *const &), M = CUtlMemory<UtlRBTreeNode_t<void *, int>, int>]
void CUtlRBTree<void *, int, bool (*)(void *const &, void *const &), CUtlMemory<UtlRBTreeNode_t<void *, int>, int> >::SetLessFunc(const LessFunc_t &) [T = void *, I = int, L = bool (*)(void *const &, void *const &), M = CUtlMemory<UtlRBTreeNode_t<void *, int>, int>]
void CUtlStreamBuffer::Close()
void CUtlString::SetDirect(const char *, int)
void CUtlStringBuilder::Data::SetError(bool)
void CVertexBufferGL::Reset(const BufferDesc_t)
void CVertexBufferGL::SetVertexData(const void *, uint, uint, CRenderContextGL *)
void CVertexBufferGL::Unlock(uint, CRenderContextGL *)
void CVertexBufferGL::UnlockRegion(int32, int32, LockDesc_t *, CRenderContextGL *)
void CWeakHandle<InfoForResourceTypeCTextureBase>::InitUntyped(ResourceHandle_t) [T = InfoForResourceTypeCTextureBase]
void CallPostConnect()
void ConVar_Register(int64, IConCommandBaseAccessor *)
void ConVar_Unregister()
void ConnectInterfaces(CreateInterfaceFn *, int)
void DecompressImage(CUtlBuffer &, const TGAHeader_t &, Bitmap_t *)
void DepalettizeImage(Bitmap_t *, const TGAHeader_t &, const uint8 *)
void DisconnectInterfaces()
void DisconnectTier2Libraries()
void GLContextSet(GLViewportBox_t *)
void GLMContext::BindBufferToCtx(GLMBufferType_t, CGLMBuffer *, bool)
void GLMContext::Blit(CGLMTex *, GLMRect *, uint, uint, CGLMTex *, GLMRect *, uint, uint, uint)
void GLMContext::DelFBO(CGLMFBO *)
void GLMContext::DrawIndexedPrimitive(RenderPrimitiveType_t, uint, uint, uint, uint, uint)
void GLMContext::DrawIndexedPrimitiveInstanced(RenderPrimitiveType_t, int, uint, uint, uint, uint, uint)
void GLMContext::DrawPrimitive(RenderPrimitiveType_t, uint, uint)
void GLMContext::DrawPrimitiveInstanced(RenderPrimitiveType_t, uint, uint, uint)
void GLMContext::ForceFlushStates()
void GLMContext::PreloadTex(CGLMTex *, bool)
void GLMContext::ResetStatesForDisplay(const GLMDisplayParams *)
void GLMContext::ResolveTex(CGLMTex *, bool)
void GLMContext::ResolveUsingShaders(CGLMTex *, const GLMRect *, CGLMTex *, const GLMRect *, GLMBlitFormatClass_t, uint, uint)
void GLMContext::ScrubFBOMap(CGLMTex *)
void GLMContext::SetRenderState(GLMStateBlockType_t, DWORD)
void GLMContext::SetRenderTarget(uint32, CGLMTex *, int)
void GLMContext::SetStreamSource(uint, CGLMBuffer *, uint, uint)
void GLMContext::UpdateBoundFBO()
void GLMDisplayInfo::PopulateModes()
void GLMRendererInfo::PopulateDisplays()
void GLMTexSamplingParams::SetToSamplerObject(GLuint) const
void GL_Debug_Output_Callback(GLenum, GLenum, GLuint, GLenum, GLsizei, const GLchar *, GLvoid *)
void ImageLoader::ConvertFromATIxN(const uint8 *, CDestPixel *, int, int, bool) [CDestPixel = BGRA8888_t]
void ImageLoader::ConvertFromDXT1(const uint8 *, CDestPixel *, int, int) [CDestPixel = BGR565_t]
void ImageLoader::ConvertFromDXT1(const uint8 *, CDestPixel *, int, int) [CDestPixel = BGR888_t]
void ImageLoader::ConvertFromDXT1(const uint8 *, CDestPixel *, int, int) [CDestPixel = BGRA4444_t]
void ImageLoader::ConvertFromDXT1(const uint8 *, CDestPixel *, int, int) [CDestPixel = BGRA5551_t]
void ImageLoader::ConvertFromDXT1(const uint8 *, CDestPixel *, int, int) [CDestPixel = BGRA8888_t]
void ImageLoader::ConvertFromDXT1(const uint8 *, CDestPixel *, int, int) [CDestPixel = RGB888_t]
void ImageLoader::ConvertFromDXT1(const uint8 *, CDestPixel *, int, int) [CDestPixel = RGBA8888_t]
void ImageLoader::ConvertFromDXT3(const uint8 *, CDestPixel *, int, int) [CDestPixel = BGRA8888_t]
void ImageLoader::ConvertFromDXT5(const uint8 *, CDestPixel *, int, int) [CDestPixel = BGRA4444_t]
void ImageLoader::ConvertFromDXT5(const uint8 *, CDestPixel *, int, int) [CDestPixel = BGRA5551_t]
void ImageLoader::ConvertFromDXT5(const uint8 *, CDestPixel *, int, int) [CDestPixel = BGRA8888_t]
void ImageLoader::ConvertFromDXT5(const uint8 *, CDestPixel *, int, int) [CDestPixel = RGBA8888_t]
void ImageLoader::ConvertFromDXT5IgnoreAlpha(const uint8 *, CDestPixel *, int, int) [CDestPixel = BGR565_t]
void ImageLoader::ConvertFromDXT5IgnoreAlpha(const uint8 *, CDestPixel *, int, int) [CDestPixel = BGR888_t]
void ImageLoader::ConvertFromDXT5IgnoreAlpha(const uint8 *, CDestPixel *, int, int) [CDestPixel = RGB888_t]
void ImageLoader::DecodeAlpha3BitLinear(CDestPixel *, ImageLoader::DXTAlphaBlock3BitLinear *, int, int) [CDestPixel = BGRA4444_t]
void ImageLoader::DecodeAlpha3BitLinear(CDestPixel *, ImageLoader::DXTAlphaBlock3BitLinear *, int, int) [CDestPixel = BGRA5551_t]
void ImageLoader::DecodeAlpha3BitLinear(CDestPixel *, ImageLoader::DXTAlphaBlock3BitLinear *, int, int) [CDestPixel = BGRA8888_t]
void ImageLoader::DecodeAlpha3BitLinear(CDestPixel *, ImageLoader::DXTAlphaBlock3BitLinear *, int, int) [CDestPixel = RGBA8888_t]
void ImageLoader::DecodeAlphaImageDataBlock(CDestPixel *, ImageLoader::DXTAlphaImageDataBlock *, int, int) [CDestPixel = BGRA8888_t]
void ImageLoader::DecodeColorBlock(CDestPixel *, ImageLoader::DXTColBlock *, int, BGRA8888_t *, BGRA8888_t *, BGRA8888_t *, BGRA8888_t *) [CDestPixel = BGR565_t]
void ImageLoader::DecodeColorBlock(CDestPixel *, ImageLoader::DXTColBlock *, int, BGRA8888_t *, BGRA8888_t *, BGRA8888_t *, BGRA8888_t *) [CDestPixel = BGR888_t]
void ImageLoader::DecodeColorBlock(CDestPixel *, ImageLoader::DXTColBlock *, int, BGRA8888_t *, BGRA8888_t *, BGRA8888_t *, BGRA8888_t *) [CDestPixel = BGRA4444_t]
void ImageLoader::DecodeColorBlock(CDestPixel *, ImageLoader::DXTColBlock *, int, BGRA8888_t *, BGRA8888_t *, BGRA8888_t *, BGRA8888_t *) [CDestPixel = BGRA5551_t]
void ImageLoader::DecodeColorBlock(CDestPixel *, ImageLoader::DXTColBlock *, int, BGRA8888_t *, BGRA8888_t *, BGRA8888_t *, BGRA8888_t *) [CDestPixel = BGRA8888_t]
void ImageLoader::DecodeColorBlock(CDestPixel *, ImageLoader::DXTColBlock *, int, BGRA8888_t *, BGRA8888_t *, BGRA8888_t *, BGRA8888_t *) [CDestPixel = RGB888_t]
void ImageLoader::DecodeColorBlock(CDestPixel *, ImageLoader::DXTColBlock *, int, BGRA8888_t *, BGRA8888_t *, BGRA8888_t *, BGRA8888_t *) [CDestPixel = RGBA8888_t]
void IntrusiveList::AddToEndWithTail(T *&, V *, T *&) [T = CCommandStream, V = CCommandStream]
void IntrusiveList::RemoveFromDList(T *&, T *) [T = CIndexBufferBase]
void IntrusiveList::RemoveFromDList(T *&, T *) [T = CVertexBufferBase]
void KeyValues::AddSubKey(KeyValues *)
void KeyValues::AddSubkeyUsingKnownLastChild(KeyValues *, KeyValues *)
void KeyValues::AppendIncludedKeys(CUtlVector<KeyValues *> &)
void KeyValues::MergeBaseKeys(CUtlVector<KeyValues *> &)
void KeyValues::ParseIncludedKeys(const char *, const char *, IBaseFileSystem *, const char *, CUtlVector<KeyValues *> &, GetSymbolProc_t)
void KeyValues::RecursiveLoadFromBuffer(CKeyValuesErrorStack *, const char *, CKeyValuesTokenReader &, GetSymbolProc_t)
void KeyValues::RecursiveMergeKeyValues(KeyValues *)
void MathLib_Init()
void PSDReadCompressedChannelsInternal(CUtlBuffer &, int, int, int, PSDMode_t, PSDPalette_t &, Bitmap_t &) [bNeedsToGoThroughUtlBufferGet = false]
void PSDReadCompressedChannelsInternal(CUtlBuffer &, int, int, int, PSDMode_t, PSDPalette_t &, Bitmap_t &) [bNeedsToGoThroughUtlBufferGet = true]
void PSDReadUncompressedChannels(CUtlBuffer &, int, int, PSDMode_t, PSDPalette_t &, Bitmap_t &)
void PerfMarkers::BeginNamedEvent(Color, const char *, ...)
void PerfMarkers::EndNamedEvent()
void PerfMarkers::SetMarker(Color, const char *, ...)
void ReconnectInterface(CreateInterfaceFn, const char *, void **)
void RegisterInterface(CreateInterfaceFn, const char *, void **)
void ReleaseGLTexture(TextureObjectInfo_t *)
void SchemaRecurseData(CCaller &, void *, const CSchemaType *, FieldIntrospectionHandle_t, bool) [CCaller = HandleCaller_t]
void SchemaRecurseData(CCaller &, void *, const CSchemaType *, FieldIntrospectionHandle_t, bool) [CCaller = TraverseCaller]
void SetRenderStateCommand(GLMContext *, const CommandBindTextureDS_t &, HardwareStateGL_t *)
void SetRenderStateCommand(GLMContext *, const CommandBindTextureGS_t &, HardwareStateGL_t *)
void SetRenderStateCommand(GLMContext *, const CommandBindTextureHS_t &, HardwareStateGL_t *)
void SetRenderStateCommand(GLMContext *, const CommandBindTexturePS_t &, HardwareStateGL_t *)
void SetRenderStateCommand(GLMContext *, const CommandBindTextureVS_t &, HardwareStateGL_t *)
void SetSamplerState(GLMContext *, const CSamplerStateDesc &, HardwareStateGL_t *, RenderShaderType_t, int, int)
void SetTexturePixelsForRect(const SequenceSampleTextureCoords_t::FrameRect_t &, uint16 *, const uint16, const uint16)
void TextureSpecification_t::InitFromSpec(const CTextureCreationDesc *)
void WriteDataIntoTexture(CGLMTex *, int, int, int, int, int, int, int, int, ImageFormat, uint8 *, const ImageFormatInfo_t &, uint)
void main()
void main()  
vpcfA
vpw'H
vr_spew_time
vs_3_0
vstdlib
vtable for __cxxabiv1::__class_type_info
vtable for __cxxabiv1::__si_class_type_info
vtable for __cxxabiv1::__vmi_class_type_info
vtex1
vtexE1
vtexH
vtexL
vtexu
w2E;k t,L
w@Hcq
wTL;]
which->m_pNext->m_pPrev==which
which->m_pPrev->m_pNext==which
wrinkle
writeBox.xmin == 0
writeBox.ymin == 0
x >= 0 && x < m_nWidth
x[A\A]A^A_]
x[A^A_]
xffff.
xs == 0
y >= 0 && y < m_nHeight
ys == 0
zlib memory error
zlib stream error
zlib version error
{8HcK8H
|$ D9
|$ E1
|)0H9
|gffffff.
}#A9G,r
}HA;EP}
~$IcF
~-fff.
~3IcBxI
~Mfffff.
~Qfffff.
~Wffff.
~Yfff.
~iLc_8D
